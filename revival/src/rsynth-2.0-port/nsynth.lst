   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"nsynth.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.resonator,"ax",%progbits
  21              		.align	1
  22              		.thumb
  23              		.thumb_func
  25              	resonator:
  26              	.LFB125:
  27              		.file 1 "lib/rsynth-2.0-port/nsynth.c"
   1:lib/rsynth-2.0-port/nsynth.c **** #include <config.h>
   2:lib/rsynth-2.0-port/nsynth.c **** 
   3:lib/rsynth-2.0-port/nsynth.c **** 
   4:lib/rsynth-2.0-port/nsynth.c **** /* nsynth.c
   5:lib/rsynth-2.0-port/nsynth.c ****  */
   6:lib/rsynth-2.0-port/nsynth.c **** 
   7:lib/rsynth-2.0-port/nsynth.c **** /* Copyright            1982                    by Dennis H. Klatt
   8:lib/rsynth-2.0-port/nsynth.c **** 
   9:lib/rsynth-2.0-port/nsynth.c ****  *      Klatt synthesizer
  10:lib/rsynth-2.0-port/nsynth.c ****  *         Modified version of synthesizer described in
  11:lib/rsynth-2.0-port/nsynth.c ****  *         J. Acoust. Soc. Am., Mar. 1980. -- new voicing
  12:lib/rsynth-2.0-port/nsynth.c ****  *         source.
  13:lib/rsynth-2.0-port/nsynth.c ****  *
  14:lib/rsynth-2.0-port/nsynth.c ****  * Edit history
  15:lib/rsynth-2.0-port/nsynth.c ****  * 000001 10-Mar-83 DK  Initial creation.
  16:lib/rsynth-2.0-port/nsynth.c ****  * 000002  5-May-83 DK  Fix bug in operation of parallel F1
  17:lib/rsynth-2.0-port/nsynth.c ****  * 000003  7-Jul-83 DK  Allow parallel B1 to vary, and if ALL_PARALLEL,
  18:lib/rsynth-2.0-port/nsynth.c ****  *                      also allow B2 and B3 to vary
  19:lib/rsynth-2.0-port/nsynth.c ****  * 000004 26-Jul-83 DK  Get rid of mulsh, use short for VAX
  20:lib/rsynth-2.0-port/nsynth.c ****  * 000005 24-Oct-83 DK  Split off parwavtab.c, change short to int
  21:lib/rsynth-2.0-port/nsynth.c ****  * 000006 16-Nov-83 DK  Make samrate a variable, use exp(), cos() rand()
  22:lib/rsynth-2.0-port/nsynth.c ****  * 000007 17-Nov-83 DK  Convert to float, remove  cpsw, add set outsl
  23:lib/rsynth-2.0-port/nsynth.c ****  * 000008 28-Nov-83 DK  Add simple impulsive glottal source option
  24:lib/rsynth-2.0-port/nsynth.c ****  * 000009  7-Dec-83 DK  Use spkrdef[7] to select impulse or natural voicing
  25:lib/rsynth-2.0-port/nsynth.c ****  *                       and update cascade F1,..,F6 at update times
  26:lib/rsynth-2.0-port/nsynth.c ****  * 000010 19-Dec-83 DK  Add subroutine no_rad_char() to get rid of rad char
  27:lib/rsynth-2.0-port/nsynth.c ****  * 000011 28-Jan-84 DK  Allow up to 8 formants in cascade branch F7 fixed
  28:lib/rsynth-2.0-port/nsynth.c ****  *                       at 6.5 kHz, F8 fixed at 7.5 kHz
  29:lib/rsynth-2.0-port/nsynth.c ****  * 000012 14-Feb-84 DK  Fix bug in 'os' options so os>12 works
  30:lib/rsynth-2.0-port/nsynth.c ****  * 000013 17-May-84 DK  Add G0 code
  31:lib/rsynth-2.0-port/nsynth.c ****  * 000014 12-Mar-85 DHW modify for Haskins environment
  32:lib/rsynth-2.0-port/nsynth.c ****  * 000015 11-Jul-87 LG  modificiations for PC
  33:lib/rsynth-2.0-port/nsynth.c ****  * 000016 20-Apr-91 ATS Modified for SPARCSTATION
  34:lib/rsynth-2.0-port/nsynth.c ****  */
  35:lib/rsynth-2.0-port/nsynth.c **** 
  36:lib/rsynth-2.0-port/nsynth.c **** #include "stm32f4xx.h"
  37:lib/rsynth-2.0-port/nsynth.c **** #include "platform_config.h"
  38:lib/rsynth-2.0-port/nsynth.c **** #include "hw_config.h"
  39:lib/rsynth-2.0-port/nsynth.c **** 
  40:lib/rsynth-2.0-port/nsynth.c **** #include <stdio.h>
  41:lib/rsynth-2.0-port/nsynth.c **** #include <math.h>
  42:lib/rsynth-2.0-port/nsynth.c **** #include "nsynth.h"
  43:lib/rsynth-2.0-port/nsynth.c **** #ifndef PI
  44:lib/rsynth-2.0-port/nsynth.c **** #ifndef M_PI                      /* <math.h> */
  45:lib/rsynth-2.0-port/nsynth.c **** #define PI               3.1415927
  46:lib/rsynth-2.0-port/nsynth.c **** #else /* M_PI */
  47:lib/rsynth-2.0-port/nsynth.c **** #define PI               M_PI
  48:lib/rsynth-2.0-port/nsynth.c **** #endif /* M_PI */
  49:lib/rsynth-2.0-port/nsynth.c **** #endif
  50:lib/rsynth-2.0-port/nsynth.c **** 
  51:lib/rsynth-2.0-port/nsynth.c **** #define ONE 1.0F
  52:lib/rsynth-2.0-port/nsynth.c **** 
  53:lib/rsynth-2.0-port/nsynth.c **** typedef struct
  54:lib/rsynth-2.0-port/nsynth.c ****  {
  55:lib/rsynth-2.0-port/nsynth.c ****   char *name;
  56:lib/rsynth-2.0-port/nsynth.c ****   float a;
  57:lib/rsynth-2.0-port/nsynth.c ****   float b;
  58:lib/rsynth-2.0-port/nsynth.c ****   float c;
  59:lib/rsynth-2.0-port/nsynth.c ****   float p1;
  60:lib/rsynth-2.0-port/nsynth.c ****   float p2;
  61:lib/rsynth-2.0-port/nsynth.c ****  }
  62:lib/rsynth-2.0-port/nsynth.c **** resonator_t, *resonator_ptr;
  63:lib/rsynth-2.0-port/nsynth.c **** 
  64:lib/rsynth-2.0-port/nsynth.c **** /* Various global variables */
  65:lib/rsynth-2.0-port/nsynth.c **** 
  66:lib/rsynth-2.0-port/nsynth.c **** int time_count = 0;
  67:lib/rsynth-2.0-port/nsynth.c **** //yama static warnsw;                    /* JPI added for f0 flutter */
  68:lib/rsynth-2.0-port/nsynth.c **** static int warnsw;                    /* JPI added for f0 flutter */
  69:lib/rsynth-2.0-port/nsynth.c **** 
  70:lib/rsynth-2.0-port/nsynth.c **** /* COUNTERS */
  71:lib/rsynth-2.0-port/nsynth.c **** 
  72:lib/rsynth-2.0-port/nsynth.c **** static long nper;                 /* Current loc in voicing period   40000 samp/s */
  73:lib/rsynth-2.0-port/nsynth.c **** 
  74:lib/rsynth-2.0-port/nsynth.c **** /* COUNTER LIMITS */
  75:lib/rsynth-2.0-port/nsynth.c **** 
  76:lib/rsynth-2.0-port/nsynth.c **** static long T0;                   /* Fundamental period in output samples times 4 */
  77:lib/rsynth-2.0-port/nsynth.c **** static long nopen;                /* Number of samples in open phase of period  */
  78:lib/rsynth-2.0-port/nsynth.c **** static long nmod;                 /* Position in period to begin noise amp. modul */
  79:lib/rsynth-2.0-port/nsynth.c **** 
  80:lib/rsynth-2.0-port/nsynth.c **** /* Variables that have to stick around for awhile, and thus locals
  81:lib/rsynth-2.0-port/nsynth.c ****    are not appropriate 
  82:lib/rsynth-2.0-port/nsynth.c ****  */
  83:lib/rsynth-2.0-port/nsynth.c **** 
  84:lib/rsynth-2.0-port/nsynth.c **** /* Incoming parameter Variables which need to be updated synchronously  */
  85:lib/rsynth-2.0-port/nsynth.c **** 
  86:lib/rsynth-2.0-port/nsynth.c **** static long F0hz10;               /* Voicing fund freq in Hz  */
  87:lib/rsynth-2.0-port/nsynth.c **** static long AVdb;                 /* Amp of voicing in dB,    0 to   70  */
  88:lib/rsynth-2.0-port/nsynth.c **** static long Kskew;                /* Skewness of alternate periods,0 to   40  */
  89:lib/rsynth-2.0-port/nsynth.c **** 
  90:lib/rsynth-2.0-port/nsynth.c **** /* Various amplitude variables used in main loop */
  91:lib/rsynth-2.0-port/nsynth.c **** 
  92:lib/rsynth-2.0-port/nsynth.c **** static float amp_voice;           /* AVdb converted to linear gain  */
  93:lib/rsynth-2.0-port/nsynth.c **** static float amp_bypas;           /* AB converted to linear gain  */
  94:lib/rsynth-2.0-port/nsynth.c **** static float par_amp_voice;       /* AVpdb converted to linear gain  */
  95:lib/rsynth-2.0-port/nsynth.c **** static float amp_aspir;           /* AP converted to linear gain  */
  96:lib/rsynth-2.0-port/nsynth.c **** static float amp_frica;           /* AF converted to linear gain  */
  97:lib/rsynth-2.0-port/nsynth.c **** static float amp_breth;           /* ATURB converted to linear gain  */
  98:lib/rsynth-2.0-port/nsynth.c **** 
  99:lib/rsynth-2.0-port/nsynth.c **** /* State variables of sound sources */
 100:lib/rsynth-2.0-port/nsynth.c **** 
 101:lib/rsynth-2.0-port/nsynth.c **** static long skew;                 /* Alternating jitter, in half-period units  */
 102:lib/rsynth-2.0-port/nsynth.c **** 
 103:lib/rsynth-2.0-port/nsynth.c **** static float natglot_a;           /* Makes waveshape of glottal pulse when open  */
 104:lib/rsynth-2.0-port/nsynth.c **** static float natglot_b;           /* Makes waveshape of glottal pulse when open  */
 105:lib/rsynth-2.0-port/nsynth.c **** static float vwave;               /* Ditto, but before multiplication by AVdb  */
 106:lib/rsynth-2.0-port/nsynth.c **** static float vlast;               /* Previous output of voice  */
 107:lib/rsynth-2.0-port/nsynth.c **** static float nlast;               /* Previous output of random number generator  */
 108:lib/rsynth-2.0-port/nsynth.c **** static float glotlast;            /* Previous value of glotout  */
 109:lib/rsynth-2.0-port/nsynth.c **** static float decay;               /* TLTdb converted to exponential time const  */
 110:lib/rsynth-2.0-port/nsynth.c **** static float onemd;               /* in voicing one-pole low-pass filter  */
 111:lib/rsynth-2.0-port/nsynth.c **** static float minus_pi_t;          /* func. of sample rate */
 112:lib/rsynth-2.0-port/nsynth.c **** static float two_pi_t;            /* func. of sample rate */
 113:lib/rsynth-2.0-port/nsynth.c **** 
 114:lib/rsynth-2.0-port/nsynth.c **** 
 115:lib/rsynth-2.0-port/nsynth.c **** /* INTERNAL MEMORY FOR DIGITAL RESONATORS AND ANTIRESONATOR  */
 116:lib/rsynth-2.0-port/nsynth.c **** 
 117:lib/rsynth-2.0-port/nsynth.c **** static resonator_t rnpp =
 118:lib/rsynth-2.0-port/nsynth.c **** {"parallel nasal pole"};
 119:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r1p =
 120:lib/rsynth-2.0-port/nsynth.c **** {"parallel 1st formant"};
 121:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r2p =
 122:lib/rsynth-2.0-port/nsynth.c **** {"parallel 2nd formant"};
 123:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r3p =
 124:lib/rsynth-2.0-port/nsynth.c **** {"parallel 3rd formant"};
 125:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r4p =
 126:lib/rsynth-2.0-port/nsynth.c **** {"parallel 4th formant"};
 127:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r5p =
 128:lib/rsynth-2.0-port/nsynth.c **** {"parallel 5th formant"};
 129:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r6p =
 130:lib/rsynth-2.0-port/nsynth.c **** {"parallel 6th formant"};
 131:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r1c =
 132:lib/rsynth-2.0-port/nsynth.c **** {"cascade 1st formant"};
 133:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r2c =
 134:lib/rsynth-2.0-port/nsynth.c **** {"cascade 2nd formant"};
 135:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r3c =
 136:lib/rsynth-2.0-port/nsynth.c **** {"cascade 3rd formant"};
 137:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r4c =
 138:lib/rsynth-2.0-port/nsynth.c **** {"cascade 4th formant"};
 139:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r5c =
 140:lib/rsynth-2.0-port/nsynth.c **** {"cascade 5th formant"};
 141:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r6c =
 142:lib/rsynth-2.0-port/nsynth.c **** {"cascade 6th formant"};
 143:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r7c =
 144:lib/rsynth-2.0-port/nsynth.c **** {"cascade 7th formant"};
 145:lib/rsynth-2.0-port/nsynth.c **** static resonator_t r8c =
 146:lib/rsynth-2.0-port/nsynth.c **** {"cascade 8th formant"};
 147:lib/rsynth-2.0-port/nsynth.c **** static resonator_t rnpc =
 148:lib/rsynth-2.0-port/nsynth.c **** {"cascade nasal pole"};
 149:lib/rsynth-2.0-port/nsynth.c **** static resonator_t rnz =
 150:lib/rsynth-2.0-port/nsynth.c **** {"cascade nasal zero"};
 151:lib/rsynth-2.0-port/nsynth.c **** static resonator_t rgl =
 152:lib/rsynth-2.0-port/nsynth.c **** {"crit-damped glot low-pass filter"};
 153:lib/rsynth-2.0-port/nsynth.c **** static resonator_t rlp =
 154:lib/rsynth-2.0-port/nsynth.c **** {"downsamp low-pass filter"};
 155:lib/rsynth-2.0-port/nsynth.c **** static resonator_t rout =
 156:lib/rsynth-2.0-port/nsynth.c **** {"output low-pass"};
 157:lib/rsynth-2.0-port/nsynth.c **** 
 158:lib/rsynth-2.0-port/nsynth.c **** /*
 159:lib/rsynth-2.0-port/nsynth.c ****  * Constant natglot[] controls shape of glottal pulse as a function
 160:lib/rsynth-2.0-port/nsynth.c ****  * of desired duration of open phase N0
 161:lib/rsynth-2.0-port/nsynth.c ****  * (Note that N0 is specified in terms of 40,000 samples/sec of speech)
 162:lib/rsynth-2.0-port/nsynth.c ****  *
 163:lib/rsynth-2.0-port/nsynth.c ****  *    Assume voicing waveform V(t) has form: k1 t**2 - k2 t**3
 164:lib/rsynth-2.0-port/nsynth.c ****  *
 165:lib/rsynth-2.0-port/nsynth.c ****  *    If the radiation characterivative, a temporal derivative
 166:lib/rsynth-2.0-port/nsynth.c ****  *      is folded in, and we go from continuous time to discrete
 167:lib/rsynth-2.0-port/nsynth.c ****  *      integers n:  dV/dt = vwave[n]
 168:lib/rsynth-2.0-port/nsynth.c ****  *                         = sum over i=1,2,...,n of { a - (i * b) }
 169:lib/rsynth-2.0-port/nsynth.c ****  *                         = a n  -  b/2 n**2
 170:lib/rsynth-2.0-port/nsynth.c ****  *
 171:lib/rsynth-2.0-port/nsynth.c ****  *      where the  constants a and b control the detailed shape
 172:lib/rsynth-2.0-port/nsynth.c ****  *      and amplitude of the voicing waveform over the open
 173:lib/rsynth-2.0-port/nsynth.c ****  *      potion of the voicing cycle "nopen".
 174:lib/rsynth-2.0-port/nsynth.c ****  *
 175:lib/rsynth-2.0-port/nsynth.c ****  *    Let integral of dV/dt have no net dc flow --> a = (b * nopen) / 3
 176:lib/rsynth-2.0-port/nsynth.c ****  *
 177:lib/rsynth-2.0-port/nsynth.c ****  *    Let maximum of dUg(n)/dn be constant --> b = gain / (nopen * nopen)
 178:lib/rsynth-2.0-port/nsynth.c ****  *      meaning as nopen gets bigger, V has bigger peak proportional to n
 179:lib/rsynth-2.0-port/nsynth.c ****  *
 180:lib/rsynth-2.0-port/nsynth.c ****  *    Thus, to generate the table below for 40 <= nopen <= 263:
 181:lib/rsynth-2.0-port/nsynth.c ****  *
 182:lib/rsynth-2.0-port/nsynth.c ****  *      natglot[nopen - 40] = 1920000 / (nopen * nopen)
 183:lib/rsynth-2.0-port/nsynth.c ****  */
 184:lib/rsynth-2.0-port/nsynth.c **** static const short natglot[224] =
 185:lib/rsynth-2.0-port/nsynth.c **** {
 186:lib/rsynth-2.0-port/nsynth.c ****  1200, 1142, 1088, 1038, 991, 948, 907, 869, 833, 799,
 187:lib/rsynth-2.0-port/nsynth.c ****  768, 738, 710, 683, 658, 634, 612, 590, 570, 551,
 188:lib/rsynth-2.0-port/nsynth.c ****  533, 515, 499, 483, 468, 454, 440, 427, 415, 403,
 189:lib/rsynth-2.0-port/nsynth.c ****  391, 380, 370, 360, 350, 341, 332, 323, 315, 307,
 190:lib/rsynth-2.0-port/nsynth.c ****  300, 292, 285, 278, 272, 265, 259, 253, 247, 242,
 191:lib/rsynth-2.0-port/nsynth.c ****  237, 231, 226, 221, 217, 212, 208, 204, 199, 195,
 192:lib/rsynth-2.0-port/nsynth.c ****  192, 188, 184, 180, 177, 174, 170, 167, 164, 161,
 193:lib/rsynth-2.0-port/nsynth.c ****  158, 155, 153, 150, 147, 145, 142, 140, 137, 135,
 194:lib/rsynth-2.0-port/nsynth.c ****  133, 131, 128, 126, 124, 122, 120, 119, 117, 115,
 195:lib/rsynth-2.0-port/nsynth.c ****  113, 111, 110, 108, 106, 105, 103, 102, 100, 99,
 196:lib/rsynth-2.0-port/nsynth.c ****  97, 96, 95, 93, 92, 91, 90, 88, 87, 86,
 197:lib/rsynth-2.0-port/nsynth.c ****  85, 84, 83, 82, 80, 79, 78, 77, 76, 75,
 198:lib/rsynth-2.0-port/nsynth.c ****  75, 74, 73, 72, 71, 70, 69, 68, 68, 67,
 199:lib/rsynth-2.0-port/nsynth.c ****  66, 65, 64, 64, 63, 62, 61, 61, 60, 59,
 200:lib/rsynth-2.0-port/nsynth.c ****  59, 58, 57, 57, 56, 56, 55, 55, 54, 54,
 201:lib/rsynth-2.0-port/nsynth.c ****  53, 53, 52, 52, 51, 51, 50, 50, 49, 49,
 202:lib/rsynth-2.0-port/nsynth.c ****  48, 48, 47, 47, 46, 46, 45, 45, 44, 44,
 203:lib/rsynth-2.0-port/nsynth.c ****  43, 43, 42, 42, 41, 41, 41, 41, 40, 40,
 204:lib/rsynth-2.0-port/nsynth.c ****  39, 39, 38, 38, 38, 38, 37, 37, 36, 36,
 205:lib/rsynth-2.0-port/nsynth.c ****  36, 36, 35, 35, 35, 35, 34, 34, 33, 33,
 206:lib/rsynth-2.0-port/nsynth.c ****  33, 33, 32, 32, 32, 32, 31, 31, 31, 31,
 207:lib/rsynth-2.0-port/nsynth.c ****  30, 30, 30, 30, 29, 29, 29, 29, 28, 28,
 208:lib/rsynth-2.0-port/nsynth.c ****  28, 28, 27, 27
 209:lib/rsynth-2.0-port/nsynth.c **** };
 210:lib/rsynth-2.0-port/nsynth.c **** 
 211:lib/rsynth-2.0-port/nsynth.c **** /*
 212:lib/rsynth-2.0-port/nsynth.c ****  * Convertion table, db to linear, 87 dB --> 32767
 213:lib/rsynth-2.0-port/nsynth.c ****  *                                 86 dB --> 29491 (1 dB down = 0.5**1/6)
 214:lib/rsynth-2.0-port/nsynth.c ****  *                                 ...
 215:lib/rsynth-2.0-port/nsynth.c ****  *                                 81 dB --> 16384 (6 dB down = 0.5)
 216:lib/rsynth-2.0-port/nsynth.c ****  *                                 ...
 217:lib/rsynth-2.0-port/nsynth.c ****  *                                  0 dB -->     0
 218:lib/rsynth-2.0-port/nsynth.c ****  *
 219:lib/rsynth-2.0-port/nsynth.c ****  * The just noticeable difference for a change in intensity of a vowel
 220:lib/rsynth-2.0-port/nsynth.c ****  *   is approximately 1 dB.  Thus all amplitudes are quantized to 1 dB
 221:lib/rsynth-2.0-port/nsynth.c ****  *   steps.
 222:lib/rsynth-2.0-port/nsynth.c ****  */
 223:lib/rsynth-2.0-port/nsynth.c **** 
 224:lib/rsynth-2.0-port/nsynth.c **** static const float amptable[88] =
 225:lib/rsynth-2.0-port/nsynth.c **** {
 226:lib/rsynth-2.0-port/nsynth.c ****  0.0, 0.0, 0.0, 0.0, 0.0,
 227:lib/rsynth-2.0-port/nsynth.c ****  0.0, 0.0, 0.0, 0.0, 0.0,
 228:lib/rsynth-2.0-port/nsynth.c ****  0.0, 0.0, 0.0, 6.0, 7.0,
 229:lib/rsynth-2.0-port/nsynth.c ****  8.0, 9.0, 10.0, 11.0, 13.0,
 230:lib/rsynth-2.0-port/nsynth.c ****  14.0, 16.0, 18.0, 20.0, 22.0,
 231:lib/rsynth-2.0-port/nsynth.c ****  25.0, 28.0, 32.0, 35.0, 40.0,
 232:lib/rsynth-2.0-port/nsynth.c ****  45.0, 51.0, 57.0, 64.0, 71.0,
 233:lib/rsynth-2.0-port/nsynth.c ****  80.0, 90.0, 101.0, 114.0, 128.0,
 234:lib/rsynth-2.0-port/nsynth.c ****  142.0, 159.0, 179.0, 202.0, 227.0,
 235:lib/rsynth-2.0-port/nsynth.c ****  256.0, 284.0, 318.0, 359.0, 405.0,
 236:lib/rsynth-2.0-port/nsynth.c ****  455.0, 512.0, 568.0, 638.0, 719.0,
 237:lib/rsynth-2.0-port/nsynth.c ****  811.0, 911.0, 1024.0, 1137.0, 1276.0,
 238:lib/rsynth-2.0-port/nsynth.c ****  1438.0, 1622.0, 1823.0, 2048.0, 2273.0,
 239:lib/rsynth-2.0-port/nsynth.c ****  2552.0, 2875.0, 3244.0, 3645.0, 4096.0,
 240:lib/rsynth-2.0-port/nsynth.c ****  4547.0, 5104.0, 5751.0, 6488.0, 7291.0,
 241:lib/rsynth-2.0-port/nsynth.c ****  8192.0, 9093.0, 10207.0, 11502.0, 12976.0,
 242:lib/rsynth-2.0-port/nsynth.c ****  14582.0, 16384.0, 18350.0, 20644.0, 23429.0,
 243:lib/rsynth-2.0-port/nsynth.c ****  26214.0, 29491.0, 32767.0
 244:lib/rsynth-2.0-port/nsynth.c **** };
 245:lib/rsynth-2.0-port/nsynth.c **** 
 246:lib/rsynth-2.0-port/nsynth.c **** const char *par_name[] =
 247:lib/rsynth-2.0-port/nsynth.c **** {
 248:lib/rsynth-2.0-port/nsynth.c ****  "F0hz10",
 249:lib/rsynth-2.0-port/nsynth.c ****  "AVdb",
 250:lib/rsynth-2.0-port/nsynth.c ****  "F1hz", "B1hz",
 251:lib/rsynth-2.0-port/nsynth.c ****  "F2hz", "B2hz",
 252:lib/rsynth-2.0-port/nsynth.c ****  "F3hz", "B3hz",
 253:lib/rsynth-2.0-port/nsynth.c ****  "F4hz", "B4hz",
 254:lib/rsynth-2.0-port/nsynth.c ****  "F5hz", "B5hz",
 255:lib/rsynth-2.0-port/nsynth.c ****  "F6hz", "B6hz",
 256:lib/rsynth-2.0-port/nsynth.c ****  "FNZhz", "BNZhz",
 257:lib/rsynth-2.0-port/nsynth.c ****  "FNPhz", "BNPhz",
 258:lib/rsynth-2.0-port/nsynth.c ****  "AP",
 259:lib/rsynth-2.0-port/nsynth.c ****  "Kopen",
 260:lib/rsynth-2.0-port/nsynth.c ****  "Aturb",
 261:lib/rsynth-2.0-port/nsynth.c ****  "TLTdb",
 262:lib/rsynth-2.0-port/nsynth.c ****  "AF",
 263:lib/rsynth-2.0-port/nsynth.c ****  "Kskew",
 264:lib/rsynth-2.0-port/nsynth.c ****  "A1", "B1phz",
 265:lib/rsynth-2.0-port/nsynth.c ****  "A2", "B2phz",
 266:lib/rsynth-2.0-port/nsynth.c ****  "A3", "B3phz",
 267:lib/rsynth-2.0-port/nsynth.c ****  "A4", "B4phz",
 268:lib/rsynth-2.0-port/nsynth.c ****  "A5", "B5phz",
 269:lib/rsynth-2.0-port/nsynth.c ****  "A6", "B6phz",
 270:lib/rsynth-2.0-port/nsynth.c ****  "ANP",
 271:lib/rsynth-2.0-port/nsynth.c ****  "AB",
 272:lib/rsynth-2.0-port/nsynth.c ****  "AVpdb",
 273:lib/rsynth-2.0-port/nsynth.c ****  "Gain0"
 274:lib/rsynth-2.0-port/nsynth.c **** };
 275:lib/rsynth-2.0-port/nsynth.c **** 
 276:lib/rsynth-2.0-port/nsynth.c **** static void flutter (klatt_global_ptr globals, klatt_frame_ptr pars);
 277:lib/rsynth-2.0-port/nsynth.c **** static float resonator (resonator_ptr r, float input);
 278:lib/rsynth-2.0-port/nsynth.c **** static float antiresonator (resonator_ptr r, float input);
 279:lib/rsynth-2.0-port/nsynth.c **** static float impulsive_source (long nper);
 280:lib/rsynth-2.0-port/nsynth.c **** static float natural_source (long nper);
 281:lib/rsynth-2.0-port/nsynth.c **** static void setabc (long int f, long int bw, resonator_ptr rp);
 282:lib/rsynth-2.0-port/nsynth.c **** static void setabcg (long int f, long int bw, resonator_ptr rp, float gain);
 283:lib/rsynth-2.0-port/nsynth.c **** static void setzeroabc (long int f, long int bw, resonator_ptr rp);
 284:lib/rsynth-2.0-port/nsynth.c **** static float DBtoLIN (klatt_global_ptr globals, long int dB);
 285:lib/rsynth-2.0-port/nsynth.c **** static float dBconvert (long int arg);
 286:lib/rsynth-2.0-port/nsynth.c **** static void overload_warning (klatt_global_ptr globals, long int arg);
 287:lib/rsynth-2.0-port/nsynth.c **** static short clip (klatt_global_ptr globals, float input);
 288:lib/rsynth-2.0-port/nsynth.c **** static void pitch_synch_par_reset (klatt_global_ptr globals,
 289:lib/rsynth-2.0-port/nsynth.c ****                                          klatt_frame_ptr frame, long ns);
 290:lib/rsynth-2.0-port/nsynth.c **** static void frame_init (klatt_global_ptr globals, klatt_frame_ptr frame);
 291:lib/rsynth-2.0-port/nsynth.c **** void show_parms (klatt_global_ptr globals, int *pars);
 292:lib/rsynth-2.0-port/nsynth.c **** 
 293:lib/rsynth-2.0-port/nsynth.c **** 
 294:lib/rsynth-2.0-port/nsynth.c **** void show_parms(klatt_global_ptr globals, int *pars)
 295:lib/rsynth-2.0-port/nsynth.c **** {
 296:lib/rsynth-2.0-port/nsynth.c **** 	int i;
 297:lib/rsynth-2.0-port/nsynth.c **** 	static int names;
 298:lib/rsynth-2.0-port/nsynth.c **** 	if ((names++ % 64) == 0)
 299:lib/rsynth-2.0-port/nsynth.c **** 	{
 300:lib/rsynth-2.0-port/nsynth.c **** 		for (i = 0; i < NPAR; i++)
 301:lib/rsynth-2.0-port/nsynth.c **** 			printf("%s ", par_name[i]);
 302:lib/rsynth-2.0-port/nsynth.c **** 		printf("\n");
 303:lib/rsynth-2.0-port/nsynth.c **** 	}
 304:lib/rsynth-2.0-port/nsynth.c **** 	for (i = 0; i < NPAR; i++)
 305:lib/rsynth-2.0-port/nsynth.c **** 	{
 306:lib/rsynth-2.0-port/nsynth.c **** 		printf("%*d ", (int) strlen(par_name[i]), pars[i]);
 307:lib/rsynth-2.0-port/nsynth.c **** 	}
 308:lib/rsynth-2.0-port/nsynth.c **** 	printf("\n");
 309:lib/rsynth-2.0-port/nsynth.c **** }
 310:lib/rsynth-2.0-port/nsynth.c **** 
 311:lib/rsynth-2.0-port/nsynth.c **** /*
 312:lib/rsynth-2.0-port/nsynth.c ****    function FLUTTER
 313:lib/rsynth-2.0-port/nsynth.c **** 
 314:lib/rsynth-2.0-port/nsynth.c ****    This function adds F0 flutter, as specified in:
 315:lib/rsynth-2.0-port/nsynth.c **** 
 316:lib/rsynth-2.0-port/nsynth.c ****    "Analysis, synthesis and perception of voice quality variations among
 317:lib/rsynth-2.0-port/nsynth.c ****    female and male talkers" D.H. Klatt and L.C. Klatt JASA 87(2) February 1990.
 318:lib/rsynth-2.0-port/nsynth.c ****    Flutter is added by applying a quasi-random element constructed from three
 319:lib/rsynth-2.0-port/nsynth.c ****    slowly varying sine waves.
 320:lib/rsynth-2.0-port/nsynth.c ****  */
 321:lib/rsynth-2.0-port/nsynth.c **** static void flutter(klatt_global_ptr globals, klatt_frame_ptr pars)
 322:lib/rsynth-2.0-port/nsynth.c **** {
 323:lib/rsynth-2.0-port/nsynth.c **** 	long original_f0 = pars->F0hz10 / 10;
 324:lib/rsynth-2.0-port/nsynth.c **** 	double fla = (double) globals->f0_flutter / 50;
 325:lib/rsynth-2.0-port/nsynth.c **** 	double flb = (double) original_f0 / 100;
 326:lib/rsynth-2.0-port/nsynth.c **** 	double flc = sin(2 * PI * 12.7 * time_count);
 327:lib/rsynth-2.0-port/nsynth.c **** 	double fld = sin(2 * PI * 7.1 * time_count);
 328:lib/rsynth-2.0-port/nsynth.c **** 	double fle = sin(2 * PI * 4.7 * time_count);
 329:lib/rsynth-2.0-port/nsynth.c **** 	double delta_f0 = fla * flb * (flc + fld + fle) * 10;
 330:lib/rsynth-2.0-port/nsynth.c **** 	F0hz10 += (long) delta_f0;
 331:lib/rsynth-2.0-port/nsynth.c **** }
 332:lib/rsynth-2.0-port/nsynth.c **** 
 333:lib/rsynth-2.0-port/nsynth.c **** static float impulsive_source(long nper)
 334:lib/rsynth-2.0-port/nsynth.c **** {
 335:lib/rsynth-2.0-port/nsynth.c **** 	static float doublet[] =
 336:lib/rsynth-2.0-port/nsynth.c **** 		{0., 13000000., -13000000.};
 337:lib/rsynth-2.0-port/nsynth.c **** 	if (nper < 3)
 338:lib/rsynth-2.0-port/nsynth.c **** 	{
 339:lib/rsynth-2.0-port/nsynth.c **** 		vwave = doublet[nper];
 340:lib/rsynth-2.0-port/nsynth.c **** 	}
 341:lib/rsynth-2.0-port/nsynth.c **** 	else
 342:lib/rsynth-2.0-port/nsynth.c **** 	{
 343:lib/rsynth-2.0-port/nsynth.c **** 		vwave = 0.0;
 344:lib/rsynth-2.0-port/nsynth.c **** 	}
 345:lib/rsynth-2.0-port/nsynth.c **** 	/* Low-pass filter the differenciated impulse with a critically-damped
 346:lib/rsynth-2.0-port/nsynth.c ****     second-order filter, time constant proportional to Kopen */
 347:lib/rsynth-2.0-port/nsynth.c **** 	return resonator(&rgl, vwave);
 348:lib/rsynth-2.0-port/nsynth.c **** }
 349:lib/rsynth-2.0-port/nsynth.c **** 
 350:lib/rsynth-2.0-port/nsynth.c **** 
 351:lib/rsynth-2.0-port/nsynth.c **** /* Vwave is the differentiated glottal flow waveform, there is a weak
 352:lib/rsynth-2.0-port/nsynth.c ****    spectral zero around 800 Hz, magic constants a,b reset pitch-synch
 353:lib/rsynth-2.0-port/nsynth.c ****  */
 354:lib/rsynth-2.0-port/nsynth.c **** 
 355:lib/rsynth-2.0-port/nsynth.c **** static float natural_source(long nper)
 356:lib/rsynth-2.0-port/nsynth.c **** {
 357:lib/rsynth-2.0-port/nsynth.c **** 	float lgtemp;
 358:lib/rsynth-2.0-port/nsynth.c **** 	/* See if glottis open */
 359:lib/rsynth-2.0-port/nsynth.c **** 	if (nper < nopen)
 360:lib/rsynth-2.0-port/nsynth.c **** 	{
 361:lib/rsynth-2.0-port/nsynth.c **** 		natglot_a -= natglot_b;
 362:lib/rsynth-2.0-port/nsynth.c **** 		vwave += natglot_a;
 363:lib/rsynth-2.0-port/nsynth.c **** 		lgtemp = vwave * 0.028;        /* function of samp_rate ? */
 364:lib/rsynth-2.0-port/nsynth.c **** 		return (lgtemp);
 365:lib/rsynth-2.0-port/nsynth.c **** 	}
 366:lib/rsynth-2.0-port/nsynth.c **** 	else
 367:lib/rsynth-2.0-port/nsynth.c **** 	{
 368:lib/rsynth-2.0-port/nsynth.c **** 		/* Glottis closed */
 369:lib/rsynth-2.0-port/nsynth.c **** 		vwave = 0.0;
 370:lib/rsynth-2.0-port/nsynth.c **** 		return (0.0);
 371:lib/rsynth-2.0-port/nsynth.c **** 	}
 372:lib/rsynth-2.0-port/nsynth.c **** }
 373:lib/rsynth-2.0-port/nsynth.c **** 
 374:lib/rsynth-2.0-port/nsynth.c **** /*----------------------------------------------------------------------------*/
 375:lib/rsynth-2.0-port/nsynth.c **** /* Convert formant freqencies and bandwidth into
 376:lib/rsynth-2.0-port/nsynth.c ****    resonator difference equation coefficents
 377:lib/rsynth-2.0-port/nsynth.c ****  */
 378:lib/rsynth-2.0-port/nsynth.c **** // f  :                 /* Frequency of resonator in Hz  */
 379:lib/rsynth-2.0-port/nsynth.c **** // bw :                 /* Bandwidth of resonator in Hz  */
 380:lib/rsynth-2.0-port/nsynth.c **** // rp :                 /* Are output coefficients  */
 381:lib/rsynth-2.0-port/nsynth.c **** static void setabc(long f, long bw, resonator_ptr rp)
 382:lib/rsynth-2.0-port/nsynth.c **** {
 383:lib/rsynth-2.0-port/nsynth.c **** 	double arg = minus_pi_t * bw;
 384:lib/rsynth-2.0-port/nsynth.c **** 	float r = exp(arg);              /* Let r  =  exp(-pi bw t) */
 385:lib/rsynth-2.0-port/nsynth.c **** 	rp->c = -(r * r);                /* Let c  =  -r**2 */
 386:lib/rsynth-2.0-port/nsynth.c **** 	arg = two_pi_t * f;
 387:lib/rsynth-2.0-port/nsynth.c **** 	rp->b = r * cos(arg) * 2.0;      /* Let b = r * 2*cos(2 pi f t) */
 388:lib/rsynth-2.0-port/nsynth.c **** 	rp->a = 1.0 - rp->b - rp->c;     /* Let a = 1.0 - b - c */
 389:lib/rsynth-2.0-port/nsynth.c **** }
 390:lib/rsynth-2.0-port/nsynth.c **** 
 391:lib/rsynth-2.0-port/nsynth.c **** /* Convienience function for setting parallel resonators with gain */
 392:lib/rsynth-2.0-port/nsynth.c **** // f  :                  /* Frequency of resonator in Hz  */
 393:lib/rsynth-2.0-port/nsynth.c **** // bw :                 /* Bandwidth of resonator in Hz  */
 394:lib/rsynth-2.0-port/nsynth.c **** // rp :                 /* Are output coefficients  */
 395:lib/rsynth-2.0-port/nsynth.c **** // gain:
 396:lib/rsynth-2.0-port/nsynth.c **** static void setabcg(long f, long bw, resonator_ptr rp, float gain)
 397:lib/rsynth-2.0-port/nsynth.c **** {
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 400:lib/rsynth-2.0-port/nsynth.c **** }
 401:lib/rsynth-2.0-port/nsynth.c **** 
 402:lib/rsynth-2.0-port/nsynth.c **** /* Convert formant freqencies and bandwidth into
 403:lib/rsynth-2.0-port/nsynth.c ****  *      anti-resonator difference equation constants
 404:lib/rsynth-2.0-port/nsynth.c ****  */
 405:lib/rsynth-2.0-port/nsynth.c **** // f :                  /* Frequency of resonator in Hz  */
 406:lib/rsynth-2.0-port/nsynth.c **** // bw :                 /* Bandwidth of resonator in Hz  */
 407:lib/rsynth-2.0-port/nsynth.c **** // rp :                 /* Are output coefficients  */
 408:lib/rsynth-2.0-port/nsynth.c **** static void setzeroabc(long f, long bw, resonator_ptr rp)
 409:lib/rsynth-2.0-port/nsynth.c **** {
 410:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);               /* First compute ordinary resonator coefficients */
 411:lib/rsynth-2.0-port/nsynth.c **** 	/* Now convert to antiresonator coefficients */
 412:lib/rsynth-2.0-port/nsynth.c **** 	rp->a = 1.0 / rp->a;             /* a'=  1/a */
 413:lib/rsynth-2.0-port/nsynth.c **** 	rp->b *= -rp->a;                 /* b'= -b/a */
 414:lib/rsynth-2.0-port/nsynth.c **** 	rp->c *= -rp->a;                 /* c'= -c/a */
 415:lib/rsynth-2.0-port/nsynth.c **** }
 416:lib/rsynth-2.0-port/nsynth.c **** 
 417:lib/rsynth-2.0-port/nsynth.c **** /*----------------------------------------------------------------------------*/
 418:lib/rsynth-2.0-port/nsynth.c **** 
 419:lib/rsynth-2.0-port/nsynth.c **** 
 420:lib/rsynth-2.0-port/nsynth.c **** /* Convert from decibels to a linear scale factor */
 421:lib/rsynth-2.0-port/nsynth.c **** static float DBtoLIN(klatt_global_ptr globals, long dB)
 422:lib/rsynth-2.0-port/nsynth.c **** {
 423:lib/rsynth-2.0-port/nsynth.c **** 	/* Check limits or argument (can be removed in final product) */
 424:lib/rsynth-2.0-port/nsynth.c **** 	if (dB < 0)
 425:lib/rsynth-2.0-port/nsynth.c **** 		dB = 0;
 426:lib/rsynth-2.0-port/nsynth.c **** 	else if (dB >= 88)
 427:lib/rsynth-2.0-port/nsynth.c **** 	{
 428:lib/rsynth-2.0-port/nsynth.c **** 		if (!globals->quiet_flag)
 429:lib/rsynth-2.0-port/nsynth.c **** 			printf("Try to compute amptable[%ld]\n", dB);
 430:lib/rsynth-2.0-port/nsynth.c **** 		dB = 87;
 431:lib/rsynth-2.0-port/nsynth.c **** 	}
 432:lib/rsynth-2.0-port/nsynth.c **** 	return amptable[dB] * 0.001;
 433:lib/rsynth-2.0-port/nsynth.c **** }
 434:lib/rsynth-2.0-port/nsynth.c **** 
 435:lib/rsynth-2.0-port/nsynth.c **** /* WHAT WERE THESE FOR ? */
 436:lib/rsynth-2.0-port/nsynth.c **** #define ACOEF           0.005
 437:lib/rsynth-2.0-port/nsynth.c **** #define BCOEF           (1.0 - ACOEF)	/* Slight decay to remove dc */
 438:lib/rsynth-2.0-port/nsynth.c **** 
 439:lib/rsynth-2.0-port/nsynth.c **** static float dBconvert(long arg)
 440:lib/rsynth-2.0-port/nsynth.c **** {
 441:lib/rsynth-2.0-port/nsynth.c **** 	return 20.0 * log10((double) arg / 32767.0);
 442:lib/rsynth-2.0-port/nsynth.c **** }
 443:lib/rsynth-2.0-port/nsynth.c **** 
 444:lib/rsynth-2.0-port/nsynth.c **** static void overload_warning(klatt_global_ptr globals, long arg)
 445:lib/rsynth-2.0-port/nsynth.c **** {
 446:lib/rsynth-2.0-port/nsynth.c **** 	if (warnsw == 0)
 447:lib/rsynth-2.0-port/nsynth.c **** 	{
 448:lib/rsynth-2.0-port/nsynth.c **** 		warnsw++;
 449:lib/rsynth-2.0-port/nsynth.c **** 		if (!globals->quiet_flag)
 450:lib/rsynth-2.0-port/nsynth.c **** 		{
 451:lib/rsynth-2.0-port/nsynth.c **** 			printf("\n* * * WARNING: ");
 452:lib/rsynth-2.0-port/nsynth.c **** 			printf(" Signal at output of synthesizer (+%3.1f dB) exceeds 0 dB\n",
 453:lib/rsynth-2.0-port/nsynth.c ****             dBconvert(arg));
 454:lib/rsynth-2.0-port/nsynth.c **** 		}
 455:lib/rsynth-2.0-port/nsynth.c **** 	}
 456:lib/rsynth-2.0-port/nsynth.c **** }
 457:lib/rsynth-2.0-port/nsynth.c **** 
 458:lib/rsynth-2.0-port/nsynth.c **** /* Reset selected parameters pitch-synchronously */
 459:lib/rsynth-2.0-port/nsynth.c **** 
 460:lib/rsynth-2.0-port/nsynth.c **** static void pitch_synch_par_reset(klatt_global_ptr globals, klatt_frame_ptr frame, long ns)
 461:lib/rsynth-2.0-port/nsynth.c **** {
 462:lib/rsynth-2.0-port/nsynth.c **** 	long temp;
 463:lib/rsynth-2.0-port/nsynth.c **** 	float temp1;
 464:lib/rsynth-2.0-port/nsynth.c **** 	if (F0hz10 > 0)
 465:lib/rsynth-2.0-port/nsynth.c **** 	{
 466:lib/rsynth-2.0-port/nsynth.c **** 		T0 = (40 * globals->samrate) / F0hz10;
 467:lib/rsynth-2.0-port/nsynth.c **** 		/* Period in samp*4 */
 468:lib/rsynth-2.0-port/nsynth.c **** 		amp_voice = DBtoLIN(globals, AVdb);
 469:lib/rsynth-2.0-port/nsynth.c **** 
 470:lib/rsynth-2.0-port/nsynth.c **** 		/* Duration of period before amplitude modulation */
 471:lib/rsynth-2.0-port/nsynth.c **** 		nmod = T0;
 472:lib/rsynth-2.0-port/nsynth.c **** 		if (AVdb > 0)
 473:lib/rsynth-2.0-port/nsynth.c **** 		{
 474:lib/rsynth-2.0-port/nsynth.c **** 			nmod >>= 1;
 475:lib/rsynth-2.0-port/nsynth.c **** 		}
 476:lib/rsynth-2.0-port/nsynth.c **** 
 477:lib/rsynth-2.0-port/nsynth.c **** 		/* Breathiness of voicing waveform */
 478:lib/rsynth-2.0-port/nsynth.c **** 
 479:lib/rsynth-2.0-port/nsynth.c **** 		amp_breth = DBtoLIN(globals, frame->Aturb) * 0.1;
 480:lib/rsynth-2.0-port/nsynth.c **** 
 481:lib/rsynth-2.0-port/nsynth.c **** 		/* Set open phase of glottal period */
 482:lib/rsynth-2.0-port/nsynth.c **** 		/* where  40 <= open phase <= 263 */
 483:lib/rsynth-2.0-port/nsynth.c **** 
 484:lib/rsynth-2.0-port/nsynth.c **** 		nopen = 4 * frame->Kopen;
 485:lib/rsynth-2.0-port/nsynth.c **** 		if ((globals->glsource == IMPULSIVE) && (nopen > 263))
 486:lib/rsynth-2.0-port/nsynth.c **** 		{
 487:lib/rsynth-2.0-port/nsynth.c **** 			nopen = 263;
 488:lib/rsynth-2.0-port/nsynth.c **** 		}
 489:lib/rsynth-2.0-port/nsynth.c **** 
 490:lib/rsynth-2.0-port/nsynth.c **** 		if (nopen >= (T0 - 1))
 491:lib/rsynth-2.0-port/nsynth.c **** 		{
 492:lib/rsynth-2.0-port/nsynth.c **** 			nopen = T0 - 2;
 493:lib/rsynth-2.0-port/nsynth.c **** 			if (!globals->quiet_flag)
 494:lib/rsynth-2.0-port/nsynth.c **** 			{
 495:lib/rsynth-2.0-port/nsynth.c **** 				printf("Warning: glottal open period cannot exceed T0, truncated\n");
 496:lib/rsynth-2.0-port/nsynth.c **** 			}
 497:lib/rsynth-2.0-port/nsynth.c **** 		}
 498:lib/rsynth-2.0-port/nsynth.c **** 
 499:lib/rsynth-2.0-port/nsynth.c **** 		if (nopen < 40)
 500:lib/rsynth-2.0-port/nsynth.c **** 		{
 501:lib/rsynth-2.0-port/nsynth.c **** 			nopen = 40;                  /* F0 max = 1000 Hz */
 502:lib/rsynth-2.0-port/nsynth.c **** 			if (!globals->quiet_flag)
 503:lib/rsynth-2.0-port/nsynth.c **** 			{
 504:lib/rsynth-2.0-port/nsynth.c **** 				printf("Warning: minimum glottal open period is 10 samples.\n");
 505:lib/rsynth-2.0-port/nsynth.c **** 				printf("truncated, nopen = %ld\n", nopen);
 506:lib/rsynth-2.0-port/nsynth.c **** 			}
 507:lib/rsynth-2.0-port/nsynth.c **** 		}
 508:lib/rsynth-2.0-port/nsynth.c **** 
 509:lib/rsynth-2.0-port/nsynth.c **** 		/* Reset a & b, which determine shape of "natural" glottal waveform */
 510:lib/rsynth-2.0-port/nsynth.c **** 
 511:lib/rsynth-2.0-port/nsynth.c **** 		natglot_b = natglot[nopen - 40];
 512:lib/rsynth-2.0-port/nsynth.c **** 		natglot_a = (natglot_b * nopen) * .333;
 513:lib/rsynth-2.0-port/nsynth.c **** 
 514:lib/rsynth-2.0-port/nsynth.c **** 		/* Reset width of "impulsive" glottal pulse */
 515:lib/rsynth-2.0-port/nsynth.c **** 
 516:lib/rsynth-2.0-port/nsynth.c **** 		temp = globals->samrate / nopen;
 517:lib/rsynth-2.0-port/nsynth.c **** 		setabc(0L, temp, &rgl);
 518:lib/rsynth-2.0-port/nsynth.c **** 
 519:lib/rsynth-2.0-port/nsynth.c **** 		/* Make gain at F1 about constant */
 520:lib/rsynth-2.0-port/nsynth.c **** 
 521:lib/rsynth-2.0-port/nsynth.c **** 		temp1 = nopen * .00833;
 522:lib/rsynth-2.0-port/nsynth.c **** 		rgl.a *= (temp1 * temp1);
 523:lib/rsynth-2.0-port/nsynth.c **** 
 524:lib/rsynth-2.0-port/nsynth.c **** 		/* Truncate skewness so as not to exceed duration of closed phase
 525:lib/rsynth-2.0-port/nsynth.c **** 		of glottal period */
 526:lib/rsynth-2.0-port/nsynth.c **** 
 527:lib/rsynth-2.0-port/nsynth.c **** 		temp = T0 - nopen;
 528:lib/rsynth-2.0-port/nsynth.c **** 		if (Kskew > temp)
 529:lib/rsynth-2.0-port/nsynth.c **** 		{
 530:lib/rsynth-2.0-port/nsynth.c **** 			if (!globals->quiet_flag)
 531:lib/rsynth-2.0-port/nsynth.c **** 			{
 532:lib/rsynth-2.0-port/nsynth.c **** 				printf("Kskew duration=%ld > glottal closed period=%ld, truncate\n",
 533:lib/rsynth-2.0-port/nsynth.c **** 				Kskew, T0 - nopen);
 534:lib/rsynth-2.0-port/nsynth.c **** 			}
 535:lib/rsynth-2.0-port/nsynth.c **** 			Kskew = temp;
 536:lib/rsynth-2.0-port/nsynth.c **** 		}
 537:lib/rsynth-2.0-port/nsynth.c **** 		
 538:lib/rsynth-2.0-port/nsynth.c **** 		if (skew >= 0)
 539:lib/rsynth-2.0-port/nsynth.c **** 		{
 540:lib/rsynth-2.0-port/nsynth.c **** 			skew = Kskew;                /* Reset skew to requested Kskew */
 541:lib/rsynth-2.0-port/nsynth.c **** 		}
 542:lib/rsynth-2.0-port/nsynth.c **** 		else
 543:lib/rsynth-2.0-port/nsynth.c **** 		{
 544:lib/rsynth-2.0-port/nsynth.c **** 			skew = -Kskew;
 545:lib/rsynth-2.0-port/nsynth.c **** 		}
 546:lib/rsynth-2.0-port/nsynth.c **** 
 547:lib/rsynth-2.0-port/nsynth.c **** 		/* Add skewness to closed portion of voicing period */
 548:lib/rsynth-2.0-port/nsynth.c **** 
 549:lib/rsynth-2.0-port/nsynth.c **** 		T0 = T0 + skew;
 550:lib/rsynth-2.0-port/nsynth.c **** 		skew = -skew;
 551:lib/rsynth-2.0-port/nsynth.c **** 	}
 552:lib/rsynth-2.0-port/nsynth.c **** 	else
 553:lib/rsynth-2.0-port/nsynth.c **** 	{
 554:lib/rsynth-2.0-port/nsynth.c **** 		T0 = 4;                        /* Default for f0 undefined */
 555:lib/rsynth-2.0-port/nsynth.c **** 		amp_voice = 0.0;
 556:lib/rsynth-2.0-port/nsynth.c **** 		nmod = T0;
 557:lib/rsynth-2.0-port/nsynth.c **** 		amp_breth = 0.0;
 558:lib/rsynth-2.0-port/nsynth.c **** 		natglot_a = 0.0;
 559:lib/rsynth-2.0-port/nsynth.c **** 		natglot_b = 0.0;
 560:lib/rsynth-2.0-port/nsynth.c **** 	}
 561:lib/rsynth-2.0-port/nsynth.c **** 
 562:lib/rsynth-2.0-port/nsynth.c **** 	/* Reset these pars pitch synchronously or at update rate if f0=0 */
 563:lib/rsynth-2.0-port/nsynth.c **** 
 564:lib/rsynth-2.0-port/nsynth.c **** 	if ((T0 != 4) || (ns == 0))
 565:lib/rsynth-2.0-port/nsynth.c **** 	{
 566:lib/rsynth-2.0-port/nsynth.c **** 		/* Set one-pole low-pass filter that tilts glottal source */
 567:lib/rsynth-2.0-port/nsynth.c **** 		decay = (0.033 * frame->TLTdb);	/* Function of samp_rate ? */
 568:lib/rsynth-2.0-port/nsynth.c **** 		if (decay > 0.0)
 569:lib/rsynth-2.0-port/nsynth.c **** 		{
 570:lib/rsynth-2.0-port/nsynth.c **** 			onemd = 1.0 - decay;
 571:lib/rsynth-2.0-port/nsynth.c **** 		}
 572:lib/rsynth-2.0-port/nsynth.c **** 		else
 573:lib/rsynth-2.0-port/nsynth.c **** 		{
 574:lib/rsynth-2.0-port/nsynth.c **** 			onemd = 1.0;
 575:lib/rsynth-2.0-port/nsynth.c **** 		}
 576:lib/rsynth-2.0-port/nsynth.c **** 	}
 577:lib/rsynth-2.0-port/nsynth.c **** }
 578:lib/rsynth-2.0-port/nsynth.c **** 
 579:lib/rsynth-2.0-port/nsynth.c **** /* Get variable parameters from host computer,
 580:lib/rsynth-2.0-port/nsynth.c ****    initially also get definition of fixed pars
 581:lib/rsynth-2.0-port/nsynth.c ****  */
 582:lib/rsynth-2.0-port/nsynth.c **** 
 583:lib/rsynth-2.0-port/nsynth.c **** static void frame_init(klatt_global_ptr globals, klatt_frame_ptr frame)
 584:lib/rsynth-2.0-port/nsynth.c **** {
 585:lib/rsynth-2.0-port/nsynth.c **** 	long Gain0;                      /* Overall gain, 60 dB is unity  0 to   60  */
 586:lib/rsynth-2.0-port/nsynth.c **** 	float amp_parF1;                 /* A1 converted to linear gain  */
 587:lib/rsynth-2.0-port/nsynth.c **** 	float amp_parFN;                 /* ANP converted to linear gain  */
 588:lib/rsynth-2.0-port/nsynth.c **** 	float amp_parF2;                 /* A2 converted to linear gain  */
 589:lib/rsynth-2.0-port/nsynth.c **** 	float amp_parF3;                 /* A3 converted to linear gain  */
 590:lib/rsynth-2.0-port/nsynth.c **** 	float amp_parF4;                 /* A4 converted to linear gain  */
 591:lib/rsynth-2.0-port/nsynth.c **** 	float amp_parF5;                 /* A5 converted to linear gain  */
 592:lib/rsynth-2.0-port/nsynth.c **** 	float amp_parF6;                 /* A6 converted to linear gain  */
 593:lib/rsynth-2.0-port/nsynth.c **** 
 594:lib/rsynth-2.0-port/nsynth.c **** 	#if 0
 595:lib/rsynth-2.0-port/nsynth.c **** 	show_parms(globals, (int *) frame);
 596:lib/rsynth-2.0-port/nsynth.c **** 	#endif
 597:lib/rsynth-2.0-port/nsynth.c **** 
 598:lib/rsynth-2.0-port/nsynth.c **** 	/*
 599:lib/rsynth-2.0-port/nsynth.c ****     Read  speech frame definition into temp store
 600:lib/rsynth-2.0-port/nsynth.c ****     and move some parameters into active use immediately
 601:lib/rsynth-2.0-port/nsynth.c ****     (voice-excited ones are updated pitch synchronously
 602:lib/rsynth-2.0-port/nsynth.c ****     to avoid waveform glitches).
 603:lib/rsynth-2.0-port/nsynth.c **** 	*/
 604:lib/rsynth-2.0-port/nsynth.c **** 
 605:lib/rsynth-2.0-port/nsynth.c **** 	F0hz10 = frame->F0hz10;
 606:lib/rsynth-2.0-port/nsynth.c **** 	AVdb = frame->AVdb - 7;
 607:lib/rsynth-2.0-port/nsynth.c **** 	if (AVdb < 0)
 608:lib/rsynth-2.0-port/nsynth.c **** 		AVdb = 0;
 609:lib/rsynth-2.0-port/nsynth.c **** 
 610:lib/rsynth-2.0-port/nsynth.c **** 	amp_aspir = DBtoLIN(globals, frame->ASP) * .05;
 611:lib/rsynth-2.0-port/nsynth.c **** 	amp_frica = DBtoLIN(globals, frame->AF) * 0.25;
 612:lib/rsynth-2.0-port/nsynth.c **** 
 613:lib/rsynth-2.0-port/nsynth.c **** 	Kskew = frame->Kskew;
 614:lib/rsynth-2.0-port/nsynth.c **** 	par_amp_voice = DBtoLIN(globals, frame->AVpdb);
 615:lib/rsynth-2.0-port/nsynth.c **** 
 616:lib/rsynth-2.0-port/nsynth.c **** 	/* Fudge factors (which comprehend affects of formants on each other?)
 617:lib/rsynth-2.0-port/nsynth.c ****     with these in place ALL_PARALLEL should sound as close as 
 618:lib/rsynth-2.0-port/nsynth.c ****     possible to CASCADE_PARALLEL.
 619:lib/rsynth-2.0-port/nsynth.c ****     Possible problem feeding in Holmes's amplitudes given this.
 620:lib/rsynth-2.0-port/nsynth.c **** 	*/
 621:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF1 = DBtoLIN(globals, frame->A1) * 0.4;	/* -7.96 dB */
 622:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF2 = DBtoLIN(globals, frame->A2) * 0.15;	/* -16.5 dB */
 623:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF3 = DBtoLIN(globals, frame->A3) * 0.06;	/* -24.4 dB */
 624:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF4 = DBtoLIN(globals, frame->A4) * 0.04;	/* -28.0 dB */
 625:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF5 = DBtoLIN(globals, frame->A5) * 0.022;	/* -33.2 dB */
 626:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF6 = DBtoLIN(globals, frame->A6) * 0.03;	/* -30.5 dB */
 627:lib/rsynth-2.0-port/nsynth.c **** 	amp_parFN = DBtoLIN(globals, frame->ANP) * 0.6;	/* -4.44 dB */
 628:lib/rsynth-2.0-port/nsynth.c **** 	amp_bypas = DBtoLIN(globals, frame->AB) * 0.05;	/* -26.0 db */
 629:lib/rsynth-2.0-port/nsynth.c **** 
 630:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 8)
 631:lib/rsynth-2.0-port/nsynth.c **** 	{
 632:lib/rsynth-2.0-port/nsynth.c **** 		/* Inside Nyquist rate ? */
 633:lib/rsynth-2.0-port/nsynth.c **** 		if (globals->samrate >= 16000)
 634:lib/rsynth-2.0-port/nsynth.c **** 			setabc(7500, 600, &r8c);
 635:lib/rsynth-2.0-port/nsynth.c **** 		else
 636:lib/rsynth-2.0-port/nsynth.c **** 			globals->nfcascade = 6;
 637:lib/rsynth-2.0-port/nsynth.c **** 	}
 638:lib/rsynth-2.0-port/nsynth.c **** 
 639:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 7)
 640:lib/rsynth-2.0-port/nsynth.c **** 	{
 641:lib/rsynth-2.0-port/nsynth.c **** 		/* Inside Nyquist rate ? */
 642:lib/rsynth-2.0-port/nsynth.c **** 		if (globals->samrate >= 16000)
 643:lib/rsynth-2.0-port/nsynth.c **** 			setabc(6500, 500, &r7c);
 644:lib/rsynth-2.0-port/nsynth.c **** 		else
 645:lib/rsynth-2.0-port/nsynth.c **** 			globals->nfcascade = 6;
 646:lib/rsynth-2.0-port/nsynth.c **** 	}
 647:lib/rsynth-2.0-port/nsynth.c **** 
 648:lib/rsynth-2.0-port/nsynth.c **** 	/* Set coefficients of variable cascade resonators */
 649:lib/rsynth-2.0-port/nsynth.c **** 
 650:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 6)
 651:lib/rsynth-2.0-port/nsynth.c **** 		setabc(frame->F6hz, frame->B6hz, &r6c);
 652:lib/rsynth-2.0-port/nsynth.c **** 
 653:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 5)
 654:lib/rsynth-2.0-port/nsynth.c **** 		setabc(frame->F5hz, frame->B5hz, &r5c);
 655:lib/rsynth-2.0-port/nsynth.c **** 
 656:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F4hz, frame->B4hz, &r4c);
 657:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F3hz, frame->B3hz, &r3c);
 658:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F2hz, frame->B2hz, &r2c);
 659:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F1hz, frame->B1hz, &r1c);
 660:lib/rsynth-2.0-port/nsynth.c **** 
 661:lib/rsynth-2.0-port/nsynth.c **** 	/* Set coeficients of nasal resonator and zero antiresonator */
 662:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->FNPhz, frame->BNPhz, &rnpc);
 663:lib/rsynth-2.0-port/nsynth.c **** 	setzeroabc(frame->FNZhz, frame->BNZhz, &rnz);
 664:lib/rsynth-2.0-port/nsynth.c **** 
 665:lib/rsynth-2.0-port/nsynth.c **** 	/* Set coefficients of parallel resonators, and amplitude of outputs */
 666:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F1hz, frame->B1phz, &r1p, amp_parF1);
 667:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->FNPhz, frame->BNPhz, &rnpp, amp_parFN);
 668:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F2hz, frame->B2phz, &r2p, amp_parF2);
 669:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F3hz, frame->B3phz, &r3p, amp_parF3);
 670:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F4hz, frame->B4phz, &r4p, amp_parF4);
 671:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F5hz, frame->B5phz, &r5p, amp_parF5);
 672:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F6hz, frame->B6phz, &r6p, amp_parF6);
 673:lib/rsynth-2.0-port/nsynth.c **** 
 674:lib/rsynth-2.0-port/nsynth.c **** 
 675:lib/rsynth-2.0-port/nsynth.c **** 	/* fold overall gain into output resonator */
 676:lib/rsynth-2.0-port/nsynth.c **** 	Gain0 = frame->Gain0 - 3;
 677:lib/rsynth-2.0-port/nsynth.c **** 	if (Gain0 <= 0)
 678:lib/rsynth-2.0-port/nsynth.c **** 	Gain0 = 57;
 679:lib/rsynth-2.0-port/nsynth.c **** 	/* output low-pass filter - resonator with freq 0 and BW = globals->samrate
 680:lib/rsynth-2.0-port/nsynth.c ****     Thus 3db point is globals->samrate/2 i.e. Nyquist limit.
 681:lib/rsynth-2.0-port/nsynth.c ****     Only 3db down seems rather mild...
 682:lib/rsynth-2.0-port/nsynth.c **** 	*/
 683:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(0L, (long) globals->samrate, &rout, DBtoLIN(globals, Gain0));
 684:lib/rsynth-2.0-port/nsynth.c **** }
 685:lib/rsynth-2.0-port/nsynth.c **** 
 686:lib/rsynth-2.0-port/nsynth.c **** static short clip(klatt_global_ptr globals, float input)
 687:lib/rsynth-2.0-port/nsynth.c **** {
 688:lib/rsynth-2.0-port/nsynth.c **** 	long temp = input;
 689:lib/rsynth-2.0-port/nsynth.c **** 	/* clip on boundaries of 16-bit word */
 690:lib/rsynth-2.0-port/nsynth.c **** 	if (temp < -32767)
 691:lib/rsynth-2.0-port/nsynth.c **** 	{
 692:lib/rsynth-2.0-port/nsynth.c **** 		overload_warning(globals, -temp);
 693:lib/rsynth-2.0-port/nsynth.c **** 		temp = -32767;
 694:lib/rsynth-2.0-port/nsynth.c **** 	}
 695:lib/rsynth-2.0-port/nsynth.c **** 	else if (temp > 32767)
 696:lib/rsynth-2.0-port/nsynth.c **** 	{
 697:lib/rsynth-2.0-port/nsynth.c **** 		overload_warning(globals, temp);
 698:lib/rsynth-2.0-port/nsynth.c **** 		temp = 32767;
 699:lib/rsynth-2.0-port/nsynth.c **** 	}
 700:lib/rsynth-2.0-port/nsynth.c **** 	return (temp);
 701:lib/rsynth-2.0-port/nsynth.c **** }
 702:lib/rsynth-2.0-port/nsynth.c **** 
 703:lib/rsynth-2.0-port/nsynth.c **** /* Generic resonator function */
 704:lib/rsynth-2.0-port/nsynth.c **** static float resonator(resonator_ptr r, float input)
 705:lib/rsynth-2.0-port/nsynth.c **** {
  28              		.loc 1 705 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 706:lib/rsynth-2.0-port/nsynth.c **** 	register float x = r->a * input + r->b * r->p1 + r->c * r->p2;
  34              		.loc 1 706 0
  35 0000 90ED047A 		flds	s14, [r0, #16]
  36 0004 D0ED027A 		flds	s15, [r0, #8]
  37 0008 67EE277A 		fmuls	s15, s14, s15
  38 000c D0ED016A 		flds	s13, [r0, #4]
  39 0010 E6EE807A 		vfma.f32	s15, s13, s0
  40 0014 90ED036A 		flds	s12, [r0, #12]
  41 0018 D0ED056A 		flds	s13, [r0, #20]
  42 001c E6EE267A 		vfma.f32	s15, s12, s13
  43              	.LVL1:
 707:lib/rsynth-2.0-port/nsynth.c **** 	r->p2 = r->p1;
  44              		.loc 1 707 0
  45 0020 80ED057A 		fsts	s14, [r0, #20]
 708:lib/rsynth-2.0-port/nsynth.c **** 	r->p1 = x;
  46              		.loc 1 708 0
  47 0024 C0ED047A 		fsts	s15, [r0, #16]
 709:lib/rsynth-2.0-port/nsynth.c **** 	return x;
 710:lib/rsynth-2.0-port/nsynth.c **** }
  48              		.loc 1 710 0
  49 0028 B0EE670A 		fcpys	s0, s15
  50              	.LVL2:
  51 002c 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE125:
  55              		.global	__aeabi_f2d
  56              		.global	__aeabi_d2f
  57              		.global	__aeabi_dmul
  58              		.global	__aeabi_dadd
  59              		.global	__aeabi_dsub
  60              		.section	.text.setabc,"ax",%progbits
  61              		.align	1
  62              		.thumb
  63              		.thumb_func
  65              	setabc:
  66              	.LFB116:
 382:lib/rsynth-2.0-port/nsynth.c **** {
  67              		.loc 1 382 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 8
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              	.LVL3:
  72 0000 70B5     		push	{r4, r5, r6, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 16
  75              		.cfi_offset 4, -16
  76              		.cfi_offset 5, -12
  77              		.cfi_offset 6, -8
  78              		.cfi_offset 14, -4
  79 0002 2DED028B 		fstmfdd	sp!, {d8}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 24
  82              		.cfi_offset 80, -24
  83 0006 82B0     		sub	sp, sp, #8
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 32
  86 0008 0446     		mov	r4, r0
  87 000a 1646     		mov	r6, r2
  88              	.LVL4:
 383:lib/rsynth-2.0-port/nsynth.c **** 	double arg = minus_pi_t * bw;
  89              		.loc 1 383 0
  90 000c 07EE901A 		fmsr	s15, r1	@ int
  91 0010 B8EEE77A 		fsitos	s14, s15
  92 0014 2A4B     		ldr	r3, .L3
  93 0016 D3ED007A 		flds	s15, [r3, #0]
  94 001a 67EE277A 		fmuls	s15, s14, s15
  95 001e 17EE900A 		fmrs	r0, s15
  96              	.LVL5:
  97 0022 FFF7FEFF 		bl	__aeabi_f2d
  98              	.LVL6:
 384:lib/rsynth-2.0-port/nsynth.c **** 	float r = exp(arg);              /* Let r  =  exp(-pi bw t) */
  99              		.loc 1 384 0
 100 0026 41EC100B 		fmdrr	d0, r0, r1
 101 002a FFF7FEFF 		bl	exp
 102              	.LVL7:
 103 002e 51EC100B 		fmrrd	r0, r1, d0
 104 0032 FFF7FEFF 		bl	__aeabi_d2f
 105              	.LVL8:
 106 0036 08EE100A 		fmsr	s16, r0
 107              	.LVL9:
 385:lib/rsynth-2.0-port/nsynth.c **** 	rp->c = -(r * r);                /* Let c  =  -r**2 */
 108              		.loc 1 385 0
 109 003a 68EE487A 		fnmuls	s15, s16, s16
 110 003e C6ED037A 		fsts	s15, [r6, #12]
 111              	.LVL10:
 386:lib/rsynth-2.0-port/nsynth.c **** 	arg = two_pi_t * f;
 112              		.loc 1 386 0
 113 0042 07EE904A 		fmsr	s15, r4	@ int
 114 0046 B8EEE77A 		fsitos	s14, s15
 115 004a 1E4B     		ldr	r3, .L3+4
 116 004c D3ED007A 		flds	s15, [r3, #0]
 117 0050 67EE277A 		fmuls	s15, s14, s15
 118 0054 17EE900A 		fmrs	r0, s15
 119              	.LVL11:
 120 0058 FFF7FEFF 		bl	__aeabi_f2d
 121              	.LVL12:
 387:lib/rsynth-2.0-port/nsynth.c **** 	rp->b = r * cos(arg) * 2.0;      /* Let b = r * 2*cos(2 pi f t) */
 122              		.loc 1 387 0
 123 005c 41EC100B 		fmdrr	d0, r0, r1
 124 0060 FFF7FEFF 		bl	cos
 125              	.LVL13:
 126 0064 53EC102B 		fmrrd	r2, r3, d0
 127 0068 18EE100A 		fmrs	r0, s16
 128 006c 8DED010A 		fsts	s0, [sp, #4]	@ int
 129 0070 0093     		str	r3, [sp, #0]
 130 0072 FFF7FEFF 		bl	__aeabi_f2d
 131              	.LVL14:
 132 0076 019A     		ldr	r2, [sp, #4]
 133 0078 009B     		ldr	r3, [sp, #0]
 134 007a FFF7FEFF 		bl	__aeabi_dmul
 135              	.LVL15:
 136 007e 0246     		mov	r2, r0
 137 0080 0B46     		mov	r3, r1
 138 0082 FFF7FEFF 		bl	__aeabi_dadd
 139              	.LVL16:
 140 0086 FFF7FEFF 		bl	__aeabi_d2f
 141              	.LVL17:
 142 008a B060     		str	r0, [r6, #8]	@ float
 388:lib/rsynth-2.0-port/nsynth.c **** 	rp->a = 1.0 - rp->b - rp->c;     /* Let a = 1.0 - b - c */
 143              		.loc 1 388 0
 144 008c FFF7FEFF 		bl	__aeabi_f2d
 145              	.LVL18:
 146 0090 0246     		mov	r2, r0
 147 0092 0B46     		mov	r3, r1
 148 0094 0020     		movs	r0, #0
 149 0096 0C49     		ldr	r1, .L3+8
 150 0098 FFF7FEFF 		bl	__aeabi_dsub
 151              	.LVL19:
 152 009c 0446     		mov	r4, r0
 153              	.LVL20:
 154 009e 0D46     		mov	r5, r1
 155 00a0 F068     		ldr	r0, [r6, #12]	@ float
 156 00a2 FFF7FEFF 		bl	__aeabi_f2d
 157              	.LVL21:
 158 00a6 0246     		mov	r2, r0
 159 00a8 0B46     		mov	r3, r1
 160 00aa 2046     		mov	r0, r4
 161 00ac 2946     		mov	r1, r5
 162 00ae FFF7FEFF 		bl	__aeabi_dsub
 163              	.LVL22:
 164 00b2 FFF7FEFF 		bl	__aeabi_d2f
 165              	.LVL23:
 166 00b6 7060     		str	r0, [r6, #4]	@ float
 389:lib/rsynth-2.0-port/nsynth.c **** }
 167              		.loc 1 389 0
 168 00b8 02B0     		add	sp, sp, #8
 169 00ba BDEC028B 		fldmfdd	sp!, {d8}
 170 00be 70BD     		pop	{r4, r5, r6, pc}
 171              	.L4:
 172              		.align	2
 173              	.L3:
 174 00c0 00000000 		.word	.LANCHOR0
 175 00c4 00000000 		.word	.LANCHOR1
 176 00c8 0000F03F 		.word	1072693248
 177              		.cfi_endproc
 178              	.LFE116:
 180              		.section	.text.DBtoLIN,"ax",%progbits
 181              		.align	1
 182              		.thumb
 183              		.thumb_func
 185              	DBtoLIN:
 186              	.LFB119:
 422:lib/rsynth-2.0-port/nsynth.c **** {
 187              		.loc 1 422 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              	.LVL24:
 192 0000 08B5     		push	{r3, lr}
 193              	.LCFI3:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 3, -8
 196              		.cfi_offset 14, -4
 424:lib/rsynth-2.0-port/nsynth.c **** 	if (dB < 0)
 197              		.loc 1 424 0
 198 0002 0B1E     		subs	r3, r1, #0
 199 0004 07DB     		blt	.L7
 426:lib/rsynth-2.0-port/nsynth.c **** 	else if (dB >= 88)
 200              		.loc 1 426 0
 201 0006 572B     		cmp	r3, #87
 202 0008 08DD     		ble	.L6
 428:lib/rsynth-2.0-port/nsynth.c **** 		if (!globals->quiet_flag)
 203              		.loc 1 428 0
 204 000a 4368     		ldr	r3, [r0, #4]
 205 000c 2BB9     		cbnz	r3, .L8
 429:lib/rsynth-2.0-port/nsynth.c **** 			printf("Try to compute amptable[%ld]\n", dB);
 206              		.loc 1 429 0
 207 000e 0E48     		ldr	r0, .L9+8
 208              	.LVL25:
 209 0010 FFF7FEFF 		bl	printf
 210              	.LVL26:
 211 0014 01E0     		b	.L8
 212              	.LVL27:
 213              	.L7:
 425:lib/rsynth-2.0-port/nsynth.c **** 		dB = 0;
 214              		.loc 1 425 0
 215 0016 0023     		movs	r3, #0
 216 0018 00E0     		b	.L6
 217              	.LVL28:
 218              	.L8:
 430:lib/rsynth-2.0-port/nsynth.c **** 		dB = 87;
 219              		.loc 1 430 0
 220 001a 5723     		movs	r3, #87
 221              	.L6:
 222              	.LVL29:
 432:lib/rsynth-2.0-port/nsynth.c **** 	return amptable[dB] * 0.001;
 223              		.loc 1 432 0
 224 001c 0B4A     		ldr	r2, .L9+12
 225 001e 02EB8303 		add	r3, r2, r3, lsl #2
 226              	.LVL30:
 227 0022 1868     		ldr	r0, [r3, #0]	@ float
 228 0024 FFF7FEFF 		bl	__aeabi_f2d
 229              	.LVL31:
 230 0028 05A3     		adr	r3, .L9
 231 002a D3E90023 		ldrd	r2, [r3]
 232 002e FFF7FEFF 		bl	__aeabi_dmul
 233              	.LVL32:
 234 0032 FFF7FEFF 		bl	__aeabi_d2f
 235              	.LVL33:
 433:lib/rsynth-2.0-port/nsynth.c **** }
 236              		.loc 1 433 0
 237 0036 00EE100A 		fmsr	s0, r0
 238 003a 08BD     		pop	{r3, pc}
 239              	.L10:
 240 003c AFF30080 		.align	3
 241              	.L9:
 242 0040 FCA9F1D2 		.word	-755914244
 243 0044 4D62503F 		.word	1062232653
 244 0048 00000000 		.word	.LC0
 245 004c 00000000 		.word	.LANCHOR2
 246              		.cfi_endproc
 247              	.LFE119:
 249              		.global	__aeabi_i2d
 250              		.global	__aeabi_ddiv
 251              		.section	.text.overload_warning,"ax",%progbits
 252              		.align	1
 253              		.thumb
 254              		.thumb_func
 256              	overload_warning:
 257              	.LFB121:
 445:lib/rsynth-2.0-port/nsynth.c **** {
 258              		.loc 1 445 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL34:
 263 0000 10B5     		push	{r4, lr}
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 4, -8
 267              		.cfi_offset 14, -4
 268 0002 0C46     		mov	r4, r1
 446:lib/rsynth-2.0-port/nsynth.c **** 	if (warnsw == 0)
 269              		.loc 1 446 0
 270 0004 164B     		ldr	r3, .L15+8
 271 0006 1A68     		ldr	r2, [r3, #0]
 272 0008 002A     		cmp	r2, #0
 273 000a 23D1     		bne	.L11
 448:lib/rsynth-2.0-port/nsynth.c **** 		warnsw++;
 274              		.loc 1 448 0
 275 000c 0122     		movs	r2, #1
 276 000e 1A60     		str	r2, [r3, #0]
 449:lib/rsynth-2.0-port/nsynth.c **** 		if (!globals->quiet_flag)
 277              		.loc 1 449 0
 278 0010 4368     		ldr	r3, [r0, #4]
 279 0012 FBB9     		cbnz	r3, .L11
 280              	.LVL35:
 281              	.LBB6:
 282              	.LBB7:
 451:lib/rsynth-2.0-port/nsynth.c **** 			printf("\n* * * WARNING: ");
 283              		.loc 1 451 0
 284 0014 1348     		ldr	r0, .L15+12
 285              	.LVL36:
 286 0016 FFF7FEFF 		bl	printf
 287              	.LVL37:
 288              	.LBB8:
 289              	.LBB9:
 441:lib/rsynth-2.0-port/nsynth.c **** 	return 20.0 * log10((double) arg / 32767.0);
 290              		.loc 1 441 0
 291 001a 2046     		mov	r0, r4
 292 001c FFF7FEFF 		bl	__aeabi_i2d
 293              	.LVL38:
 294 0020 0DA3     		adr	r3, .L15
 295 0022 D3E90023 		ldrd	r2, [r3]
 296 0026 FFF7FEFF 		bl	__aeabi_ddiv
 297              	.LVL39:
 298 002a 41EC100B 		fmdrr	d0, r0, r1
 299 002e FFF7FEFF 		bl	log10
 300              	.LVL40:
 301 0032 51EC100B 		fmrrd	r0, r1, d0
 302 0036 0022     		movs	r2, #0
 303 0038 0B4B     		ldr	r3, .L15+16
 304 003a FFF7FEFF 		bl	__aeabi_dmul
 305              	.LVL41:
 306 003e FFF7FEFF 		bl	__aeabi_d2f
 307              	.LVL42:
 308              	.LBE9:
 309              	.LBE8:
 452:lib/rsynth-2.0-port/nsynth.c **** 			printf(" Signal at output of synthesizer (+%3.1f dB) exceeds 0 dB\n",
 310              		.loc 1 452 0
 311 0042 FFF7FEFF 		bl	__aeabi_f2d
 312              	.LVL43:
 313 0046 0246     		mov	r2, r0
 314 0048 0B46     		mov	r3, r1
 315 004a 0848     		ldr	r0, .L15+20
 316              	.LBE7:
 317              	.LBE6:
 456:lib/rsynth-2.0-port/nsynth.c **** }
 318              		.loc 1 456 0
 319 004c BDE81040 		pop	{r4, lr}
 320              	.LBB11:
 321              	.LBB10:
 452:lib/rsynth-2.0-port/nsynth.c **** 			printf(" Signal at output of synthesizer (+%3.1f dB) exceeds 0 dB\n",
 322              		.loc 1 452 0
 323 0050 FFF7FEBF 		b	printf
 324              	.LVL44:
 325              	.L11:
 326 0054 10BD     		pop	{r4, pc}
 327              	.L16:
 328 0056 00BF     		.align	3
 329              	.L15:
 330 0058 00000000 		.word	0
 331 005c C0FFDF40 		.word	1088421824
 332 0060 00000000 		.word	.LANCHOR3
 333 0064 1E000000 		.word	.LC1
 334 0068 00003440 		.word	1077149696
 335 006c 2F000000 		.word	.LC2
 336              	.LBE10:
 337              	.LBE11:
 338              		.cfi_endproc
 339              	.LFE121:
 341              		.section	.text.show_parms,"ax",%progbits
 342              		.align	1
 343              		.global	show_parms
 344              		.thumb
 345              		.thumb_func
 347              	show_parms:
 348              	.LFB112:
 295:lib/rsynth-2.0-port/nsynth.c **** {
 349              		.loc 1 295 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              	.LVL45:
 354 0000 70B5     		push	{r4, r5, r6, lr}
 355              	.LCFI5:
 356              		.cfi_def_cfa_offset 16
 357              		.cfi_offset 4, -16
 358              		.cfi_offset 5, -12
 359              		.cfi_offset 6, -8
 360              		.cfi_offset 14, -4
 361 0002 0D46     		mov	r5, r1
 298:lib/rsynth-2.0-port/nsynth.c **** 	if ((names++ % 64) == 0)
 362              		.loc 1 298 0
 363 0004 114B     		ldr	r3, .L23
 364 0006 1C68     		ldr	r4, [r3, #0]
 365 0008 621C     		adds	r2, r4, #1
 366 000a 1A60     		str	r2, [r3, #0]
 367 000c 14F03F04 		ands	r4, r4, #63
 368 0010 0AD1     		bne	.L18
 301:lib/rsynth-2.0-port/nsynth.c **** 			printf("%s ", par_name[i]);
 369              		.loc 1 301 0
 370 0012 0F4E     		ldr	r6, .L23+4
 371              	.LVL46:
 372              	.L19:
 301:lib/rsynth-2.0-port/nsynth.c **** 			printf("%s ", par_name[i]);
 373              		.loc 1 301 0 is_stmt 0 discriminator 2
 374 0014 0F48     		ldr	r0, .L23+8
 375 0016 A159     		ldr	r1, [r4, r6]
 376 0018 FFF7FEFF 		bl	printf
 377              	.LVL47:
 378 001c 0434     		adds	r4, r4, #4
 300:lib/rsynth-2.0-port/nsynth.c **** 		for (i = 0; i < NPAR; i++)
 379              		.loc 1 300 0 is_stmt 1 discriminator 2
 380 001e A02C     		cmp	r4, #160
 381 0020 F8D1     		bne	.L19
 302:lib/rsynth-2.0-port/nsynth.c **** 		printf("\n");
 382              		.loc 1 302 0
 383 0022 0D48     		ldr	r0, .L23+12
 384 0024 FFF7FEFF 		bl	printf
 385              	.LVL48:
 386              	.L18:
 298:lib/rsynth-2.0-port/nsynth.c **** 	if ((names++ % 64) == 0)
 387              		.loc 1 298 0 discriminator 1
 388 0028 0024     		movs	r4, #0
 306:lib/rsynth-2.0-port/nsynth.c **** 		printf("%*d ", (int) strlen(par_name[i]), pars[i]);
 389              		.loc 1 306 0 discriminator 1
 390 002a 094E     		ldr	r6, .L23+4
 391              	.LVL49:
 392              	.L20:
 306:lib/rsynth-2.0-port/nsynth.c **** 		printf("%*d ", (int) strlen(par_name[i]), pars[i]);
 393              		.loc 1 306 0 is_stmt 0 discriminator 2
 394 002c A059     		ldr	r0, [r4, r6]
 395 002e FFF7FEFF 		bl	strlen
 396              	.LVL50:
 397 0032 0146     		mov	r1, r0
 398 0034 0948     		ldr	r0, .L23+16
 399 0036 2A59     		ldr	r2, [r5, r4]
 400 0038 FFF7FEFF 		bl	printf
 401              	.LVL51:
 402 003c 0434     		adds	r4, r4, #4
 304:lib/rsynth-2.0-port/nsynth.c **** 	for (i = 0; i < NPAR; i++)
 403              		.loc 1 304 0 is_stmt 1 discriminator 2
 404 003e A02C     		cmp	r4, #160
 405 0040 F4D1     		bne	.L20
 308:lib/rsynth-2.0-port/nsynth.c **** 	printf("\n");
 406              		.loc 1 308 0
 407 0042 0548     		ldr	r0, .L23+12
 309:lib/rsynth-2.0-port/nsynth.c **** }
 408              		.loc 1 309 0
 409 0044 BDE87040 		pop	{r4, r5, r6, lr}
 308:lib/rsynth-2.0-port/nsynth.c **** 	printf("\n");
 410              		.loc 1 308 0
 411 0048 FFF7FEBF 		b	printf
 412              	.LVL52:
 413              	.L24:
 414              		.align	2
 415              	.L23:
 416 004c 00000000 		.word	.LANCHOR4
 417 0050 00000000 		.word	.LANCHOR5
 418 0054 6A000000 		.word	.LC3
 419 0058 6E000000 		.word	.LC4
 420 005c 70000000 		.word	.LC5
 421              		.cfi_endproc
 422              	.LFE112:
 424              		.global	__aeabi_d2iz
 425              		.section	.text.parwave,"ax",%progbits
 426              		.align	1
 427              		.global	parwave
 428              		.thumb
 429              		.thumb_func
 431              	parwave:
 432              	.LFB127:
 711:lib/rsynth-2.0-port/nsynth.c **** 
 712:lib/rsynth-2.0-port/nsynth.c **** /* Generic anti-resonator function
 713:lib/rsynth-2.0-port/nsynth.c ****    Same as resonator except that a,b,c need to be set with setzeroabc()
 714:lib/rsynth-2.0-port/nsynth.c ****    and we save inputs in p1/p2 rather than outputs.
 715:lib/rsynth-2.0-port/nsynth.c ****    There is currently only one of these - "rnz"
 716:lib/rsynth-2.0-port/nsynth.c ****  */
 717:lib/rsynth-2.0-port/nsynth.c **** /*  Output = (rnz.a * input) + (rnz.b * oldin1) + (rnz.c * oldin2) */
 718:lib/rsynth-2.0-port/nsynth.c **** 
 719:lib/rsynth-2.0-port/nsynth.c **** static float antiresonator(resonator_ptr r, float input)
 720:lib/rsynth-2.0-port/nsynth.c **** {
 721:lib/rsynth-2.0-port/nsynth.c **** 	register float x = r->a * input + r->b * r->p1 + r->c * r->p2;
 722:lib/rsynth-2.0-port/nsynth.c **** 	r->p2 = r->p1;
 723:lib/rsynth-2.0-port/nsynth.c **** 	r->p1 = input;
 724:lib/rsynth-2.0-port/nsynth.c **** 	return x;
 725:lib/rsynth-2.0-port/nsynth.c **** }
 726:lib/rsynth-2.0-port/nsynth.c **** 
 727:lib/rsynth-2.0-port/nsynth.c **** /*
 728:lib/rsynth-2.0-port/nsynth.c ****    function PARWAV
 729:lib/rsynth-2.0-port/nsynth.c **** 
 730:lib/rsynth-2.0-port/nsynth.c ****    CONVERT FRAME OF PARAMETER DATA TO A WAVEFORM CHUNK
 731:lib/rsynth-2.0-port/nsynth.c ****    Synthesize globals->nspfr samples of waveform and store in jwave[].
 732:lib/rsynth-2.0-port/nsynth.c ****  */
 733:lib/rsynth-2.0-port/nsynth.c **** 
 734:lib/rsynth-2.0-port/nsynth.c **** void parwave(klatt_global_ptr globals, klatt_frame_ptr frame, short *jwave)
 735:lib/rsynth-2.0-port/nsynth.c **** {
 433              		.loc 1 735 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 8
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              	.LVL53:
 438 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 439              	.LCFI6:
 440              		.cfi_def_cfa_offset 36
 441              		.cfi_offset 4, -36
 442              		.cfi_offset 5, -32
 443              		.cfi_offset 6, -28
 444              		.cfi_offset 7, -24
 445              		.cfi_offset 8, -20
 446              		.cfi_offset 9, -16
 447              		.cfi_offset 10, -12
 448              		.cfi_offset 11, -8
 449              		.cfi_offset 14, -4
 450 0004 2DED088B 		fstmfdd	sp!, {d8, d9, d10, d11}
 451              	.LCFI7:
 452              		.cfi_def_cfa_offset 68
 453              		.cfi_offset 80, -68
 454              		.cfi_offset 82, -60
 455              		.cfi_offset 84, -52
 456              		.cfi_offset 86, -44
 457 0008 83B0     		sub	sp, sp, #12
 458              	.LCFI8:
 459              		.cfi_def_cfa_offset 80
 460 000a 0746     		mov	r7, r0
 461 000c 0E46     		mov	r6, r1
 462 000e 0192     		str	r2, [sp, #4]
 463              	.LVL54:
 464              	.LBB48:
 465              	.LBB49:
 605:lib/rsynth-2.0-port/nsynth.c **** 	F0hz10 = frame->F0hz10;
 466              		.loc 1 605 0
 467 0010 0B68     		ldr	r3, [r1, #0]
 468 0012 7D4A     		ldr	r2, .L91+64
 469              	.LVL55:
 470 0014 1360     		str	r3, [r2, #0]
 606:lib/rsynth-2.0-port/nsynth.c **** 	AVdb = frame->AVdb - 7;
 471              		.loc 1 606 0
 472 0016 4B68     		ldr	r3, [r1, #4]
 607:lib/rsynth-2.0-port/nsynth.c **** 	if (AVdb < 0)
 473              		.loc 1 607 0
 474 0018 073B     		subs	r3, r3, #7
 475 001a 7C4A     		ldr	r2, .L91+68
 608:lib/rsynth-2.0-port/nsynth.c **** 		AVdb = 0;
 476              		.loc 1 608 0
 477 001c 48BF     		it	mi
 478 001e 0023     		movmi	r3, #0
 479 0020 1360     		str	r3, [r2, #0]
 610:lib/rsynth-2.0-port/nsynth.c **** 	amp_aspir = DBtoLIN(globals, frame->ASP) * .05;
 480              		.loc 1 610 0
 481 0022 896C     		ldr	r1, [r1, #72]
 482              	.LVL56:
 483 0024 FFF7FEFF 		bl	DBtoLIN
 484              	.LVL57:
 485 0028 10EE100A 		fmrs	r0, s0
 486 002c FFF7FEFF 		bl	__aeabi_f2d
 487              	.LVL58:
 488 0030 65A3     		adr	r3, .L91
 489 0032 D3E90023 		ldrd	r2, [r3]
 490 0036 FFF7FEFF 		bl	__aeabi_dmul
 491              	.LVL59:
 492 003a FFF7FEFF 		bl	__aeabi_d2f
 493              	.LVL60:
 494 003e 744B     		ldr	r3, .L91+72
 495 0040 1860     		str	r0, [r3, #0]	@ float
 611:lib/rsynth-2.0-port/nsynth.c **** 	amp_frica = DBtoLIN(globals, frame->AF) * 0.25;
 496              		.loc 1 611 0
 497 0042 3846     		mov	r0, r7
 498 0044 B16D     		ldr	r1, [r6, #88]
 499 0046 FFF7FEFF 		bl	DBtoLIN
 500              	.LVL61:
 501 004a F5EE007A 		fconsts	s15, #80
 502 004e 20EE270A 		fmuls	s0, s0, s15
 503 0052 704B     		ldr	r3, .L91+76
 504 0054 83ED000A 		fsts	s0, [r3, #0]
 613:lib/rsynth-2.0-port/nsynth.c **** 	Kskew = frame->Kskew;
 505              		.loc 1 613 0
 506 0058 F36D     		ldr	r3, [r6, #92]
 507 005a 6F4A     		ldr	r2, .L91+80
 508 005c 1360     		str	r3, [r2, #0]
 614:lib/rsynth-2.0-port/nsynth.c **** 	par_amp_voice = DBtoLIN(globals, frame->AVpdb);
 509              		.loc 1 614 0
 510 005e 3846     		mov	r0, r7
 511 0060 D6F89810 		ldr	r1, [r6, #152]
 512 0064 FFF7FEFF 		bl	DBtoLIN
 513              	.LVL62:
 514 0068 6C4B     		ldr	r3, .L91+84
 515 006a 83ED000A 		fsts	s0, [r3, #0]
 621:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF1 = DBtoLIN(globals, frame->A1) * 0.4;	/* -7.96 dB */
 516              		.loc 1 621 0
 517 006e 3846     		mov	r0, r7
 518 0070 316E     		ldr	r1, [r6, #96]
 519 0072 FFF7FEFF 		bl	DBtoLIN
 520              	.LVL63:
 521 0076 10EE100A 		fmrs	r0, s0
 522 007a FFF7FEFF 		bl	__aeabi_f2d
 523              	.LVL64:
 524 007e 54A3     		adr	r3, .L91+8
 525 0080 D3E90023 		ldrd	r2, [r3]
 526 0084 FFF7FEFF 		bl	__aeabi_dmul
 527              	.LVL65:
 528 0088 FFF7FEFF 		bl	__aeabi_d2f
 529              	.LVL66:
 530 008c 0BEE900A 		fmsr	s23, r0
 531              	.LVL67:
 622:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF2 = DBtoLIN(globals, frame->A2) * 0.15;	/* -16.5 dB */
 532              		.loc 1 622 0
 533 0090 3846     		mov	r0, r7
 534              	.LVL68:
 535 0092 B16E     		ldr	r1, [r6, #104]
 536 0094 FFF7FEFF 		bl	DBtoLIN
 537              	.LVL69:
 538 0098 10EE100A 		fmrs	r0, s0
 539 009c FFF7FEFF 		bl	__aeabi_f2d
 540              	.LVL70:
 541 00a0 4DA3     		adr	r3, .L91+16
 542 00a2 D3E90023 		ldrd	r2, [r3]
 543 00a6 FFF7FEFF 		bl	__aeabi_dmul
 544              	.LVL71:
 545 00aa FFF7FEFF 		bl	__aeabi_d2f
 546              	.LVL72:
 547 00ae 0AEE900A 		fmsr	s21, r0
 548              	.LVL73:
 623:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF3 = DBtoLIN(globals, frame->A3) * 0.06;	/* -24.4 dB */
 549              		.loc 1 623 0
 550 00b2 3846     		mov	r0, r7
 551              	.LVL74:
 552 00b4 316F     		ldr	r1, [r6, #112]
 553 00b6 FFF7FEFF 		bl	DBtoLIN
 554              	.LVL75:
 555 00ba 10EE100A 		fmrs	r0, s0
 556 00be FFF7FEFF 		bl	__aeabi_f2d
 557              	.LVL76:
 558 00c2 47A3     		adr	r3, .L91+24
 559 00c4 D3E90023 		ldrd	r2, [r3]
 560 00c8 FFF7FEFF 		bl	__aeabi_dmul
 561              	.LVL77:
 562 00cc FFF7FEFF 		bl	__aeabi_d2f
 563              	.LVL78:
 564 00d0 09EE900A 		fmsr	s19, r0
 565              	.LVL79:
 624:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF4 = DBtoLIN(globals, frame->A4) * 0.04;	/* -28.0 dB */
 566              		.loc 1 624 0
 567 00d4 3846     		mov	r0, r7
 568              	.LVL80:
 569 00d6 B16F     		ldr	r1, [r6, #120]
 570 00d8 FFF7FEFF 		bl	DBtoLIN
 571              	.LVL81:
 572 00dc 10EE100A 		fmrs	r0, s0
 573 00e0 FFF7FEFF 		bl	__aeabi_f2d
 574              	.LVL82:
 575 00e4 40A3     		adr	r3, .L91+32
 576 00e6 D3E90023 		ldrd	r2, [r3]
 577 00ea FFF7FEFF 		bl	__aeabi_dmul
 578              	.LVL83:
 579 00ee FFF7FEFF 		bl	__aeabi_d2f
 580              	.LVL84:
 581 00f2 09EE100A 		fmsr	s18, r0
 582              	.LVL85:
 625:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF5 = DBtoLIN(globals, frame->A5) * 0.022;	/* -33.2 dB */
 583              		.loc 1 625 0
 584 00f6 3846     		mov	r0, r7
 585              	.LVL86:
 586 00f8 D6F88010 		ldr	r1, [r6, #128]
 587 00fc FFF7FEFF 		bl	DBtoLIN
 588              	.LVL87:
 589 0100 10EE100A 		fmrs	r0, s0
 590 0104 FFF7FEFF 		bl	__aeabi_f2d
 591              	.LVL88:
 592 0108 39A3     		adr	r3, .L91+40
 593 010a D3E90023 		ldrd	r2, [r3]
 594 010e FFF7FEFF 		bl	__aeabi_dmul
 595              	.LVL89:
 596 0112 FFF7FEFF 		bl	__aeabi_d2f
 597              	.LVL90:
 598 0116 08EE900A 		fmsr	s17, r0
 599              	.LVL91:
 626:lib/rsynth-2.0-port/nsynth.c **** 	amp_parF6 = DBtoLIN(globals, frame->A6) * 0.03;	/* -30.5 dB */
 600              		.loc 1 626 0
 601 011a 3846     		mov	r0, r7
 602              	.LVL92:
 603 011c D6F88810 		ldr	r1, [r6, #136]
 604 0120 FFF7FEFF 		bl	DBtoLIN
 605              	.LVL93:
 606 0124 10EE100A 		fmrs	r0, s0
 607 0128 FFF7FEFF 		bl	__aeabi_f2d
 608              	.LVL94:
 609 012c 32A3     		adr	r3, .L91+48
 610 012e D3E90023 		ldrd	r2, [r3]
 611 0132 FFF7FEFF 		bl	__aeabi_dmul
 612              	.LVL95:
 613 0136 FFF7FEFF 		bl	__aeabi_d2f
 614              	.LVL96:
 615 013a 08EE100A 		fmsr	s16, r0
 616              	.LVL97:
 627:lib/rsynth-2.0-port/nsynth.c **** 	amp_parFN = DBtoLIN(globals, frame->ANP) * 0.6;	/* -4.44 dB */
 617              		.loc 1 627 0
 618 013e 3846     		mov	r0, r7
 619              	.LVL98:
 620 0140 D6F89010 		ldr	r1, [r6, #144]
 621 0144 FFF7FEFF 		bl	DBtoLIN
 622              	.LVL99:
 623 0148 10EE100A 		fmrs	r0, s0
 624 014c FFF7FEFF 		bl	__aeabi_f2d
 625              	.LVL100:
 626 0150 2BA3     		adr	r3, .L91+56
 627 0152 D3E90023 		ldrd	r2, [r3]
 628 0156 FFF7FEFF 		bl	__aeabi_dmul
 629              	.LVL101:
 630 015a FFF7FEFF 		bl	__aeabi_d2f
 631              	.LVL102:
 632 015e 0BEE100A 		fmsr	s22, r0
 633              	.LVL103:
 628:lib/rsynth-2.0-port/nsynth.c **** 	amp_bypas = DBtoLIN(globals, frame->AB) * 0.05;	/* -26.0 db */
 634              		.loc 1 628 0
 635 0162 3846     		mov	r0, r7
 636              	.LVL104:
 637 0164 D6F89410 		ldr	r1, [r6, #148]
 638 0168 FFF7FEFF 		bl	DBtoLIN
 639              	.LVL105:
 640 016c 10EE100A 		fmrs	r0, s0
 641 0170 FFF7FEFF 		bl	__aeabi_f2d
 642              	.LVL106:
 643 0174 14A3     		adr	r3, .L91
 644 0176 D3E90023 		ldrd	r2, [r3]
 645 017a FFF7FEFF 		bl	__aeabi_dmul
 646              	.LVL107:
 647 017e FFF7FEFF 		bl	__aeabi_d2f
 648              	.LVL108:
 649 0182 274B     		ldr	r3, .L91+88
 650 0184 1860     		str	r0, [r3, #0]	@ float
 630:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 8)
 651              		.loc 1 630 0
 652 0186 7B69     		ldr	r3, [r7, #20]
 653 0188 072B     		cmp	r3, #7
 654 018a 0DDD     		ble	.L28
 633:lib/rsynth-2.0-port/nsynth.c **** 		if (globals->samrate >= 16000)
 655              		.loc 1 633 0
 656 018c 3B69     		ldr	r3, [r7, #16]
 657 018e B3F57A5F 		cmp	r3, #16000
 658 0192 07DB     		blt	.L29
 634:lib/rsynth-2.0-port/nsynth.c **** 			setabc(7500, 600, &r8c);
 659              		.loc 1 634 0
 660 0194 41F64C50 		movw	r0, #7500
 661 0198 4FF41671 		mov	r1, #600
 662 019c 214A     		ldr	r2, .L91+92
 663 019e FFF7FEFF 		bl	setabc
 664              	.LVL109:
 665 01a2 01E0     		b	.L28
 666              	.L29:
 636:lib/rsynth-2.0-port/nsynth.c **** 			globals->nfcascade = 6;
 667              		.loc 1 636 0
 668 01a4 0623     		movs	r3, #6
 669 01a6 7B61     		str	r3, [r7, #20]
 670              	.L28:
 639:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 7)
 671              		.loc 1 639 0
 672 01a8 7B69     		ldr	r3, [r7, #20]
 673 01aa 062B     		cmp	r3, #6
 674 01ac 40DD     		ble	.L30
 642:lib/rsynth-2.0-port/nsynth.c **** 		if (globals->samrate >= 16000)
 675              		.loc 1 642 0
 676 01ae 3B69     		ldr	r3, [r7, #16]
 677 01b0 B3F57A5F 		cmp	r3, #16000
 678 01b4 3ADB     		blt	.L31
 643:lib/rsynth-2.0-port/nsynth.c **** 			setabc(6500, 500, &r7c);
 679              		.loc 1 643 0
 680 01b6 41F66410 		movw	r0, #6500
 681 01ba 4FF4FA71 		mov	r1, #500
 682 01be 1A4A     		ldr	r2, .L91+96
 683 01c0 FFF7FEFF 		bl	setabc
 684              	.LVL110:
 685 01c4 34E0     		b	.L30
 686              	.L92:
 687 01c6 00BF     		.align	3
 688              	.L91:
 689 01c8 9A999999 		.word	-1717986918
 690 01cc 9999A93F 		.word	1068079513
 691 01d0 9A999999 		.word	-1717986918
 692 01d4 9999D93F 		.word	1071225241
 693 01d8 33333333 		.word	858993459
 694 01dc 3333C33F 		.word	1069757235
 695 01e0 B81E85EB 		.word	-343597384
 696 01e4 51B8AE3F 		.word	1068415057
 697 01e8 7B14AE47 		.word	1202590843
 698 01ec E17AA43F 		.word	1067743969
 699 01f0 BA490C02 		.word	34359738
 700 01f4 2B87963F 		.word	1066829611
 701 01f8 B81E85EB 		.word	-343597384
 702 01fc 51B89E3F 		.word	1067366481
 703 0200 33333333 		.word	858993459
 704 0204 3333E33F 		.word	1071854387
 705 0208 00000000 		.word	.LANCHOR6
 706 020c 00000000 		.word	.LANCHOR7
 707 0210 00000000 		.word	.LANCHOR8
 708 0214 00000000 		.word	.LANCHOR9
 709 0218 00000000 		.word	.LANCHOR10
 710 021c 00000000 		.word	.LANCHOR11
 711 0220 00000000 		.word	.LANCHOR12
 712 0224 00000000 		.word	.LANCHOR13
 713 0228 00000000 		.word	.LANCHOR14
 714              	.L31:
 645:lib/rsynth-2.0-port/nsynth.c **** 			globals->nfcascade = 6;
 715              		.loc 1 645 0
 716 022c 0623     		movs	r3, #6
 717 022e 7B61     		str	r3, [r7, #20]
 718              	.L30:
 650:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 6)
 719              		.loc 1 650 0
 720 0230 7B69     		ldr	r3, [r7, #20]
 721 0232 052B     		cmp	r3, #5
 722 0234 04DD     		ble	.L32
 651:lib/rsynth-2.0-port/nsynth.c **** 		setabc(frame->F6hz, frame->B6hz, &r6c);
 723              		.loc 1 651 0
 724 0236 306B     		ldr	r0, [r6, #48]
 725 0238 716B     		ldr	r1, [r6, #52]
 726 023a BF4A     		ldr	r2, .L93+24
 727 023c FFF7FEFF 		bl	setabc
 728              	.LVL111:
 729              	.L32:
 653:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->nfcascade >= 5)
 730              		.loc 1 653 0
 731 0240 7B69     		ldr	r3, [r7, #20]
 732 0242 042B     		cmp	r3, #4
 733 0244 04DD     		ble	.L33
 654:lib/rsynth-2.0-port/nsynth.c **** 		setabc(frame->F5hz, frame->B5hz, &r5c);
 734              		.loc 1 654 0
 735 0246 B06A     		ldr	r0, [r6, #40]
 736 0248 F16A     		ldr	r1, [r6, #44]
 737 024a BC4A     		ldr	r2, .L93+28
 738 024c FFF7FEFF 		bl	setabc
 739              	.LVL112:
 740              	.L33:
 656:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F4hz, frame->B4hz, &r4c);
 741              		.loc 1 656 0
 742 0250 306A     		ldr	r0, [r6, #32]
 743 0252 716A     		ldr	r1, [r6, #36]
 744 0254 BA4A     		ldr	r2, .L93+32
 745 0256 FFF7FEFF 		bl	setabc
 746              	.LVL113:
 657:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F3hz, frame->B3hz, &r3c);
 747              		.loc 1 657 0
 748 025a B069     		ldr	r0, [r6, #24]
 749 025c F169     		ldr	r1, [r6, #28]
 750 025e B94A     		ldr	r2, .L93+36
 751 0260 FFF7FEFF 		bl	setabc
 752              	.LVL114:
 658:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F2hz, frame->B2hz, &r2c);
 753              		.loc 1 658 0
 754 0264 3069     		ldr	r0, [r6, #16]
 755 0266 7169     		ldr	r1, [r6, #20]
 756 0268 B74A     		ldr	r2, .L93+40
 757 026a FFF7FEFF 		bl	setabc
 758              	.LVL115:
 659:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->F1hz, frame->B1hz, &r1c);
 759              		.loc 1 659 0
 760 026e B068     		ldr	r0, [r6, #8]
 761 0270 F168     		ldr	r1, [r6, #12]
 762 0272 B64A     		ldr	r2, .L93+44
 763 0274 FFF7FEFF 		bl	setabc
 764              	.LVL116:
 662:lib/rsynth-2.0-port/nsynth.c **** 	setabc(frame->FNPhz, frame->BNPhz, &rnpc);
 765              		.loc 1 662 0
 766 0278 306C     		ldr	r0, [r6, #64]
 767 027a 716C     		ldr	r1, [r6, #68]
 768 027c B44A     		ldr	r2, .L93+48
 769 027e FFF7FEFF 		bl	setabc
 770              	.LVL117:
 771              	.LBB50:
 772              	.LBB51:
 663:lib/rsynth-2.0-port/nsynth.c **** 	setzeroabc(frame->FNZhz, frame->BNZhz, &rnz);
 773              		.loc 1 663 0
 774 0282 B44C     		ldr	r4, .L93+52
 410:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);               /* First compute ordinary resonator coefficients */
 775              		.loc 1 410 0
 776 0284 B06B     		ldr	r0, [r6, #56]
 777 0286 F16B     		ldr	r1, [r6, #60]
 778 0288 2246     		mov	r2, r4
 779 028a FFF7FEFF 		bl	setabc
 780              	.LVL118:
 412:lib/rsynth-2.0-port/nsynth.c **** 	rp->a = 1.0 / rp->a;             /* a'=  1/a */
 781              		.loc 1 412 0
 782 028e B7EE00AA 		fconsts	s20, #112
 783 0292 D4ED017A 		flds	s15, [r4, #4]
 784 0296 CAEE277A 		fdivs	s15, s20, s15
 785 029a C4ED017A 		fsts	s15, [r4, #4]
 413:lib/rsynth-2.0-port/nsynth.c **** 	rp->b *= -rp->a;                 /* b'= -b/a */
 786              		.loc 1 413 0
 787 029e F1EE677A 		fnegs	s15, s15
 788 02a2 94ED027A 		flds	s14, [r4, #8]
 789 02a6 27EE277A 		fmuls	s14, s14, s15
 790 02aa 84ED027A 		fsts	s14, [r4, #8]
 414:lib/rsynth-2.0-port/nsynth.c **** 	rp->c *= -rp->a;                 /* c'= -c/a */
 791              		.loc 1 414 0
 792 02ae 94ED037A 		flds	s14, [r4, #12]
 793 02b2 67EE277A 		fmuls	s15, s14, s15
 794 02b6 C4ED037A 		fsts	s15, [r4, #12]
 795              	.LVL119:
 796              	.LBE51:
 797              	.LBE50:
 798              	.LBB52:
 799              	.LBB53:
 666:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F1hz, frame->B1phz, &r1p, amp_parF1);
 800              		.loc 1 666 0
 801 02ba A74C     		ldr	r4, .L93+56
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 802              		.loc 1 398 0
 803 02bc B068     		ldr	r0, [r6, #8]
 804 02be 716E     		ldr	r1, [r6, #100]
 805 02c0 2246     		mov	r2, r4
 806 02c2 FFF7FEFF 		bl	setabc
 807              	.LVL120:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 808              		.loc 1 399 0
 809 02c6 D4ED017A 		flds	s15, [r4, #4]
 810 02ca 67EEABBA 		fmuls	s23, s15, s23
 811              	.LVL121:
 812 02ce C4ED01BA 		fsts	s23, [r4, #4]
 813              	.LVL122:
 814              	.LBE53:
 815              	.LBE52:
 816              	.LBB54:
 817              	.LBB55:
 667:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->FNPhz, frame->BNPhz, &rnpp, amp_parFN);
 818              		.loc 1 667 0
 819 02d2 A24C     		ldr	r4, .L93+60
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 820              		.loc 1 398 0
 821 02d4 306C     		ldr	r0, [r6, #64]
 822 02d6 716C     		ldr	r1, [r6, #68]
 823 02d8 2246     		mov	r2, r4
 824 02da FFF7FEFF 		bl	setabc
 825              	.LVL123:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 826              		.loc 1 399 0
 827 02de D4ED017A 		flds	s15, [r4, #4]
 828 02e2 27EE8BBA 		fmuls	s22, s15, s22
 829              	.LVL124:
 830 02e6 84ED01BA 		fsts	s22, [r4, #4]
 831              	.LVL125:
 832              	.LBE55:
 833              	.LBE54:
 834              	.LBB56:
 835              	.LBB57:
 668:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F2hz, frame->B2phz, &r2p, amp_parF2);
 836              		.loc 1 668 0
 837 02ea 9D4C     		ldr	r4, .L93+64
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 838              		.loc 1 398 0
 839 02ec 3069     		ldr	r0, [r6, #16]
 840 02ee F16E     		ldr	r1, [r6, #108]
 841 02f0 2246     		mov	r2, r4
 842 02f2 FFF7FEFF 		bl	setabc
 843              	.LVL126:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 844              		.loc 1 399 0
 845 02f6 D4ED017A 		flds	s15, [r4, #4]
 846 02fa 67EEAAAA 		fmuls	s21, s15, s21
 847              	.LVL127:
 848 02fe C4ED01AA 		fsts	s21, [r4, #4]
 849              	.LVL128:
 850              	.LBE57:
 851              	.LBE56:
 852              	.LBB58:
 853              	.LBB59:
 669:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F3hz, frame->B3phz, &r3p, amp_parF3);
 854              		.loc 1 669 0
 855 0302 984C     		ldr	r4, .L93+68
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 856              		.loc 1 398 0
 857 0304 B069     		ldr	r0, [r6, #24]
 858 0306 716F     		ldr	r1, [r6, #116]
 859 0308 2246     		mov	r2, r4
 860 030a FFF7FEFF 		bl	setabc
 861              	.LVL129:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 862              		.loc 1 399 0
 863 030e D4ED017A 		flds	s15, [r4, #4]
 864 0312 67EEA99A 		fmuls	s19, s15, s19
 865              	.LVL130:
 866 0316 C4ED019A 		fsts	s19, [r4, #4]
 867              	.LVL131:
 868              	.LBE59:
 869              	.LBE58:
 870              	.LBB60:
 871              	.LBB61:
 670:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F4hz, frame->B4phz, &r4p, amp_parF4);
 872              		.loc 1 670 0
 873 031a 934C     		ldr	r4, .L93+72
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 874              		.loc 1 398 0
 875 031c 306A     		ldr	r0, [r6, #32]
 876 031e F16F     		ldr	r1, [r6, #124]
 877 0320 2246     		mov	r2, r4
 878 0322 FFF7FEFF 		bl	setabc
 879              	.LVL132:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 880              		.loc 1 399 0
 881 0326 D4ED017A 		flds	s15, [r4, #4]
 882 032a 27EE899A 		fmuls	s18, s15, s18
 883              	.LVL133:
 884 032e 84ED019A 		fsts	s18, [r4, #4]
 885              	.LVL134:
 886              	.LBE61:
 887              	.LBE60:
 888              	.LBB62:
 889              	.LBB63:
 671:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F5hz, frame->B5phz, &r5p, amp_parF5);
 890              		.loc 1 671 0
 891 0332 8E4C     		ldr	r4, .L93+76
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 892              		.loc 1 398 0
 893 0334 B06A     		ldr	r0, [r6, #40]
 894 0336 D6F88410 		ldr	r1, [r6, #132]
 895 033a 2246     		mov	r2, r4
 896 033c FFF7FEFF 		bl	setabc
 897              	.LVL135:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 898              		.loc 1 399 0
 899 0340 D4ED017A 		flds	s15, [r4, #4]
 900 0344 67EEA88A 		fmuls	s17, s15, s17
 901              	.LVL136:
 902 0348 C4ED018A 		fsts	s17, [r4, #4]
 903              	.LVL137:
 904              	.LBE63:
 905              	.LBE62:
 906              	.LBB64:
 907              	.LBB65:
 672:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(frame->F6hz, frame->B6phz, &r6p, amp_parF6);
 908              		.loc 1 672 0
 909 034c 884C     		ldr	r4, .L93+80
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 910              		.loc 1 398 0
 911 034e 306B     		ldr	r0, [r6, #48]
 912 0350 D6F88C10 		ldr	r1, [r6, #140]
 913 0354 2246     		mov	r2, r4
 914 0356 FFF7FEFF 		bl	setabc
 915              	.LVL138:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 916              		.loc 1 399 0
 917 035a D4ED017A 		flds	s15, [r4, #4]
 918 035e 27EE888A 		fmuls	s16, s15, s16
 919              	.LVL139:
 920 0362 84ED018A 		fsts	s16, [r4, #4]
 921              	.LBE65:
 922              	.LBE64:
 676:lib/rsynth-2.0-port/nsynth.c **** 	Gain0 = frame->Gain0 - 3;
 923              		.loc 1 676 0
 924 0366 D6F89C30 		ldr	r3, [r6, #156]
 925 036a D91E     		subs	r1, r3, #3
 926              	.LVL140:
 683:lib/rsynth-2.0-port/nsynth.c **** 	setabcg(0L, (long) globals->samrate, &rout, DBtoLIN(globals, Gain0));
 927              		.loc 1 683 0
 928 036c 3D69     		ldr	r5, [r7, #16]
 929 036e 3846     		mov	r0, r7
 930 0370 0029     		cmp	r1, #0
 931 0372 D8BF     		it	le
 932 0374 3921     		movle	r1, #57
 933              	.LVL141:
 934 0376 FFF7FEFF 		bl	DBtoLIN
 935              	.LVL142:
 936 037a B0EE408A 		fcpys	s16, s0
 937              	.LVL143:
 938              	.LBB66:
 939              	.LBB67:
 940 037e 7D4C     		ldr	r4, .L93+84
 398:lib/rsynth-2.0-port/nsynth.c **** 	setabc(f, bw, rp);
 941              		.loc 1 398 0
 942 0380 0020     		movs	r0, #0
 943 0382 2946     		mov	r1, r5
 944 0384 2246     		mov	r2, r4
 945 0386 FFF7FEFF 		bl	setabc
 946              	.LVL144:
 399:lib/rsynth-2.0-port/nsynth.c **** 	rp->a *= gain;
 947              		.loc 1 399 0
 948 038a D4ED017A 		flds	s15, [r4, #4]
 949 038e 27EE888A 		fmuls	s16, s15, s16
 950              	.LVL145:
 951 0392 84ED018A 		fsts	s16, [r4, #4]
 952              	.LBE67:
 953              	.LBE66:
 954              	.LBE49:
 955              	.LBE48:
 736:lib/rsynth-2.0-port/nsynth.c **** 	long ns;
 737:lib/rsynth-2.0-port/nsynth.c **** 	float out = 0.0;
 738:lib/rsynth-2.0-port/nsynth.c **** 	/* Output of cascade branch, also final output  */
 739:lib/rsynth-2.0-port/nsynth.c **** 
 740:lib/rsynth-2.0-port/nsynth.c **** 	/* Initialize synthesizer and get specification for current speech
 741:lib/rsynth-2.0-port/nsynth.c ****     frame from host microcomputer */
 742:lib/rsynth-2.0-port/nsynth.c **** 
 743:lib/rsynth-2.0-port/nsynth.c **** 	frame_init(globals, frame);
 744:lib/rsynth-2.0-port/nsynth.c **** 
 745:lib/rsynth-2.0-port/nsynth.c **** 	if (globals->f0_flutter != 0)
 956              		.loc 1 745 0
 957 0396 D7F80880 		ldr	r8, [r7, #8]
 958 039a B8F1000F 		cmp	r8, #0
 959 039e 6DD0     		beq	.L35
 746:lib/rsynth-2.0-port/nsynth.c **** 	{
 747:lib/rsynth-2.0-port/nsynth.c **** 		time_count++;                  /* used for f0 flutter */
 960              		.loc 1 747 0
 961 03a0 DFF80492 		ldr	r9, .L93+136
 962 03a4 D9F80030 		ldr	r3, [r9, #0]
 963 03a8 03F1010A 		add	sl, r3, #1
 964 03ac C9F800A0 		str	sl, [r9, #0]
 965              	.LVL146:
 966              	.LBB68:
 967              	.LBB69:
 323:lib/rsynth-2.0-port/nsynth.c **** 	long original_f0 = pars->F0hz10 / 10;
 968              		.loc 1 323 0
 969 03b0 3368     		ldr	r3, [r6, #0]
 325:lib/rsynth-2.0-port/nsynth.c **** 	double flb = (double) original_f0 / 100;
 970              		.loc 1 325 0
 971 03b2 0A20     		movs	r0, #10
 972 03b4 93FBF0F0 		sdiv	r0, r3, r0
 973              	.LVL147:
 974 03b8 FFF7FEFF 		bl	__aeabi_i2d
 975              	.LVL148:
 976 03bc 0022     		movs	r2, #0
 977 03be 6E4B     		ldr	r3, .L93+88
 978 03c0 FFF7FEFF 		bl	__aeabi_ddiv
 979              	.LVL149:
 980 03c4 0446     		mov	r4, r0
 981 03c6 0D46     		mov	r5, r1
 982              	.LVL150:
 326:lib/rsynth-2.0-port/nsynth.c **** 	double flc = sin(2 * PI * 12.7 * time_count);
 983              		.loc 1 326 0
 984 03c8 5046     		mov	r0, sl
 985 03ca FFF7FEFF 		bl	__aeabi_i2d
 986              	.LVL151:
 987 03ce 54A3     		adr	r3, .L93
 988 03d0 D3E90023 		ldrd	r2, [r3]
 989 03d4 FFF7FEFF 		bl	__aeabi_dmul
 990              	.LVL152:
 991 03d8 41EC100B 		fmdrr	d0, r0, r1
 992 03dc FFF7FEFF 		bl	sin
 993              	.LVL153:
 994 03e0 B0EE409A 		fcpys	s18, s0
 995 03e4 F0EE609A 		fcpys	s19, s1
 996              	.LVL154:
 327:lib/rsynth-2.0-port/nsynth.c **** 	double fld = sin(2 * PI * 7.1 * time_count);
 997              		.loc 1 327 0
 998 03e8 D9F80000 		ldr	r0, [r9, #0]
 999 03ec FFF7FEFF 		bl	__aeabi_i2d
 1000              	.LVL155:
 1001 03f0 4DA3     		adr	r3, .L93+8
 1002 03f2 D3E90023 		ldrd	r2, [r3]
 1003 03f6 FFF7FEFF 		bl	__aeabi_dmul
 1004              	.LVL156:
 1005 03fa 41EC100B 		fmdrr	d0, r0, r1
 1006 03fe FFF7FEFF 		bl	sin
 1007              	.LVL157:
 1008 0402 B0EE408A 		fcpys	s16, s0
 1009 0406 F0EE608A 		fcpys	s17, s1
 1010              	.LVL158:
 328:lib/rsynth-2.0-port/nsynth.c **** 	double fle = sin(2 * PI * 4.7 * time_count);
 1011              		.loc 1 328 0
 1012 040a D9F80000 		ldr	r0, [r9, #0]
 1013 040e FFF7FEFF 		bl	__aeabi_i2d
 1014              	.LVL159:
 1015 0412 47A3     		adr	r3, .L93+16
 1016 0414 D3E90023 		ldrd	r2, [r3]
 1017 0418 FFF7FEFF 		bl	__aeabi_dmul
 1018              	.LVL160:
 1019 041c 41EC100B 		fmdrr	d0, r0, r1
 1020 0420 FFF7FEFF 		bl	sin
 1021              	.LVL161:
 1022 0424 5BEC10AB 		fmrrd	sl, fp, d0
 1023              	.LVL162:
 330:lib/rsynth-2.0-port/nsynth.c **** 	F0hz10 += (long) delta_f0;
 1024              		.loc 1 330 0
 1025 0428 DFF88091 		ldr	r9, .L93+140
 324:lib/rsynth-2.0-port/nsynth.c **** 	double fla = (double) globals->f0_flutter / 50;
 1026              		.loc 1 324 0
 1027 042c 4046     		mov	r0, r8
 1028 042e FFF7FEFF 		bl	__aeabi_i2d
 1029              	.LVL163:
 1030 0432 0022     		movs	r2, #0
 1031 0434 514B     		ldr	r3, .L93+92
 1032 0436 FFF7FEFF 		bl	__aeabi_ddiv
 1033              	.LVL164:
 329:lib/rsynth-2.0-port/nsynth.c **** 	double delta_f0 = fla * flb * (flc + fld + fle) * 10;
 1034              		.loc 1 329 0
 1035 043a 2246     		mov	r2, r4
 1036 043c 2B46     		mov	r3, r5
 1037 043e FFF7FEFF 		bl	__aeabi_dmul
 1038              	.LVL165:
 1039 0442 0446     		mov	r4, r0
 1040              	.LVL166:
 1041 0444 0D46     		mov	r5, r1
 1042 0446 51EC190B 		fmrrd	r0, r1, d9
 1043 044a 53EC182B 		fmrrd	r2, r3, d8
 1044 044e FFF7FEFF 		bl	__aeabi_dadd
 1045              	.LVL167:
 1046 0452 5246     		mov	r2, sl
 1047 0454 5B46     		mov	r3, fp
 1048 0456 FFF7FEFF 		bl	__aeabi_dadd
 1049              	.LVL168:
 1050 045a 0246     		mov	r2, r0
 1051 045c 0B46     		mov	r3, r1
 1052 045e 2046     		mov	r0, r4
 1053 0460 2946     		mov	r1, r5
 1054 0462 FFF7FEFF 		bl	__aeabi_dmul
 1055              	.LVL169:
 1056 0466 0022     		movs	r2, #0
 1057 0468 454B     		ldr	r3, .L93+96
 1058 046a FFF7FEFF 		bl	__aeabi_dmul
 1059              	.LVL170:
 330:lib/rsynth-2.0-port/nsynth.c **** 	F0hz10 += (long) delta_f0;
 1060              		.loc 1 330 0
 1061 046e FFF7FEFF 		bl	__aeabi_d2iz
 1062              	.LVL171:
 1063 0472 D9F80030 		ldr	r3, [r9, #0]
 1064 0476 1818     		adds	r0, r3, r0
 1065 0478 C9F80000 		str	r0, [r9, #0]
 1066              	.LVL172:
 1067              	.L35:
 1068              	.LBE69:
 1069              	.LBE68:
 1070              	.LBB70:
 1071              	.LBB71:
 1072              	.LBB72:
 698:lib/rsynth-2.0-port/nsynth.c **** 		temp = 32767;
 1073              		.loc 1 698 0 discriminator 1
 1074 047c 4FF00009 		mov	r9, #0
 1075              	.LBE72:
 1076              	.LBE71:
 748:lib/rsynth-2.0-port/nsynth.c **** 		flutter(globals, frame);       /* add f0 flutter */
 749:lib/rsynth-2.0-port/nsynth.c **** 	}
 750:lib/rsynth-2.0-port/nsynth.c **** 
 751:lib/rsynth-2.0-port/nsynth.c **** 	/* MAIN LOOP, for each output sample of current frame: */
 752:lib/rsynth-2.0-port/nsynth.c **** 
 753:lib/rsynth-2.0-port/nsynth.c **** 	for (ns = 0; ns < globals->nspfr; ns++)
 754:lib/rsynth-2.0-port/nsynth.c **** 	{
 755:lib/rsynth-2.0-port/nsynth.c **** 		static unsigned long seed = 5; /* Fixed staring value */
 756:lib/rsynth-2.0-port/nsynth.c **** 		float noise;
 757:lib/rsynth-2.0-port/nsynth.c **** 		int n4;
 758:lib/rsynth-2.0-port/nsynth.c **** 		float sourc;                   /* Sound source if all-parallel config used  */
 759:lib/rsynth-2.0-port/nsynth.c **** 		float glotout;                 /* Output of glottal sound source  */
 760:lib/rsynth-2.0-port/nsynth.c **** 		float par_glotout;             /* Output of parallelglottal sound sourc  */
 761:lib/rsynth-2.0-port/nsynth.c **** 		float voice;                   /* Current sample of voicing waveform  */
 762:lib/rsynth-2.0-port/nsynth.c **** 		float frics;                   /* Frication sound source  */
 763:lib/rsynth-2.0-port/nsynth.c **** 		float aspiration;              /* Aspiration sound source  */
 764:lib/rsynth-2.0-port/nsynth.c **** 		long nrand;                    /* Varible used by random number generator  */
 765:lib/rsynth-2.0-port/nsynth.c **** 
 766:lib/rsynth-2.0-port/nsynth.c **** 		/* Our own code like rand(), but portable
 767:lib/rsynth-2.0-port/nsynth.c **** 		whole upper 31 bits of seed random 
 768:lib/rsynth-2.0-port/nsynth.c **** 		assumes 32-bit unsigned arithmetic
 769:lib/rsynth-2.0-port/nsynth.c **** 		with untested code to handle larger.
 770:lib/rsynth-2.0-port/nsynth.c **** 		*/
 771:lib/rsynth-2.0-port/nsynth.c **** 		seed = seed * 1664525 + 1;
 772:lib/rsynth-2.0-port/nsynth.c **** 		if (8 * sizeof(unsigned long) > 32)
 773:lib/rsynth-2.0-port/nsynth.c **** 			seed &= 0xFFFFFFFF;
 774:lib/rsynth-2.0-port/nsynth.c **** 
 775:lib/rsynth-2.0-port/nsynth.c **** 		/* Shift top bits of seed up to top of long then back down to LS 14 bits */
 776:lib/rsynth-2.0-port/nsynth.c **** 		/* Assumes 8 bits per sizeof unit i.e. a "byte" */
 777:lib/rsynth-2.0-port/nsynth.c **** 		nrand = (((long) seed) << (8 * sizeof(long) - 32)) >> (8 * sizeof(long) - 14);
 778:lib/rsynth-2.0-port/nsynth.c **** 
 779:lib/rsynth-2.0-port/nsynth.c **** 		/* Tilt down noise spectrum by soft low-pass filter having
 780:lib/rsynth-2.0-port/nsynth.c **** 		*    a pole near the origin in the z-plane, i.e.
 781:lib/rsynth-2.0-port/nsynth.c **** 		*    output = input + (0.75 * lastoutput) */
 782:lib/rsynth-2.0-port/nsynth.c **** 
 783:lib/rsynth-2.0-port/nsynth.c **** 		noise = nrand + (0.75 * nlast);	/* Function of samp_rate ? */
 784:lib/rsynth-2.0-port/nsynth.c **** 		nlast = noise;
 785:lib/rsynth-2.0-port/nsynth.c **** 
 786:lib/rsynth-2.0-port/nsynth.c **** 		/* Amplitude modulate noise (reduce noise amplitude during
 787:lib/rsynth-2.0-port/nsynth.c **** 		second half of glottal period) if voicing simultaneously present
 788:lib/rsynth-2.0-port/nsynth.c **** 		*/
 789:lib/rsynth-2.0-port/nsynth.c **** 
 790:lib/rsynth-2.0-port/nsynth.c **** 		if (nper > nmod)
 791:lib/rsynth-2.0-port/nsynth.c **** 		{
 792:lib/rsynth-2.0-port/nsynth.c **** 			noise *= 0.5;
 1077              		.loc 1 792 0 discriminator 1
 1078 0480 F6EE00AA 		fconsts	s21, #96
 1079              	.LBB74:
 1080              	.LBB75:
 369:lib/rsynth-2.0-port/nsynth.c **** 		vwave = 0.0;
 1081              		.loc 1 369 0 discriminator 1
 1082 0484 4FF0000B 		mov	fp, #0
 1083 0488 ACE2     		b	.L36
 1084              	.LVL173:
 1085              	.L79:
 1086              	.LBE75:
 1087              	.LBE74:
 771:lib/rsynth-2.0-port/nsynth.c **** 		seed = seed * 1664525 + 1;
 1088              		.loc 1 771 0
 1089 048a 3E4B     		ldr	r3, .L93+100
 1090 048c 1A68     		ldr	r2, [r3, #0]
 1091 048e 3E48     		ldr	r0, .L93+104
 1092 0490 5043     		muls	r0, r2, r0
 1093 0492 0130     		adds	r0, r0, #1
 1094 0494 1860     		str	r0, [r3, #0]
 777:lib/rsynth-2.0-port/nsynth.c **** 		nrand = (((long) seed) << (8 * sizeof(long) - 32)) >> (8 * sizeof(long) - 14);
 1095              		.loc 1 777 0
 1096 0496 8014     		asrs	r0, r0, #18
 1097 0498 09EE900A 		fmsr	s19, r0	@ int
 1098              	.LVL174:
 783:lib/rsynth-2.0-port/nsynth.c **** 		noise = nrand + (0.75 * nlast);	/* Function of samp_rate ? */
 1099              		.loc 1 783 0
 1100 049c FFF7FEFF 		bl	__aeabi_i2d
 1101              	.LVL175:
 1102 04a0 0446     		mov	r4, r0
 1103 04a2 0D46     		mov	r5, r1
 1104 04a4 DFF808A1 		ldr	sl, .L93+144
 1105 04a8 DAF80000 		ldr	r0, [sl, #0]	@ float
 1106 04ac FFF7FEFF 		bl	__aeabi_f2d
 1107              	.LVL176:
 1108 04b0 0022     		movs	r2, #0
 1109 04b2 364B     		ldr	r3, .L93+108
 1110 04b4 FFF7FEFF 		bl	__aeabi_dmul
 1111              	.LVL177:
 1112 04b8 0246     		mov	r2, r0
 1113 04ba 0B46     		mov	r3, r1
 1114 04bc 2046     		mov	r0, r4
 1115 04be 2946     		mov	r1, r5
 1116 04c0 FFF7FEFF 		bl	__aeabi_dadd
 1117              	.LVL178:
 1118 04c4 FFF7FEFF 		bl	__aeabi_d2f
 1119              	.LVL179:
 1120 04c8 08EE900A 		fmsr	s17, r0
 1121              	.LVL180:
 784:lib/rsynth-2.0-port/nsynth.c **** 		nlast = noise;
 1122              		.loc 1 784 0
 1123 04cc CAF80000 		str	r0, [sl, #0]	@ float
 790:lib/rsynth-2.0-port/nsynth.c **** 		if (nper > nmod)
 1124              		.loc 1 790 0
 1125 04d0 2F4B     		ldr	r3, .L93+112
 1126 04d2 1A68     		ldr	r2, [r3, #0]
 1127 04d4 2F4B     		ldr	r3, .L93+116
 1128 04d6 1B68     		ldr	r3, [r3, #0]
 1129 04d8 9A42     		cmp	r2, r3
 1130              		.loc 1 792 0
 1131 04da C8BF     		it	gt
 1132 04dc 68EEAA8A 		fmulsgt	s17, s17, s21
 1133              	.LVL181:
 793:lib/rsynth-2.0-port/nsynth.c **** 		}
 794:lib/rsynth-2.0-port/nsynth.c **** 
 795:lib/rsynth-2.0-port/nsynth.c **** 		/* Compute frication noise */
 796:lib/rsynth-2.0-port/nsynth.c **** 		sourc = frics = amp_frica * noise;
 1134              		.loc 1 796 0
 1135 04e0 2D4B     		ldr	r3, .L93+120
 1136 04e2 93ED008A 		flds	s16, [r3, #0]
 1137 04e6 28EE888A 		fmuls	s16, s17, s16
 1138              	.LVL182:
 1139 04ea 0425     		movs	r5, #4
 1140              	.LVL183:
 1141              	.L64:
 797:lib/rsynth-2.0-port/nsynth.c **** 
 798:lib/rsynth-2.0-port/nsynth.c **** 		/* Compute voicing waveform : (run glottal source simulation at
 799:lib/rsynth-2.0-port/nsynth.c **** 		4 times normal sample rate to minimize quantization noise in 
 800:lib/rsynth-2.0-port/nsynth.c **** 		period of female voice)
 801:lib/rsynth-2.0-port/nsynth.c **** 		*/
 802:lib/rsynth-2.0-port/nsynth.c **** 
 803:lib/rsynth-2.0-port/nsynth.c **** 		for (n4 = 0; n4 < 4; n4++)
 804:lib/rsynth-2.0-port/nsynth.c **** 		{
 805:lib/rsynth-2.0-port/nsynth.c **** 			if (globals->glsource == IMPULSIVE)
 1142              		.loc 1 805 0
 1143 04ec BB69     		ldr	r3, [r7, #24]
 1144 04ee 012B     		cmp	r3, #1
 1145 04f0 274A     		ldr	r2, .L93+112
 1146 04f2 2A4B     		ldr	r3, .L93+124
 1147 04f4 5ED1     		bne	.L38
 806:lib/rsynth-2.0-port/nsynth.c **** 			{
 807:lib/rsynth-2.0-port/nsynth.c **** 				/* Use impulsive glottal source */
 808:lib/rsynth-2.0-port/nsynth.c **** 				voice = impulsive_source(nper);
 1148              		.loc 1 808 0
 1149 04f6 1268     		ldr	r2, [r2, #0]
 1150              	.LVL184:
 1151              	.LBB77:
 1152              	.LBB78:
 337:lib/rsynth-2.0-port/nsynth.c **** 	if (nper < 3)
 1153              		.loc 1 337 0
 1154 04f8 022A     		cmp	r2, #2
 1155 04fa 05DC     		bgt	.L39
 339:lib/rsynth-2.0-port/nsynth.c **** 		vwave = doublet[nper];
 1156              		.loc 1 339 0
 1157 04fc 2849     		ldr	r1, .L93+128
 1158 04fe 01EB8202 		add	r2, r1, r2, lsl #2
 1159              	.LVL185:
 1160 0502 1268     		ldr	r2, [r2, #0]	@ float
 1161 0504 1A60     		str	r2, [r3, #0]	@ float
 1162 0506 01E0     		b	.L40
 1163              	.LVL186:
 1164              	.L39:
 343:lib/rsynth-2.0-port/nsynth.c **** 		vwave = 0.0;
 1165              		.loc 1 343 0
 1166 0508 C3F800B0 		str	fp, [r3, #0]	@ float
 1167              	.LVL187:
 1168              	.L40:
 347:lib/rsynth-2.0-port/nsynth.c **** 	return resonator(&rgl, vwave);
 1169              		.loc 1 347 0
 1170 050c 2548     		ldr	r0, .L93+132
 1171 050e 234B     		ldr	r3, .L93+124
 1172 0510 93ED000A 		flds	s0, [r3, #0]
 1173 0514 FFF7FEFF 		bl	resonator
 1174              	.LVL188:
 1175 0518 B0EE409A 		fcpys	s18, s0
 1176 051c 71E0     		b	.L41
 1177              	.L94:
 1178 051e 00BF     		.align	3
 1179              	.L93:
 1180 0520 5C76A11C 		.word	480343644
 1181 0524 F9F25340 		.word	1079243513
 1182 0528 025A1DAD 		.word	-1390585342
 1183 052c 284E4640 		.word	1078349352
 1184 0530 453688BD 		.word	-1115146683
 1185 0534 ED873D40 		.word	1077774317
 1186 0538 00000000 		.word	.LANCHOR15
 1187 053c 00000000 		.word	.LANCHOR16
 1188 0540 00000000 		.word	.LANCHOR17
 1189 0544 00000000 		.word	.LANCHOR18
 1190 0548 00000000 		.word	.LANCHOR19
 1191 054c 00000000 		.word	.LANCHOR20
 1192 0550 00000000 		.word	.LANCHOR21
 1193 0554 00000000 		.word	.LANCHOR22
 1194 0558 00000000 		.word	.LANCHOR23
 1195 055c 00000000 		.word	.LANCHOR24
 1196 0560 00000000 		.word	.LANCHOR25
 1197 0564 00000000 		.word	.LANCHOR26
 1198 0568 00000000 		.word	.LANCHOR27
 1199 056c 00000000 		.word	.LANCHOR28
 1200 0570 00000000 		.word	.LANCHOR29
 1201 0574 00000000 		.word	.LANCHOR30
 1202 0578 00005940 		.word	1079574528
 1203 057c 00004940 		.word	1078525952
 1204 0580 00002440 		.word	1076101120
 1205 0584 00000000 		.word	.LANCHOR32
 1206 0588 0D661900 		.word	1664525
 1207 058c 0000E83F 		.word	1072168960
 1208 0590 00000000 		.word	.LANCHOR34
 1209 0594 00000000 		.word	.LANCHOR35
 1210 0598 00000000 		.word	.LANCHOR9
 1211 059c 00000000 		.word	.LANCHOR36
 1212 05a0 00000000 		.word	.LANCHOR37
 1213 05a4 00000000 		.word	.LANCHOR38
 1214 05a8 00000000 		.word	.LANCHOR31
 1215 05ac 00000000 		.word	.LANCHOR6
 1216 05b0 00000000 		.word	.LANCHOR33
 1217              	.L38:
 1218              	.LVL189:
 1219              	.LBE78:
 1220              	.LBE77:
 1221              	.LBB79:
 1222              	.LBB76:
 359:lib/rsynth-2.0-port/nsynth.c **** 	if (nper < nopen)
 1223              		.loc 1 359 0
 1224 05b4 1168     		ldr	r1, [r2, #0]
 1225 05b6 7C4A     		ldr	r2, .L95+32
 1226 05b8 1268     		ldr	r2, [r2, #0]
 1227 05ba 9142     		cmp	r1, r2
 1228 05bc 1DDA     		bge	.L42
 361:lib/rsynth-2.0-port/nsynth.c **** 		natglot_a -= natglot_b;
 1229              		.loc 1 361 0
 1230 05be 7B4A     		ldr	r2, .L95+36
 1231 05c0 92ED007A 		flds	s14, [r2, #0]
 1232 05c4 7A49     		ldr	r1, .L95+40
 1233 05c6 D1ED007A 		flds	s15, [r1, #0]
 1234 05ca 77EE677A 		fsubs	s15, s14, s15
 1235 05ce C2ED007A 		fsts	s15, [r2, #0]
 362:lib/rsynth-2.0-port/nsynth.c **** 		vwave += natglot_a;
 1236              		.loc 1 362 0
 1237 05d2 93ED007A 		flds	s14, [r3, #0]
 1238 05d6 77EE877A 		fadds	s15, s15, s14
 1239 05da C3ED007A 		fsts	s15, [r3, #0]
 363:lib/rsynth-2.0-port/nsynth.c **** 		lgtemp = vwave * 0.028;        /* function of samp_rate ? */
 1240              		.loc 1 363 0
 1241 05de 17EE900A 		fmrs	r0, s15
 1242 05e2 FFF7FEFF 		bl	__aeabi_f2d
 1243              	.LVL190:
 1244 05e6 68A3     		adr	r3, .L95
 1245 05e8 D3E90023 		ldrd	r2, [r3]
 1246 05ec FFF7FEFF 		bl	__aeabi_dmul
 1247              	.LVL191:
 1248 05f0 FFF7FEFF 		bl	__aeabi_d2f
 1249              	.LVL192:
 1250 05f4 09EE100A 		fmsr	s18, r0
 1251              	.LVL193:
 1252 05f8 03E0     		b	.L41
 1253              	.LVL194:
 1254              	.L42:
 369:lib/rsynth-2.0-port/nsynth.c **** 		vwave = 0.0;
 1255              		.loc 1 369 0
 1256 05fa C3F800B0 		str	fp, [r3, #0]	@ float
 370:lib/rsynth-2.0-port/nsynth.c **** 		return (0.0);
 1257              		.loc 1 370 0
 1258 05fe 9FED6D9A 		flds	s18, .L95+44
 1259              	.LVL195:
 1260              	.L41:
 1261              	.LBE76:
 1262              	.LBE79:
 809:lib/rsynth-2.0-port/nsynth.c **** 			}
 810:lib/rsynth-2.0-port/nsynth.c **** 			else
 811:lib/rsynth-2.0-port/nsynth.c **** 			{
 812:lib/rsynth-2.0-port/nsynth.c **** 				/* Or use a more-natural-shaped source waveform with excitation
 813:lib/rsynth-2.0-port/nsynth.c **** 				occurring both upon opening and upon closure, stronest at closure */
 814:lib/rsynth-2.0-port/nsynth.c **** 				voice = natural_source(nper);
 815:lib/rsynth-2.0-port/nsynth.c **** 			}
 816:lib/rsynth-2.0-port/nsynth.c **** 
 817:lib/rsynth-2.0-port/nsynth.c **** 			/* Reset period when counter 'nper' reaches T0 */
 818:lib/rsynth-2.0-port/nsynth.c **** 			if (nper >= T0)
 1263              		.loc 1 818 0
 1264 0602 6D49     		ldr	r1, .L95+48
 1265 0604 6D4C     		ldr	r4, .L95+52
 1266 0606 0A68     		ldr	r2, [r1, #0]
 1267 0608 2368     		ldr	r3, [r4, #0]
 1268 060a 9A42     		cmp	r2, r3
 1269 060c C0F22381 		blt	.L45
 819:lib/rsynth-2.0-port/nsynth.c **** 			{
 820:lib/rsynth-2.0-port/nsynth.c **** 				nper = 0;
 1270              		.loc 1 820 0
 1271 0610 0023     		movs	r3, #0
 1272 0612 0B60     		str	r3, [r1, #0]
 1273              	.LBB80:
 1274              	.LBB81:
 464:lib/rsynth-2.0-port/nsynth.c **** 	if (F0hz10 > 0)
 1275              		.loc 1 464 0
 1276 0614 6A4B     		ldr	r3, .L95+56
 1277 0616 1B68     		ldr	r3, [r3, #0]
 1278 0618 002B     		cmp	r3, #0
 1279 061a 40F3EB80 		ble	.L46
 466:lib/rsynth-2.0-port/nsynth.c **** 		T0 = (40 * globals->samrate) / F0hz10;
 1280              		.loc 1 466 0
 1281 061e 3A69     		ldr	r2, [r7, #16]
 1282 0620 2821     		movs	r1, #40
 1283 0622 4A43     		muls	r2, r1, r2
 1284 0624 92FBF3F3 		sdiv	r3, r2, r3
 1285 0628 2360     		str	r3, [r4, #0]
 468:lib/rsynth-2.0-port/nsynth.c **** 		amp_voice = DBtoLIN(globals, AVdb);
 1286              		.loc 1 468 0
 1287 062a DFF8C0A1 		ldr	sl, .L95+100
 1288 062e 3846     		mov	r0, r7
 1289 0630 DAF80010 		ldr	r1, [sl, #0]
 1290 0634 FFF7FEFF 		bl	DBtoLIN
 1291              	.LVL196:
 1292 0638 624B     		ldr	r3, .L95+60
 1293 063a 83ED000A 		fsts	s0, [r3, #0]
 471:lib/rsynth-2.0-port/nsynth.c **** 		nmod = T0;
 1294              		.loc 1 471 0
 1295 063e 2268     		ldr	r2, [r4, #0]
 1296 0640 614B     		ldr	r3, .L95+64
 1297 0642 1A60     		str	r2, [r3, #0]
 472:lib/rsynth-2.0-port/nsynth.c **** 		if (AVdb > 0)
 1298              		.loc 1 472 0
 1299 0644 DAF80010 		ldr	r1, [sl, #0]
 1300 0648 0029     		cmp	r1, #0
 474:lib/rsynth-2.0-port/nsynth.c **** 			nmod >>= 1;
 1301              		.loc 1 474 0
 1302 064a C4BF     		itt	gt
 1303 064c 5210     		asrgt	r2, r2, #1
 1304 064e 1A60     		strgt	r2, [r3, #0]
 479:lib/rsynth-2.0-port/nsynth.c **** 		amp_breth = DBtoLIN(globals, frame->Aturb) * 0.1;
 1305              		.loc 1 479 0
 1306 0650 3846     		mov	r0, r7
 1307 0652 316D     		ldr	r1, [r6, #80]
 1308 0654 FFF7FEFF 		bl	DBtoLIN
 1309              	.LVL197:
 1310 0658 10EE100A 		fmrs	r0, s0
 1311 065c FFF7FEFF 		bl	__aeabi_f2d
 1312              	.LVL198:
 1313 0660 4BA3     		adr	r3, .L95+8
 1314 0662 D3E90023 		ldrd	r2, [r3]
 1315 0666 FFF7FEFF 		bl	__aeabi_dmul
 1316              	.LVL199:
 1317 066a FFF7FEFF 		bl	__aeabi_d2f
 1318              	.LVL200:
 1319 066e 574B     		ldr	r3, .L95+68
 1320 0670 1860     		str	r0, [r3, #0]	@ float
 484:lib/rsynth-2.0-port/nsynth.c **** 		nopen = 4 * frame->Kopen;
 1321              		.loc 1 484 0
 1322 0672 F16C     		ldr	r1, [r6, #76]
 1323 0674 8900     		lsls	r1, r1, #2
 1324 0676 4C4B     		ldr	r3, .L95+32
 1325 0678 1960     		str	r1, [r3, #0]
 485:lib/rsynth-2.0-port/nsynth.c **** 		if ((globals->glsource == IMPULSIVE) && (nopen > 263))
 1326              		.loc 1 485 0
 1327 067a BA69     		ldr	r2, [r7, #24]
 1328 067c 012A     		cmp	r2, #1
 1329 067e 04D1     		bne	.L48
 1330 0680 02F58372 		add	r2, r2, #262
 1331 0684 9142     		cmp	r1, r2
 487:lib/rsynth-2.0-port/nsynth.c **** 			nopen = 263;
 1332              		.loc 1 487 0
 1333 0686 C8BF     		it	gt
 1334 0688 1A60     		strgt	r2, [r3, #0]
 1335              	.L48:
 490:lib/rsynth-2.0-port/nsynth.c **** 		if (nopen >= (T0 - 1))
 1336              		.loc 1 490 0
 1337 068a 4C4A     		ldr	r2, .L95+52
 1338 068c 1268     		ldr	r2, [r2, #0]
 1339 068e 511E     		subs	r1, r2, #1
 1340 0690 1B68     		ldr	r3, [r3, #0]
 1341 0692 8B42     		cmp	r3, r1
 1342 0694 07DB     		blt	.L50
 492:lib/rsynth-2.0-port/nsynth.c **** 			nopen = T0 - 2;
 1343              		.loc 1 492 0
 1344 0696 023A     		subs	r2, r2, #2
 1345 0698 434B     		ldr	r3, .L95+32
 1346 069a 1A60     		str	r2, [r3, #0]
 493:lib/rsynth-2.0-port/nsynth.c **** 			if (!globals->quiet_flag)
 1347              		.loc 1 493 0
 1348 069c 7B68     		ldr	r3, [r7, #4]
 1349 069e 13B9     		cbnz	r3, .L50
 495:lib/rsynth-2.0-port/nsynth.c **** 				printf("Warning: glottal open period cannot exceed T0, truncated\n");
 1350              		.loc 1 495 0
 1351 06a0 4B48     		ldr	r0, .L95+72
 1352 06a2 FFF7FEFF 		bl	printf
 1353              	.LVL201:
 1354              	.L50:
 499:lib/rsynth-2.0-port/nsynth.c **** 		if (nopen < 40)
 1355              		.loc 1 499 0
 1356 06a6 404C     		ldr	r4, .L95+32
 1357 06a8 2368     		ldr	r3, [r4, #0]
 1358 06aa 272B     		cmp	r3, #39
 1359 06ac 0ADC     		bgt	.L53
 501:lib/rsynth-2.0-port/nsynth.c **** 			nopen = 40;                  /* F0 max = 1000 Hz */
 1360              		.loc 1 501 0
 1361 06ae 2823     		movs	r3, #40
 1362 06b0 2360     		str	r3, [r4, #0]
 502:lib/rsynth-2.0-port/nsynth.c **** 			if (!globals->quiet_flag)
 1363              		.loc 1 502 0
 1364 06b2 7B68     		ldr	r3, [r7, #4]
 1365 06b4 33B9     		cbnz	r3, .L53
 504:lib/rsynth-2.0-port/nsynth.c **** 				printf("Warning: minimum glottal open period is 10 samples.\n");
 1366              		.loc 1 504 0
 1367 06b6 4748     		ldr	r0, .L95+76
 1368 06b8 FFF7FEFF 		bl	printf
 1369              	.LVL202:
 505:lib/rsynth-2.0-port/nsynth.c **** 				printf("truncated, nopen = %ld\n", nopen);
 1370              		.loc 1 505 0
 1371 06bc 4648     		ldr	r0, .L95+80
 1372 06be 2168     		ldr	r1, [r4, #0]
 1373 06c0 FFF7FEFF 		bl	printf
 1374              	.LVL203:
 1375              	.L53:
 511:lib/rsynth-2.0-port/nsynth.c **** 		natglot_b = natglot[nopen - 40];
 1376              		.loc 1 511 0
 1377 06c4 D4F80080 		ldr	r8, [r4, #0]
 1378 06c8 A8F12802 		sub	r2, r8, #40
 1379 06cc 434B     		ldr	r3, .L95+84
 1380 06ce 33F91220 		ldrsh	r2, [r3, r2, lsl #1]
 1381 06d2 07EE902A 		fmsr	s15, r2	@ int
 1382 06d6 F8EEE77A 		fsitos	s15, s15
 1383 06da 354B     		ldr	r3, .L95+40
 1384 06dc C3ED007A 		fsts	s15, [r3, #0]
 512:lib/rsynth-2.0-port/nsynth.c **** 		natglot_a = (natglot_b * nopen) * .333;
 1385              		.loc 1 512 0
 1386 06e0 06EE908A 		fmsr	s13, r8	@ int
 1387 06e4 B8EEE67A 		fsitos	s14, s13
 1388 06e8 27EE877A 		fmuls	s14, s15, s14
 1389 06ec 17EE100A 		fmrs	r0, s14
 1390 06f0 FFF7FEFF 		bl	__aeabi_f2d
 1391              	.LVL204:
 1392 06f4 28A3     		adr	r3, .L95+16
 1393 06f6 D3E90023 		ldrd	r2, [r3]
 1394 06fa FFF7FEFF 		bl	__aeabi_dmul
 1395              	.LVL205:
 1396 06fe FFF7FEFF 		bl	__aeabi_d2f
 1397              	.LVL206:
 1398 0702 2A4B     		ldr	r3, .L95+36
 1399 0704 1860     		str	r0, [r3, #0]	@ float
 1400              	.LVL207:
 516:lib/rsynth-2.0-port/nsynth.c **** 		temp = globals->samrate / nopen;
 1401              		.loc 1 516 0
 1402 0706 3969     		ldr	r1, [r7, #16]
 517:lib/rsynth-2.0-port/nsynth.c **** 		setabc(0L, temp, &rgl);
 1403              		.loc 1 517 0
 1404 0708 DFF8E4A0 		ldr	sl, .L95+104
 1405 070c 0020     		movs	r0, #0
 1406 070e 91FBF8F1 		sdiv	r1, r1, r8
 1407              	.LVL208:
 1408 0712 5246     		mov	r2, sl
 1409 0714 FFF7FEFF 		bl	setabc
 1410              	.LVL209:
 521:lib/rsynth-2.0-port/nsynth.c **** 		temp1 = nopen * .00833;
 1411              		.loc 1 521 0
 1412 0718 2468     		ldr	r4, [r4, #0]
 1413 071a 2046     		mov	r0, r4
 1414 071c FFF7FEFF 		bl	__aeabi_i2d
 1415              	.LVL210:
 1416 0720 1FA3     		adr	r3, .L95+24
 1417 0722 D3E90023 		ldrd	r2, [r3]
 1418 0726 FFF7FEFF 		bl	__aeabi_dmul
 1419              	.LVL211:
 1420 072a FFF7FEFF 		bl	__aeabi_d2f
 1421              	.LVL212:
 522:lib/rsynth-2.0-port/nsynth.c **** 		rgl.a *= (temp1 * temp1);
 1422              		.loc 1 522 0
 1423 072e 07EE100A 		fmsr	s14, r0
 1424 0732 67EE077A 		fmuls	s15, s14, s14
 1425 0736 9AED017A 		flds	s14, [sl, #4]
 1426 073a 67EE277A 		fmuls	s15, s14, s15
 1427 073e CAED017A 		fsts	s15, [sl, #4]
 527:lib/rsynth-2.0-port/nsynth.c **** 		temp = T0 - nopen;
 1428              		.loc 1 527 0
 1429 0742 1E4B     		ldr	r3, .L95+52
 1430 0744 1B68     		ldr	r3, [r3, #0]
 1431 0746 1C1B     		subs	r4, r3, r4
 1432              	.LVL213:
 528:lib/rsynth-2.0-port/nsynth.c **** 		if (Kskew > temp)
 1433              		.loc 1 528 0
 1434 0748 DFF89CA0 		ldr	sl, .L95+96
 1435 074c DAF80010 		ldr	r1, [sl, #0]
 1436 0750 A142     		cmp	r1, r4
 1437 0752 07DD     		ble	.L55
 530:lib/rsynth-2.0-port/nsynth.c **** 			if (!globals->quiet_flag)
 1438              		.loc 1 530 0
 1439 0754 7B68     		ldr	r3, [r7, #4]
 1440 0756 1BB9     		cbnz	r3, .L56
 532:lib/rsynth-2.0-port/nsynth.c **** 				printf("Kskew duration=%ld > glottal closed period=%ld, truncate\n",
 1441              		.loc 1 532 0
 1442 0758 2148     		ldr	r0, .L95+88
 1443              	.LVL214:
 1444 075a 2246     		mov	r2, r4
 1445 075c FFF7FEFF 		bl	printf
 1446              	.LVL215:
 1447              	.L56:
 535:lib/rsynth-2.0-port/nsynth.c **** 			Kskew = temp;
 1448              		.loc 1 535 0
 1449 0760 CAF80040 		str	r4, [sl, #0]
 1450              	.L55:
 538:lib/rsynth-2.0-port/nsynth.c **** 		if (skew >= 0)
 1451              		.loc 1 538 0
 1452 0764 1F4B     		ldr	r3, .L95+92
 1453 0766 1A68     		ldr	r2, [r3, #0]
 1454 0768 002A     		cmp	r2, #0
 1455 076a 1F4A     		ldr	r2, .L95+96
 540:lib/rsynth-2.0-port/nsynth.c **** 			skew = Kskew;                /* Reset skew to requested Kskew */
 1456              		.loc 1 540 0
 1457 076c 1268     		ldr	r2, [r2, #0]
 544:lib/rsynth-2.0-port/nsynth.c **** 			skew = -Kskew;
 1458              		.loc 1 544 0
 1459 076e B8BF     		it	lt
 1460 0770 5242     		rsblt	r2, r2, #0
 1461 0772 1A60     		str	r2, [r3, #0]
 549:lib/rsynth-2.0-port/nsynth.c **** 		T0 = T0 + skew;
 1462              		.loc 1 549 0
 1463 0774 1A68     		ldr	r2, [r3, #0]
 1464 0776 114C     		ldr	r4, .L95+52
 1465              	.LVL216:
 1466 0778 2168     		ldr	r1, [r4, #0]
 1467 077a 8918     		adds	r1, r1, r2
 1468 077c 2160     		str	r1, [r4, #0]
 550:lib/rsynth-2.0-port/nsynth.c **** 		skew = -skew;
 1469              		.loc 1 550 0
 1470 077e 5242     		negs	r2, r2
 1471 0780 1A60     		str	r2, [r3, #0]
 1472 0782 47E0     		b	.L59
 1473              	.L96:
 1474 0784 AFF30080 		.align	3
 1475              	.L95:
 1476 0788 79E92631 		.word	824633721
 1477 078c 08AC9C3F 		.word	1067232264
 1478 0790 9A999999 		.word	-1717986918
 1479 0794 9999B93F 		.word	1069128089
 1480 0798 1D5A643B 		.word	996432413
 1481 079c DF4FD53F 		.word	1070944223
 1482 07a0 1EFE9AAC 		.word	-1399128546
 1483 07a4 510F813F 		.word	1065422673
 1484 07a8 00000000 		.word	.LANCHOR39
 1485 07ac 00000000 		.word	.LANCHOR40
 1486 07b0 00000000 		.word	.LANCHOR41
 1487 07b4 00000000 		.word	0
 1488 07b8 00000000 		.word	.LANCHOR34
 1489 07bc 00000000 		.word	.LANCHOR42
 1490 07c0 00000000 		.word	.LANCHOR6
 1491 07c4 00000000 		.word	.LANCHOR43
 1492 07c8 00000000 		.word	.LANCHOR35
 1493 07cc 00000000 		.word	.LANCHOR44
 1494 07d0 75000000 		.word	.LC6
 1495 07d4 AF000000 		.word	.LC7
 1496 07d8 E4000000 		.word	.LC8
 1497 07dc 00000000 		.word	.LANCHOR45
 1498 07e0 FC000000 		.word	.LC9
 1499 07e4 00000000 		.word	.LANCHOR46
 1500 07e8 00000000 		.word	.LANCHOR10
 1501 07ec 00000000 		.word	.LANCHOR7
 1502 07f0 00000000 		.word	.LANCHOR38
 1503              	.L46:
 554:lib/rsynth-2.0-port/nsynth.c **** 		T0 = 4;                        /* Default for f0 undefined */
 1504              		.loc 1 554 0
 1505 07f4 0423     		movs	r3, #4
 1506 07f6 2360     		str	r3, [r4, #0]
 555:lib/rsynth-2.0-port/nsynth.c **** 		amp_voice = 0.0;
 1507              		.loc 1 555 0
 1508 07f8 814A     		ldr	r2, .L97+8
 1509 07fa C2F800B0 		str	fp, [r2, #0]	@ float
 556:lib/rsynth-2.0-port/nsynth.c **** 		nmod = T0;
 1510              		.loc 1 556 0
 1511 07fe 814A     		ldr	r2, .L97+12
 1512 0800 1360     		str	r3, [r2, #0]
 557:lib/rsynth-2.0-port/nsynth.c **** 		amp_breth = 0.0;
 1513              		.loc 1 557 0
 1514 0802 814B     		ldr	r3, .L97+16
 1515 0804 C3F800B0 		str	fp, [r3, #0]	@ float
 558:lib/rsynth-2.0-port/nsynth.c **** 		natglot_a = 0.0;
 1516              		.loc 1 558 0
 1517 0808 804B     		ldr	r3, .L97+20
 1518 080a C3F800B0 		str	fp, [r3, #0]	@ float
 559:lib/rsynth-2.0-port/nsynth.c **** 		natglot_b = 0.0;
 1519              		.loc 1 559 0
 1520 080e 804B     		ldr	r3, .L97+24
 1521 0810 C3F800B0 		str	fp, [r3, #0]	@ float
 1522              	.L59:
 564:lib/rsynth-2.0-port/nsynth.c **** 	if ((T0 != 4) || (ns == 0))
 1523              		.loc 1 564 0
 1524 0814 7F4B     		ldr	r3, .L97+28
 1525 0816 1B68     		ldr	r3, [r3, #0]
 1526 0818 042B     		cmp	r3, #4
 1527 081a 02D1     		bne	.L60
 1528 081c B9F1000F 		cmp	r9, #0
 1529 0820 19D1     		bne	.L45
 1530              	.L60:
 567:lib/rsynth-2.0-port/nsynth.c **** 		decay = (0.033 * frame->TLTdb);	/* Function of samp_rate ? */
 1531              		.loc 1 567 0
 1532 0822 706D     		ldr	r0, [r6, #84]
 1533 0824 FFF7FEFF 		bl	__aeabi_i2d
 1534              	.LVL217:
 1535 0828 73A3     		adr	r3, .L97
 1536 082a D3E90023 		ldrd	r2, [r3]
 1537 082e FFF7FEFF 		bl	__aeabi_dmul
 1538              	.LVL218:
 1539 0832 FFF7FEFF 		bl	__aeabi_d2f
 1540              	.LVL219:
 1541 0836 07EE900A 		fmsr	s15, r0
 1542 083a 774B     		ldr	r3, .L97+32
 1543 083c 1860     		str	r0, [r3, #0]	@ float
 568:lib/rsynth-2.0-port/nsynth.c **** 		if (decay > 0.0)
 1544              		.loc 1 568 0
 1545 083e F5EEC07A 		fcmpezs	s15
 1546 0842 F1EE10FA 		fmstat
 1547 0846 754B     		ldr	r3, .L97+36
 570:lib/rsynth-2.0-port/nsynth.c **** 			onemd = 1.0 - decay;
 1548              		.loc 1 570 0
 1549 0848 C6BF     		itte	gt
 1550 084a 7AEE677A 		fsubsgt	s15, s20, s15
 1551 084e C3ED007A 		fstsgt	s15, [r3, #0]
 574:lib/rsynth-2.0-port/nsynth.c **** 			onemd = 1.0;
 1552              		.loc 1 574 0
 1553 0852 83ED00AA 		fstsle	s20, [r3, #0]
 1554              	.L45:
 1555              	.LBE81:
 1556              	.LBE80:
 821:lib/rsynth-2.0-port/nsynth.c **** 				pitch_synch_par_reset(globals, frame, ns);
 822:lib/rsynth-2.0-port/nsynth.c **** 			}
 823:lib/rsynth-2.0-port/nsynth.c **** 
 824:lib/rsynth-2.0-port/nsynth.c **** 			/* Low-pass filter voicing waveform before downsampling from 4*globals->samrate */
 825:lib/rsynth-2.0-port/nsynth.c **** 			/* to globals->samrate samples/sec.  Resonator f=.09*globals->samrate, bw=.06*globals->samrate  
 826:lib/rsynth-2.0-port/nsynth.c **** 
 827:lib/rsynth-2.0-port/nsynth.c **** 			voice = resonator(&rlp, voice);	/* in=voice, out=voice */
 1557              		.loc 1 827 0
 1558 0856 7248     		ldr	r0, .L97+40
 1559 0858 B0EE490A 		fcpys	s0, s18
 1560 085c FFF7FEFF 		bl	resonator
 1561              	.LVL220:
 828:lib/rsynth-2.0-port/nsynth.c **** 
 829:lib/rsynth-2.0-port/nsynth.c **** 			/* Increment counter that keeps track of 4*globals->samrate samples/sec */
 830:lib/rsynth-2.0-port/nsynth.c **** 			nper++;
 1562              		.loc 1 830 0
 1563 0860 704A     		ldr	r2, .L97+44
 1564 0862 1368     		ldr	r3, [r2, #0]
 1565 0864 0133     		adds	r3, r3, #1
 1566 0866 1360     		str	r3, [r2, #0]
 803:lib/rsynth-2.0-port/nsynth.c **** 		for (n4 = 0; n4 < 4; n4++)
 1567              		.loc 1 803 0
 1568 0868 013D     		subs	r5, r5, #1
 1569 086a 7FF43FAE 		bne	.L64
 831:lib/rsynth-2.0-port/nsynth.c **** 		}
 832:lib/rsynth-2.0-port/nsynth.c **** 
 833:lib/rsynth-2.0-port/nsynth.c **** 		/* Tilt spectrum of voicing source down by soft low-pass filtering, amount
 834:lib/rsynth-2.0-port/nsynth.c **** 		of tilt determined by TLTdb
 835:lib/rsynth-2.0-port/nsynth.c **** 		*/
 836:lib/rsynth-2.0-port/nsynth.c **** 		voice = (voice * onemd) + (vlast * decay);
 1570              		.loc 1 836 0
 1571 086e 6E4A     		ldr	r2, .L97+48
 1572 0870 92ED007A 		flds	s14, [r2, #0]
 1573 0874 6849     		ldr	r1, .L97+32
 1574 0876 D1ED007A 		flds	s15, [r1, #0]
 1575 087a 27EE277A 		fmuls	s14, s14, s15
 1576 087e 6749     		ldr	r1, .L97+36
 1577 0880 D1ED007A 		flds	s15, [r1, #0]
 1578 0884 A0EE277A 		vfma.f32	s14, s0, s15
 1579              	.LVL221:
 837:lib/rsynth-2.0-port/nsynth.c **** 		vlast = voice;
 1580              		.loc 1 837 0
 1581 0888 82ED007A 		fsts	s14, [r2, #0]
 838:lib/rsynth-2.0-port/nsynth.c **** 
 839:lib/rsynth-2.0-port/nsynth.c **** 		/* Add breathiness during glottal open phase */
 840:lib/rsynth-2.0-port/nsynth.c **** 		if (nper < nopen)
 1582              		.loc 1 840 0
 1583 088c 674A     		ldr	r2, .L97+52
 1584 088e 1268     		ldr	r2, [r2, #0]
 1585 0890 9342     		cmp	r3, r2
 1586 0892 06DA     		bge	.L65
 841:lib/rsynth-2.0-port/nsynth.c **** 		{
 842:lib/rsynth-2.0-port/nsynth.c **** 			/* Amount of breathiness determined by parameter Aturb */
 843:lib/rsynth-2.0-port/nsynth.c **** 			/* Use nrand rather than noise because noise is low-passed */
 844:lib/rsynth-2.0-port/nsynth.c **** 			voice += amp_breth * nrand;
 1587              		.loc 1 844 0
 1588 0894 F8EEE99A 		fsitos	s19, s19
 1589              	.LVL222:
 1590 0898 5B4B     		ldr	r3, .L97+16
 1591 089a D3ED007A 		flds	s15, [r3, #0]
 1592 089e A7EEA97A 		vfma.f32	s14, s15, s19
 1593              	.LVL223:
 1594              	.L65:
 845:lib/rsynth-2.0-port/nsynth.c **** 		}
 846:lib/rsynth-2.0-port/nsynth.c **** 
 847:lib/rsynth-2.0-port/nsynth.c **** 		/* Set amplitude of voicing */
 848:lib/rsynth-2.0-port/nsynth.c **** 		glotout = amp_voice * voice;
 849:lib/rsynth-2.0-port/nsynth.c **** 
 850:lib/rsynth-2.0-port/nsynth.c **** 		/* Compute aspiration amplitude and add to voicing source */
 851:lib/rsynth-2.0-port/nsynth.c **** 		aspiration = amp_aspir * noise;
 1595              		.loc 1 851 0
 1596 08a2 634B     		ldr	r3, .L97+56
 1597 08a4 D3ED007A 		flds	s15, [r3, #0]
 1598 08a8 68EEA77A 		fmuls	s15, s17, s15
 1599              	.LVL224:
 852:lib/rsynth-2.0-port/nsynth.c **** 		glotout += aspiration;
 1600              		.loc 1 852 0
 1601 08ac 544B     		ldr	r3, .L97+8
 1602 08ae D3ED006A 		flds	s13, [r3, #0]
 1603 08b2 E6EE877A 		vfma.f32	s15, s13, s14
 1604              	.LVL225:
 853:lib/rsynth-2.0-port/nsynth.c **** 
 854:lib/rsynth-2.0-port/nsynth.c **** 		par_glotout = glotout;
 855:lib/rsynth-2.0-port/nsynth.c **** 
 856:lib/rsynth-2.0-port/nsynth.c **** 		if (globals->synthesis_model != ALL_PARALLEL)
 1605              		.loc 1 856 0
 1606 08b6 3B68     		ldr	r3, [r7, #0]
 1607 08b8 022B     		cmp	r3, #2
 1608 08ba 5E4B     		ldr	r3, .L97+60
 1609              	.LBB82:
 1610              	.LBB83:
 1611              	.LBB84:
 721:lib/rsynth-2.0-port/nsynth.c **** 	register float x = r->a * input + r->b * r->p1 + r->c * r->p2;
 1612              		.loc 1 721 0
 1613 08bc 93ED047A 		flds	s14, [r3, #16]
 1614              	.LVL226:
 1615 08c0 93ED020A 		flds	s0, [r3, #8]
 1616 08c4 27EE000A 		fmuls	s0, s14, s0
 1617 08c8 D3ED016A 		flds	s13, [r3, #4]
 1618 08cc A6EEA70A 		vfma.f32	s0, s13, s15
 1619 08d0 93ED036A 		flds	s12, [r3, #12]
 1620 08d4 D3ED056A 		flds	s13, [r3, #20]
 1621              	.LVL227:
 722:lib/rsynth-2.0-port/nsynth.c **** 	r->p2 = r->p1;
 1622              		.loc 1 722 0
 1623 08d8 83ED057A 		fsts	s14, [r3, #20]
 723:lib/rsynth-2.0-port/nsynth.c **** 	r->p1 = input;
 1624              		.loc 1 723 0
 1625 08dc C3ED047A 		fsts	s15, [r3, #16]
 1626              	.LBE84:
 1627              	.LBE83:
 857:lib/rsynth-2.0-port/nsynth.c **** 		{
 858:lib/rsynth-2.0-port/nsynth.c **** 			/* Cascade vocal tract, excited by laryngeal sources.
 859:lib/rsynth-2.0-port/nsynth.c **** 			Nasal antiresonator, then formants FNP, F5, F4, F3, F2, F1
 860:lib/rsynth-2.0-port/nsynth.c **** 			*/
 861:lib/rsynth-2.0-port/nsynth.c **** 			float rnzout = antiresonator(&rnz, glotout);	/* Output of cascade nazal zero resonator  */
 862:lib/rsynth-2.0-port/nsynth.c **** 			float casc_next_in = resonator(&rnpc, rnzout);	/* in=rnzout, out=rnpc.p1 */
 1628              		.loc 1 862 0
 1629 08e0 5548     		ldr	r0, .L97+64
 1630 08e2 A6EE260A 		vfma.f32	s0, s12, s13
 1631              	.LVL228:
 1632              	.LBE82:
 856:lib/rsynth-2.0-port/nsynth.c **** 		if (globals->synthesis_model != ALL_PARALLEL)
 1633              		.loc 1 856 0
 1634 08e6 26D0     		beq	.L66
 1635              	.LVL229:
 1636              	.LBB85:
 1637              		.loc 1 862 0
 1638 08e8 FFF7FEFF 		bl	resonator
 1639              	.LVL230:
 863:lib/rsynth-2.0-port/nsynth.c **** 
 864:lib/rsynth-2.0-port/nsynth.c **** 			/* Recoded from sequence of if's to use C's fall through switch
 865:lib/rsynth-2.0-port/nsynth.c **** 			semantics. May allow compiler to optimize
 866:lib/rsynth-2.0-port/nsynth.c **** 			*/
 867:lib/rsynth-2.0-port/nsynth.c **** 			switch (globals->nfcascade)
 1640              		.loc 1 867 0
 1641 08ec 7B69     		ldr	r3, [r7, #20]
 1642 08ee 013B     		subs	r3, r3, #1
 1643 08f0 072B     		cmp	r3, #7
 1644 08f2 33D8     		bhi	.L81
 1645 08f4 DFE803F0 		tbb	[pc, r3]
 1646              	.L76:
 1647 08f8 19       		.byte	(.L68-.L76)/2
 1648 08f9 16       		.byte	(.L69-.L76)/2
 1649 08fa 13       		.byte	(.L70-.L76)/2
 1650 08fb 10       		.byte	(.L71-.L76)/2
 1651 08fc 0D       		.byte	(.L72-.L76)/2
 1652 08fd 0A       		.byte	(.L73-.L76)/2
 1653 08fe 07       		.byte	(.L74-.L76)/2
 1654 08ff 04       		.byte	(.L75-.L76)/2
 1655              		.align	1
 1656              	.L75:
 868:lib/rsynth-2.0-port/nsynth.c **** 			{
 869:lib/rsynth-2.0-port/nsynth.c **** 				case 8:
 870:lib/rsynth-2.0-port/nsynth.c **** 					casc_next_in = resonator(&r8c, casc_next_in);	/* Do not use unless samrat = 16000 */
 1657              		.loc 1 870 0
 1658 0900 4E48     		ldr	r0, .L97+68
 1659 0902 FFF7FEFF 		bl	resonator
 1660              	.LVL231:
 1661              	.L74:
 871:lib/rsynth-2.0-port/nsynth.c **** 				case 7:
 872:lib/rsynth-2.0-port/nsynth.c **** 					casc_next_in = resonator(&r7c, casc_next_in);	/* Do not use unless samrat = 16000 */
 1662              		.loc 1 872 0
 1663 0906 4E48     		ldr	r0, .L97+72
 1664 0908 FFF7FEFF 		bl	resonator
 1665              	.LVL232:
 1666              	.L73:
 873:lib/rsynth-2.0-port/nsynth.c **** 				case 6:
 874:lib/rsynth-2.0-port/nsynth.c **** 					casc_next_in = resonator(&r6c, casc_next_in);	/* Do not use unless long vocal tract or samrat 
 1667              		.loc 1 874 0
 1668 090c 4D48     		ldr	r0, .L97+76
 1669 090e FFF7FEFF 		bl	resonator
 1670              	.LVL233:
 1671              	.L72:
 875:lib/rsynth-2.0-port/nsynth.c **** 				case 5:
 876:lib/rsynth-2.0-port/nsynth.c **** 					casc_next_in = resonator(&r5c, casc_next_in);
 1672              		.loc 1 876 0
 1673 0912 4D48     		ldr	r0, .L97+80
 1674 0914 FFF7FEFF 		bl	resonator
 1675              	.LVL234:
 1676              	.L71:
 877:lib/rsynth-2.0-port/nsynth.c **** 				case 4:
 878:lib/rsynth-2.0-port/nsynth.c **** 					casc_next_in = resonator(&r4c, casc_next_in);
 1677              		.loc 1 878 0
 1678 0918 4C48     		ldr	r0, .L97+84
 1679 091a FFF7FEFF 		bl	resonator
 1680              	.LVL235:
 1681              	.L70:
 879:lib/rsynth-2.0-port/nsynth.c **** 				case 3:
 880:lib/rsynth-2.0-port/nsynth.c **** 					casc_next_in = resonator(&r3c, casc_next_in);
 1682              		.loc 1 880 0
 1683 091e 4C48     		ldr	r0, .L97+88
 1684 0920 FFF7FEFF 		bl	resonator
 1685              	.LVL236:
 1686              	.L69:
 881:lib/rsynth-2.0-port/nsynth.c **** 				case 2:
 882:lib/rsynth-2.0-port/nsynth.c **** 					casc_next_in = resonator(&r2c, casc_next_in);
 1687              		.loc 1 882 0
 1688 0924 4B48     		ldr	r0, .L97+92
 1689 0926 FFF7FEFF 		bl	resonator
 1690              	.LVL237:
 1691              	.L68:
 883:lib/rsynth-2.0-port/nsynth.c **** 				case 1:
 884:lib/rsynth-2.0-port/nsynth.c **** 					out = resonator(&r1c, casc_next_in);
 1692              		.loc 1 884 0
 1693 092a 4B48     		ldr	r0, .L97+96
 1694 092c FFF7FEFF 		bl	resonator
 1695              	.LVL238:
 1696 0930 F0EE408A 		fcpys	s17, s0
 1697              	.LVL239:
 885:lib/rsynth-2.0-port/nsynth.c **** 					break;
 1698              		.loc 1 885 0
 1699 0934 14E0     		b	.L67
 1700              	.LVL240:
 1701              	.L66:
 1702              	.LBE85:
 886:lib/rsynth-2.0-port/nsynth.c **** 				default:
 887:lib/rsynth-2.0-port/nsynth.c **** 					out = 0.0;
 888:lib/rsynth-2.0-port/nsynth.c **** 			}
 889:lib/rsynth-2.0-port/nsynth.c **** 			#if 0
 890:lib/rsynth-2.0-port/nsynth.c **** 			/* Excite parallel F1 and FNP by voicing waveform */
 891:lib/rsynth-2.0-port/nsynth.c **** 			/* Source is voicing plus aspiration */
 892:lib/rsynth-2.0-port/nsynth.c **** 			/* Add in phase, boost lows for nasalized */
 893:lib/rsynth-2.0-port/nsynth.c **** 			out += (resonator(&rnpp, par_glotout) + resonator(&r1p, par_glotout));
 894:lib/rsynth-2.0-port/nsynth.c **** 			#endif
 895:lib/rsynth-2.0-port/nsynth.c **** 		}
 896:lib/rsynth-2.0-port/nsynth.c **** 		else
 897:lib/rsynth-2.0-port/nsynth.c **** 		{
 898:lib/rsynth-2.0-port/nsynth.c **** 			/* Is ALL_PARALLEL */
 899:lib/rsynth-2.0-port/nsynth.c **** 			/* NIS - rsynth "hack"
 900:lib/rsynth-2.0-port/nsynth.c **** 			As Holmes' scheme is weak at nasals and (physically) nasal cavity
 901:lib/rsynth-2.0-port/nsynth.c **** 			is "back near glottis" feed glottal source through nasal resonators
 902:lib/rsynth-2.0-port/nsynth.c **** 			Don't think this is quite right, but improves things a bit
 903:lib/rsynth-2.0-port/nsynth.c **** 			*/
 904:lib/rsynth-2.0-port/nsynth.c **** 			par_glotout = antiresonator(&rnz, par_glotout);
 905:lib/rsynth-2.0-port/nsynth.c **** 			par_glotout = resonator(&rnpc, par_glotout);
 1703              		.loc 1 905 0
 1704 0936 FFF7FEFF 		bl	resonator
 1705              	.LVL241:
 1706 093a B0EE409A 		fcpys	s18, s0
 1707              	.LVL242:
 906:lib/rsynth-2.0-port/nsynth.c **** 			/* And just use r1p NOT rnpp */
 907:lib/rsynth-2.0-port/nsynth.c **** 			out = resonator(&r1p, par_glotout);
 1708              		.loc 1 907 0
 1709 093e 4748     		ldr	r0, .L97+100
 1710 0940 FFF7FEFF 		bl	resonator
 1711              	.LVL243:
 1712 0944 F0EE408A 		fcpys	s17, s0
 1713              	.LVL244:
 908:lib/rsynth-2.0-port/nsynth.c **** 			/* Sound sourc for other parallel resonators is frication
 909:lib/rsynth-2.0-port/nsynth.c **** 			plus first difference of voicing waveform.
 910:lib/rsynth-2.0-port/nsynth.c **** 			*/
 911:lib/rsynth-2.0-port/nsynth.c **** 			sourc += (par_glotout - glotlast);
 1714              		.loc 1 911 0
 1715 0948 454B     		ldr	r3, .L97+104
 1716 094a D3ED007A 		flds	s15, [r3, #0]
 1717 094e 79EE677A 		fsubs	s15, s18, s15
 1718 0952 38EE278A 		fadds	s16, s16, s15
 1719              	.LVL245:
 912:lib/rsynth-2.0-port/nsynth.c **** 			glotlast = par_glotout;
 1720              		.loc 1 912 0
 1721 0956 83ED009A 		fsts	s18, [r3, #0]
 1722 095a 01E0     		b	.L67
 1723              	.LVL246:
 1724              	.L81:
 1725              	.LBB86:
 887:lib/rsynth-2.0-port/nsynth.c **** 					out = 0.0;
 1726              		.loc 1 887 0
 1727 095c DFED418A 		flds	s17, .L97+108
 1728              	.LVL247:
 1729              	.L67:
 1730              	.LBE86:
 913:lib/rsynth-2.0-port/nsynth.c **** 		}
 914:lib/rsynth-2.0-port/nsynth.c **** 
 915:lib/rsynth-2.0-port/nsynth.c **** 		/* Standard parallel vocal tract
 916:lib/rsynth-2.0-port/nsynth.c **** 		Formants F6,F5,F4,F3,F2, outputs added with alternating sign
 917:lib/rsynth-2.0-port/nsynth.c **** 		*/
 918:lib/rsynth-2.0-port/nsynth.c **** 		out = resonator(&r6p, sourc) - out;
 1731              		.loc 1 918 0
 1732 0960 4148     		ldr	r0, .L97+112
 1733 0962 B0EE480A 		fcpys	s0, s16
 1734 0966 FFF7FEFF 		bl	resonator
 1735              	.LVL248:
 1736 096a 70EE688A 		fsubs	s17, s0, s17
 1737              	.LVL249:
 919:lib/rsynth-2.0-port/nsynth.c **** 		out = resonator(&r5p, sourc) - out;
 1738              		.loc 1 919 0
 1739 096e 3F48     		ldr	r0, .L97+116
 1740 0970 B0EE480A 		fcpys	s0, s16
 1741 0974 FFF7FEFF 		bl	resonator
 1742              	.LVL250:
 1743 0978 70EE688A 		fsubs	s17, s0, s17
 1744              	.LVL251:
 920:lib/rsynth-2.0-port/nsynth.c **** 		out = resonator(&r4p, sourc) - out;
 1745              		.loc 1 920 0
 1746 097c 3C48     		ldr	r0, .L97+120
 1747 097e B0EE480A 		fcpys	s0, s16
 1748 0982 FFF7FEFF 		bl	resonator
 1749              	.LVL252:
 1750 0986 70EE688A 		fsubs	s17, s0, s17
 1751              	.LVL253:
 921:lib/rsynth-2.0-port/nsynth.c **** 		out = resonator(&r3p, sourc) - out;
 1752              		.loc 1 921 0
 1753 098a 3A48     		ldr	r0, .L97+124
 1754 098c B0EE480A 		fcpys	s0, s16
 1755 0990 FFF7FEFF 		bl	resonator
 1756              	.LVL254:
 1757 0994 70EE688A 		fsubs	s17, s0, s17
 1758              	.LVL255:
 922:lib/rsynth-2.0-port/nsynth.c **** 		out = resonator(&r2p, sourc) - out;
 1759              		.loc 1 922 0
 1760 0998 3748     		ldr	r0, .L97+128
 1761 099a B0EE480A 		fcpys	s0, s16
 1762 099e FFF7FEFF 		bl	resonator
 1763              	.LVL256:
 1764 09a2 30EE680A 		fsubs	s0, s0, s17
 1765              	.LVL257:
 923:lib/rsynth-2.0-port/nsynth.c **** 
 924:lib/rsynth-2.0-port/nsynth.c **** 		out = amp_bypas * sourc - out;
 1766              		.loc 1 924 0
 1767 09a6 354B     		ldr	r3, .L97+132
 1768 09a8 D3ED007A 		flds	s15, [r3, #0]
 1769              	.LVL258:
 925:lib/rsynth-2.0-port/nsynth.c **** 
 926:lib/rsynth-2.0-port/nsynth.c **** 		out = resonator(&rout, out);
 1770              		.loc 1 926 0
 1771 09ac 3448     		ldr	r0, .L97+136
 1772 09ae 97EE880A 		vfnms.f32	s0, s15, s16
 1773              	.LVL259:
 1774 09b2 FFF7FEFF 		bl	resonator
 1775              	.LVL260:
 1776              	.LBB87:
 1777              	.LBB73:
 688:lib/rsynth-2.0-port/nsynth.c **** 	long temp = input;
 1778              		.loc 1 688 0
 1779 09b6 BDEEC00A 		ftosizs	s0, s0
 1780              	.LVL261:
 1781 09ba 10EE101A 		fmrs	r1, s0	@ int
 1782              	.LVL262:
 690:lib/rsynth-2.0-port/nsynth.c **** 	if (temp < -32767)
 1783              		.loc 1 690 0
 1784 09be 314C     		ldr	r4, .L97+140
 1785 09c0 A142     		cmp	r1, r4
 1786 09c2 02DA     		bge	.L77
 692:lib/rsynth-2.0-port/nsynth.c **** 		overload_warning(globals, -temp);
 1787              		.loc 1 692 0
 1788 09c4 3846     		mov	r0, r7
 1789 09c6 4942     		negs	r1, r1
 1790              	.LVL263:
 1791 09c8 04E0     		b	.L90
 1792              	.LVL264:
 1793              	.L77:
 695:lib/rsynth-2.0-port/nsynth.c **** 	else if (temp > 32767)
 1794              		.loc 1 695 0
 1795 09ca 47F6FF74 		movw	r4, #32767
 1796 09ce A142     		cmp	r1, r4
 1797 09d0 03DD     		ble	.L78
 697:lib/rsynth-2.0-port/nsynth.c **** 		overload_warning(globals, temp);
 1798              		.loc 1 697 0
 1799 09d2 3846     		mov	r0, r7
 1800              	.LVL265:
 1801              	.L90:
 1802 09d4 FFF7FEFF 		bl	overload_warning
 1803              	.LVL266:
 698:lib/rsynth-2.0-port/nsynth.c **** 		temp = 32767;
 1804              		.loc 1 698 0
 1805 09d8 2146     		mov	r1, r4
 1806              	.LVL267:
 1807              	.L78:
 700:lib/rsynth-2.0-port/nsynth.c **** 	return (temp);
 1808              		.loc 1 700 0
 1809 09da 019B     		ldr	r3, [sp, #4]
 1810 09dc 23F81910 		strh	r1, [r3, r9, lsl #1]	@ movhi
 1811              	.LBE73:
 1812              	.LBE87:
 1813              	.LBE70:
 753:lib/rsynth-2.0-port/nsynth.c **** 	for (ns = 0; ns < globals->nspfr; ns++)
 1814              		.loc 1 753 0
 1815 09e0 09F10109 		add	r9, r9, #1
 1816              	.LVL268:
 1817              	.L36:
 753:lib/rsynth-2.0-port/nsynth.c **** 	for (ns = 0; ns < globals->nspfr; ns++)
 1818              		.loc 1 753 0 is_stmt 0 discriminator 1
 1819 09e4 FB69     		ldr	r3, [r7, #28]
 1820 09e6 9945     		cmp	r9, r3
 1821 09e8 FFF64FAD 		blt	.L79
 927:lib/rsynth-2.0-port/nsynth.c **** 		*jwave++ = clip(globals, out); /* Convert back to integer */
 928:lib/rsynth-2.0-port/nsynth.c **** 	}
 929:lib/rsynth-2.0-port/nsynth.c **** }
 1822              		.loc 1 929 0 is_stmt 1
 1823 09ec 03B0     		add	sp, sp, #12
 1824 09ee BDEC088B 		fldmfdd	sp!, {d8, d9, d10, d11}
 1825 09f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1826              	.L98:
 1827 09f6 00BF     		.align	3
 1828              	.L97:
 1829 09f8 4C378941 		.word	1099511628
 1830 09fc 60E5A03F 		.word	1067509088
 1831 0a00 00000000 		.word	.LANCHOR43
 1832 0a04 00000000 		.word	.LANCHOR35
 1833 0a08 00000000 		.word	.LANCHOR44
 1834 0a0c 00000000 		.word	.LANCHOR40
 1835 0a10 00000000 		.word	.LANCHOR41
 1836 0a14 00000000 		.word	.LANCHOR42
 1837 0a18 00000000 		.word	.LANCHOR47
 1838 0a1c 00000000 		.word	.LANCHOR48
 1839 0a20 00000000 		.word	.LANCHOR49
 1840 0a24 00000000 		.word	.LANCHOR34
 1841 0a28 00000000 		.word	.LANCHOR50
 1842 0a2c 00000000 		.word	.LANCHOR39
 1843 0a30 00000000 		.word	.LANCHOR8
 1844 0a34 00000000 		.word	.LANCHOR22
 1845 0a38 00000000 		.word	.LANCHOR21
 1846 0a3c 00000000 		.word	.LANCHOR13
 1847 0a40 00000000 		.word	.LANCHOR14
 1848 0a44 00000000 		.word	.LANCHOR15
 1849 0a48 00000000 		.word	.LANCHOR16
 1850 0a4c 00000000 		.word	.LANCHOR17
 1851 0a50 00000000 		.word	.LANCHOR18
 1852 0a54 00000000 		.word	.LANCHOR19
 1853 0a58 00000000 		.word	.LANCHOR20
 1854 0a5c 00000000 		.word	.LANCHOR23
 1855 0a60 00000000 		.word	.LANCHOR51
 1856 0a64 00000000 		.word	0
 1857 0a68 00000000 		.word	.LANCHOR29
 1858 0a6c 00000000 		.word	.LANCHOR28
 1859 0a70 00000000 		.word	.LANCHOR27
 1860 0a74 00000000 		.word	.LANCHOR26
 1861 0a78 00000000 		.word	.LANCHOR25
 1862 0a7c 00000000 		.word	.LANCHOR12
 1863 0a80 00000000 		.word	.LANCHOR30
 1864 0a84 0180FFFF 		.word	-32767
 1865              		.cfi_endproc
 1866              	.LFE127:
 1868              		.section	.text.parwave_init,"ax",%progbits
 1869              		.align	1
 1870              		.global	parwave_init
 1871              		.thumb
 1872              		.thumb_func
 1874              	parwave_init:
 1875              	.LFB128:
 930:lib/rsynth-2.0-port/nsynth.c **** 
 931:lib/rsynth-2.0-port/nsynth.c **** void parwave_init(klatt_global_ptr globals)
 932:lib/rsynth-2.0-port/nsynth.c **** {
 1876              		.loc 1 932 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
 1880              	.LVL269:
 1881 0000 38B5     		push	{r3, r4, r5, lr}
 1882              	.LCFI9:
 1883              		.cfi_def_cfa_offset 16
 1884              		.cfi_offset 3, -16
 1885              		.cfi_offset 4, -12
 1886              		.cfi_offset 5, -8
 1887              		.cfi_offset 14, -4
 933:lib/rsynth-2.0-port/nsynth.c **** 	long FLPhz = (950 * globals->samrate) / 10000;
 1888              		.loc 1 933 0
 1889 0002 0469     		ldr	r4, [r0, #16]
 1890              	.LVL270:
 934:lib/rsynth-2.0-port/nsynth.c **** 	long BLPhz = (630 * globals->samrate) / 10000;
 935:lib/rsynth-2.0-port/nsynth.c **** 
 936:lib/rsynth-2.0-port/nsynth.c **** 	minus_pi_t = -PI / globals->samrate;
 1891              		.loc 1 936 0
 1892 0004 2046     		mov	r0, r4
 1893              	.LVL271:
 1894 0006 FFF7FEFF 		bl	__aeabi_i2d
 1895              	.LVL272:
 1896 000a 0246     		mov	r2, r0
 1897 000c 0B46     		mov	r3, r1
 1898 000e 4FA1     		adr	r1, .L100+108
 1899 0010 D1E90001 		ldrd	r0, [r1]
 1900 0014 FFF7FEFF 		bl	__aeabi_ddiv
 1901              	.LVL273:
 1902 0018 FFF7FEFF 		bl	__aeabi_d2f
 1903              	.LVL274:
 1904 001c 07EE900A 		fmsr	s15, r0
 1905 0020 2F4B     		ldr	r3, .L100
 1906 0022 1860     		str	r0, [r3, #0]	@ float
 937:lib/rsynth-2.0-port/nsynth.c **** 	two_pi_t = -2.0 * minus_pi_t;
 1907              		.loc 1 937 0
 1908 0024 B8EE007A 		fconsts	s14, #128
 1909 0028 67EE877A 		fmuls	s15, s15, s14
 1910 002c 2D4B     		ldr	r3, .L100+4
 1911 002e C3ED007A 		fsts	s15, [r3, #0]
 933:lib/rsynth-2.0-port/nsynth.c **** 	long FLPhz = (950 * globals->samrate) / 10000;
 1912              		.loc 1 933 0
 1913 0032 40F2B630 		movw	r0, #950
 1914 0036 6043     		muls	r0, r4, r0
 1915 0038 42F21071 		movw	r1, #10000
 934:lib/rsynth-2.0-port/nsynth.c **** 	long BLPhz = (630 * globals->samrate) / 10000;
 1916              		.loc 1 934 0
 1917 003c 40F27622 		movw	r2, #630
 1918 0040 5443     		muls	r4, r2, r4
 1919              	.LVL275:
 938:lib/rsynth-2.0-port/nsynth.c **** 
 939:lib/rsynth-2.0-port/nsynth.c **** 	setabc(FLPhz, BLPhz, &rlp);
 1920              		.loc 1 939 0
 1921 0042 294D     		ldr	r5, .L100+8
 1922 0044 90FBF1F0 		sdiv	r0, r0, r1
 1923              	.LVL276:
 1924 0048 94FBF1F1 		sdiv	r1, r4, r1
 1925              	.LVL277:
 1926 004c 2A46     		mov	r2, r5
 1927 004e FFF7FEFF 		bl	setabc
 1928              	.LVL278:
 940:lib/rsynth-2.0-port/nsynth.c **** 	nper = 0;                        /* LG */
 1929              		.loc 1 940 0
 1930 0052 0022     		movs	r2, #0
 1931 0054 254B     		ldr	r3, .L100+12
 1932 0056 1A60     		str	r2, [r3, #0]
 941:lib/rsynth-2.0-port/nsynth.c **** 	T0 = 0;                          /* LG */
 1933              		.loc 1 941 0
 1934 0058 254B     		ldr	r3, .L100+16
 1935 005a 1A60     		str	r2, [r3, #0]
 942:lib/rsynth-2.0-port/nsynth.c **** 
 943:lib/rsynth-2.0-port/nsynth.c **** 	rnpp.p1 = 0;                     /* parallel nasal pole  */
 1936              		.loc 1 943 0
 1937 005c 2549     		ldr	r1, .L100+20
 1938 005e 0023     		movs	r3, #0
 1939 0060 0B61     		str	r3, [r1, #16]	@ float
 944:lib/rsynth-2.0-port/nsynth.c **** 	rnpp.p2 = 0;
 1940              		.loc 1 944 0
 1941 0062 4B61     		str	r3, [r1, #20]	@ float
 945:lib/rsynth-2.0-port/nsynth.c **** 
 946:lib/rsynth-2.0-port/nsynth.c **** 	r1p.p1 = 0;                      /* parallel 1st formant */
 1942              		.loc 1 946 0
 1943 0064 2449     		ldr	r1, .L100+24
 1944 0066 0B61     		str	r3, [r1, #16]	@ float
 947:lib/rsynth-2.0-port/nsynth.c **** 	r1p.p2 = 0;
 1945              		.loc 1 947 0
 1946 0068 4B61     		str	r3, [r1, #20]	@ float
 948:lib/rsynth-2.0-port/nsynth.c **** 
 949:lib/rsynth-2.0-port/nsynth.c **** 	r2p.p1 = 0;                      /* parallel 2nd formant */
 1947              		.loc 1 949 0
 1948 006a 2449     		ldr	r1, .L100+28
 1949 006c 0B61     		str	r3, [r1, #16]	@ float
 950:lib/rsynth-2.0-port/nsynth.c **** 	r2p.p2 = 0;
 1950              		.loc 1 950 0
 1951 006e 4B61     		str	r3, [r1, #20]	@ float
 951:lib/rsynth-2.0-port/nsynth.c **** 
 952:lib/rsynth-2.0-port/nsynth.c **** 	r3p.p1 = 0;                      /* parallel 3rd formant */
 1952              		.loc 1 952 0
 1953 0070 2349     		ldr	r1, .L100+32
 1954 0072 0B61     		str	r3, [r1, #16]	@ float
 953:lib/rsynth-2.0-port/nsynth.c **** 	r3p.p2 = 0;
 1955              		.loc 1 953 0
 1956 0074 4B61     		str	r3, [r1, #20]	@ float
 954:lib/rsynth-2.0-port/nsynth.c **** 
 955:lib/rsynth-2.0-port/nsynth.c **** 	r4p.p1 = 0;                      /* parallel 4th formant */
 1957              		.loc 1 955 0
 1958 0076 2349     		ldr	r1, .L100+36
 1959 0078 0B61     		str	r3, [r1, #16]	@ float
 956:lib/rsynth-2.0-port/nsynth.c **** 	r4p.p2 = 0;
 1960              		.loc 1 956 0
 1961 007a 4B61     		str	r3, [r1, #20]	@ float
 957:lib/rsynth-2.0-port/nsynth.c **** 
 958:lib/rsynth-2.0-port/nsynth.c **** 	r5p.p1 = 0;                      /* parallel 5th formant */
 1962              		.loc 1 958 0
 1963 007c 2249     		ldr	r1, .L100+40
 1964 007e 0B61     		str	r3, [r1, #16]	@ float
 959:lib/rsynth-2.0-port/nsynth.c **** 	r5p.p2 = 0;
 1965              		.loc 1 959 0
 1966 0080 4B61     		str	r3, [r1, #20]	@ float
 960:lib/rsynth-2.0-port/nsynth.c **** 
 961:lib/rsynth-2.0-port/nsynth.c **** 	r6p.p1 = 0;                      /* parallel 6th formant */
 1967              		.loc 1 961 0
 1968 0082 2249     		ldr	r1, .L100+44
 1969 0084 0B61     		str	r3, [r1, #16]	@ float
 962:lib/rsynth-2.0-port/nsynth.c **** 	r6p.p2 = 0;
 1970              		.loc 1 962 0
 1971 0086 4B61     		str	r3, [r1, #20]	@ float
 963:lib/rsynth-2.0-port/nsynth.c **** 
 964:lib/rsynth-2.0-port/nsynth.c **** 	r1c.p1 = 0;                      /* cascade 1st formant  */
 1972              		.loc 1 964 0
 1973 0088 2149     		ldr	r1, .L100+48
 1974 008a 0B61     		str	r3, [r1, #16]	@ float
 965:lib/rsynth-2.0-port/nsynth.c **** 	r1c.p2 = 0;
 1975              		.loc 1 965 0
 1976 008c 4B61     		str	r3, [r1, #20]	@ float
 966:lib/rsynth-2.0-port/nsynth.c **** 
 967:lib/rsynth-2.0-port/nsynth.c **** 	r2c.p1 = 0;                      /* cascade 2nd formant  */
 1977              		.loc 1 967 0
 1978 008e 2149     		ldr	r1, .L100+52
 1979 0090 0B61     		str	r3, [r1, #16]	@ float
 968:lib/rsynth-2.0-port/nsynth.c **** 	r2c.p2 = 0;
 1980              		.loc 1 968 0
 1981 0092 4B61     		str	r3, [r1, #20]	@ float
 969:lib/rsynth-2.0-port/nsynth.c **** 
 970:lib/rsynth-2.0-port/nsynth.c **** 	r3c.p1 = 0;                      /* cascade 3rd formant  */
 1982              		.loc 1 970 0
 1983 0094 2049     		ldr	r1, .L100+56
 1984 0096 0B61     		str	r3, [r1, #16]	@ float
 971:lib/rsynth-2.0-port/nsynth.c **** 	r3c.p2 = 0;
 1985              		.loc 1 971 0
 1986 0098 4B61     		str	r3, [r1, #20]	@ float
 972:lib/rsynth-2.0-port/nsynth.c **** 
 973:lib/rsynth-2.0-port/nsynth.c **** 	r4c.p1 = 0;                      /* cascade 4th formant  */
 1987              		.loc 1 973 0
 1988 009a 2049     		ldr	r1, .L100+60
 1989 009c 0B61     		str	r3, [r1, #16]	@ float
 974:lib/rsynth-2.0-port/nsynth.c **** 	r4c.p2 = 0;
 1990              		.loc 1 974 0
 1991 009e 4B61     		str	r3, [r1, #20]	@ float
 975:lib/rsynth-2.0-port/nsynth.c **** 
 976:lib/rsynth-2.0-port/nsynth.c **** 	r5c.p1 = 0;                      /* cascade 5th formant  */
 1992              		.loc 1 976 0
 1993 00a0 1F49     		ldr	r1, .L100+64
 1994 00a2 0B61     		str	r3, [r1, #16]	@ float
 977:lib/rsynth-2.0-port/nsynth.c **** 	r5c.p2 = 0;
 1995              		.loc 1 977 0
 1996 00a4 4B61     		str	r3, [r1, #20]	@ float
 978:lib/rsynth-2.0-port/nsynth.c **** 
 979:lib/rsynth-2.0-port/nsynth.c **** 	r6c.p1 = 0;                      /* cascade 6th formant  */
 1997              		.loc 1 979 0
 1998 00a6 1F49     		ldr	r1, .L100+68
 1999 00a8 0B61     		str	r3, [r1, #16]	@ float
 980:lib/rsynth-2.0-port/nsynth.c **** 	r6c.p2 = 0;
 2000              		.loc 1 980 0
 2001 00aa 4B61     		str	r3, [r1, #20]	@ float
 981:lib/rsynth-2.0-port/nsynth.c **** 
 982:lib/rsynth-2.0-port/nsynth.c **** 	r7c.p1 = 0;
 2002              		.loc 1 982 0
 2003 00ac 1E49     		ldr	r1, .L100+72
 2004 00ae 0B61     		str	r3, [r1, #16]	@ float
 983:lib/rsynth-2.0-port/nsynth.c **** 	r7c.p2 = 0;
 2005              		.loc 1 983 0
 2006 00b0 4B61     		str	r3, [r1, #20]	@ float
 984:lib/rsynth-2.0-port/nsynth.c **** 
 985:lib/rsynth-2.0-port/nsynth.c **** 	r8c.p1 = 0;
 2007              		.loc 1 985 0
 2008 00b2 1E49     		ldr	r1, .L100+76
 2009 00b4 0B61     		str	r3, [r1, #16]	@ float
 986:lib/rsynth-2.0-port/nsynth.c **** 	r8c.p2 = 0;
 2010              		.loc 1 986 0
 2011 00b6 4B61     		str	r3, [r1, #20]	@ float
 987:lib/rsynth-2.0-port/nsynth.c **** 
 988:lib/rsynth-2.0-port/nsynth.c **** 	rnpc.p1 = 0;                     /* cascade nasal pole  */
 2012              		.loc 1 988 0
 2013 00b8 1D49     		ldr	r1, .L100+80
 2014 00ba 0B61     		str	r3, [r1, #16]	@ float
 989:lib/rsynth-2.0-port/nsynth.c **** 	rnpc.p2 = 0;
 2015              		.loc 1 989 0
 2016 00bc 4B61     		str	r3, [r1, #20]	@ float
 990:lib/rsynth-2.0-port/nsynth.c **** 
 991:lib/rsynth-2.0-port/nsynth.c **** 	rnz.p1 = 0;                      /* cascade nasal zero  */
 2017              		.loc 1 991 0
 2018 00be 1D49     		ldr	r1, .L100+84
 2019 00c0 0B61     		str	r3, [r1, #16]	@ float
 992:lib/rsynth-2.0-port/nsynth.c **** 	rnz.p2 = 0;
 2020              		.loc 1 992 0
 2021 00c2 4B61     		str	r3, [r1, #20]	@ float
 993:lib/rsynth-2.0-port/nsynth.c **** 
 994:lib/rsynth-2.0-port/nsynth.c **** 	rgl.p1 = 0;                      /* crit-damped glot low-pass filter */
 2022              		.loc 1 994 0
 2023 00c4 1C49     		ldr	r1, .L100+88
 2024 00c6 0B61     		str	r3, [r1, #16]	@ float
 995:lib/rsynth-2.0-port/nsynth.c **** 	rgl.p2 = 0;
 2025              		.loc 1 995 0
 2026 00c8 4B61     		str	r3, [r1, #20]	@ float
 996:lib/rsynth-2.0-port/nsynth.c **** 
 997:lib/rsynth-2.0-port/nsynth.c **** 	rlp.p1 = 0;                      /* downsamp low-pass filter  */
 2027              		.loc 1 997 0
 2028 00ca 2B61     		str	r3, [r5, #16]	@ float
 998:lib/rsynth-2.0-port/nsynth.c **** 	rlp.p2 = 0;
 2029              		.loc 1 998 0
 2030 00cc 6B61     		str	r3, [r5, #20]	@ float
 999:lib/rsynth-2.0-port/nsynth.c **** 
1000:lib/rsynth-2.0-port/nsynth.c **** 	vlast = 0;                       /* Previous output of voice  */
 2031              		.loc 1 1000 0
 2032 00ce 1B49     		ldr	r1, .L100+92
 2033 00d0 0B60     		str	r3, [r1, #0]	@ float
1001:lib/rsynth-2.0-port/nsynth.c **** 	nlast = 0;                       /* Previous output of random number generator  */
 2034              		.loc 1 1001 0
 2035 00d2 1B49     		ldr	r1, .L100+96
 2036 00d4 0B60     		str	r3, [r1, #0]	@ float
1002:lib/rsynth-2.0-port/nsynth.c **** 	glotlast = 0;                    /* Previous value of glotout  */
 2037              		.loc 1 1002 0
 2038 00d6 1B49     		ldr	r1, .L100+100
 2039 00d8 0B60     		str	r3, [r1, #0]	@ float
1003:lib/rsynth-2.0-port/nsynth.c **** 	warnsw = 0;
 2040              		.loc 1 1003 0
 2041 00da 1B4B     		ldr	r3, .L100+104
 2042 00dc 1A60     		str	r2, [r3, #0]
 2043 00de 38BD     		pop	{r3, r4, r5, pc}
 2044              	.L101:
 2045              		.align	3
 2046              	.L100:
 2047 00e0 00000000 		.word	.LANCHOR0
 2048 00e4 00000000 		.word	.LANCHOR1
 2049 00e8 00000000 		.word	.LANCHOR49
 2050 00ec 00000000 		.word	.LANCHOR34
 2051 00f0 00000000 		.word	.LANCHOR42
 2052 00f4 00000000 		.word	.LANCHOR24
 2053 00f8 00000000 		.word	.LANCHOR23
 2054 00fc 00000000 		.word	.LANCHOR25
 2055 0100 00000000 		.word	.LANCHOR26
 2056 0104 00000000 		.word	.LANCHOR27
 2057 0108 00000000 		.word	.LANCHOR28
 2058 010c 00000000 		.word	.LANCHOR29
 2059 0110 00000000 		.word	.LANCHOR20
 2060 0114 00000000 		.word	.LANCHOR19
 2061 0118 00000000 		.word	.LANCHOR18
 2062 011c 00000000 		.word	.LANCHOR17
 2063 0120 00000000 		.word	.LANCHOR16
 2064 0124 00000000 		.word	.LANCHOR15
 2065 0128 00000000 		.word	.LANCHOR14
 2066 012c 00000000 		.word	.LANCHOR13
 2067 0130 00000000 		.word	.LANCHOR21
 2068 0134 00000000 		.word	.LANCHOR22
 2069 0138 00000000 		.word	.LANCHOR38
 2070 013c 00000000 		.word	.LANCHOR50
 2071 0140 00000000 		.word	.LANCHOR33
 2072 0144 00000000 		.word	.LANCHOR51
 2073 0148 00000000 		.word	.LANCHOR3
 2074 014c 97D17E5A 		.word	1518260631
 2075 0150 FB2109C0 		.word	-1073143301
 2076              		.cfi_endproc
 2077              	.LFE128:
 2079              		.global	par_name
 2080              		.global	time_count
 2081 0154 AFF30080 		.section	.bss.vwave,"aw",%nobits
 2082              		.align	2
 2083              		.set	.LANCHOR36,. + 0
 2086              	vwave:
 2087 0000 00000000 		.space	4
 2088              		.section	.bss.AVdb,"aw",%nobits
 2089              		.align	2
 2090              		.set	.LANCHOR7,. + 0
 2093              	AVdb:
 2094 0000 00000000 		.space	4
 2095              		.section	.data.r2c,"aw",%progbits
 2096              		.align	2
 2097              		.set	.LANCHOR19,. + 0
 2100              	r2c:
 2101 0000 B4020000 		.word	.LC59
 2102 0004 00000000 		.space	20
 2102      00000000 
 2102      00000000 
 2102      00000000 
 2102      00000000 
 2103              		.section	.data.rgl,"aw",%progbits
 2104              		.align	2
 2105              		.set	.LANCHOR38,. + 0
 2108              	rgl:
 2109 0000 7E030000 		.word	.LC69
 2110 0004 00000000 		.space	20
 2110      00000000 
 2110      00000000 
 2110      00000000 
 2110      00000000 
 2111              		.section	.bss.nlast,"aw",%nobits
 2112              		.align	2
 2113              		.set	.LANCHOR33,. + 0
 2116              	nlast:
 2117 0000 00000000 		.space	4
 2118              		.section	.data.r4c,"aw",%progbits
 2119              		.align	2
 2120              		.set	.LANCHOR17,. + 0
 2123              	r4c:
 2124 0000 8C020000 		.word	.LC57
 2125 0004 00000000 		.space	20
 2125      00000000 
 2125      00000000 
 2125      00000000 
 2125      00000000 
 2126              		.section	.bss.Kskew,"aw",%nobits
 2127              		.align	2
 2128              		.set	.LANCHOR10,. + 0
 2131              	Kskew:
 2132 0000 00000000 		.space	4
 2133              		.section	.bss.natglot_a,"aw",%nobits
 2134              		.align	2
 2135              		.set	.LANCHOR40,. + 0
 2138              	natglot_a:
 2139 0000 00000000 		.space	4
 2140              		.section	.bss.natglot_b,"aw",%nobits
 2141              		.align	2
 2142              		.set	.LANCHOR41,. + 0
 2145              	natglot_b:
 2146 0000 00000000 		.space	4
 2147              		.section	.rodata.doublet.9205,"a",%progbits
 2148              		.align	2
 2149              		.set	.LANCHOR37,. + 0
 2152              	doublet.9205:
 2153 0000 00000000 		.word	0
 2154 0004 405D464B 		.word	1262902592
 2155 0008 405D46CB 		.word	-884581056
 2156              		.section	.bss.names.9184,"aw",%nobits
 2157              		.align	2
 2158              		.set	.LANCHOR4,. + 0
 2161              	names.9184:
 2162 0000 00000000 		.space	4
 2163              		.section	.data.r4p,"aw",%progbits
 2164              		.align	2
 2165              		.set	.LANCHOR27,. + 0
 2168              	r4p:
 2169 0000 1B030000 		.word	.LC64
 2170 0004 00000000 		.space	20
 2170      00000000 
 2170      00000000 
 2170      00000000 
 2170      00000000 
 2171              		.section	.data.r8c,"aw",%progbits
 2172              		.align	2
 2173              		.set	.LANCHOR13,. + 0
 2176              	r8c:
 2177 0000 3C020000 		.word	.LC53
 2178 0004 00000000 		.space	20
 2178      00000000 
 2178      00000000 
 2178      00000000 
 2178      00000000 
 2179              		.section	.bss.amp_breth,"aw",%nobits
 2180              		.align	2
 2181              		.set	.LANCHOR44,. + 0
 2184              	amp_breth:
 2185 0000 00000000 		.space	4
 2186              		.section	.data.r6p,"aw",%progbits
 2187              		.align	2
 2188              		.set	.LANCHOR29,. + 0
 2191              	r6p:
 2192 0000 F1020000 		.word	.LC62
 2193 0004 00000000 		.space	20
 2193      00000000 
 2193      00000000 
 2193      00000000 
 2193      00000000 
 2194              		.section	.bss.amp_aspir,"aw",%nobits
 2195              		.align	2
 2196              		.set	.LANCHOR8,. + 0
 2199              	amp_aspir:
 2200 0000 00000000 		.space	4
 2201              		.section	.bss.time_count,"aw",%nobits
 2202              		.align	2
 2203              		.set	.LANCHOR31,. + 0
 2206              	time_count:
 2207 0000 00000000 		.space	4
 2208              		.section	.bss.par_amp_voice,"aw",%nobits
 2209              		.align	2
 2210              		.set	.LANCHOR11,. + 0
 2213              	par_amp_voice:
 2214 0000 00000000 		.space	4
 2215              		.section	.bss.nper,"aw",%nobits
 2216              		.align	2
 2217              		.set	.LANCHOR34,. + 0
 2220              	nper:
 2221 0000 00000000 		.space	4
 2222              		.section	.bss.nmod,"aw",%nobits
 2223              		.align	2
 2224              		.set	.LANCHOR35,. + 0
 2227              	nmod:
 2228 0000 00000000 		.space	4
 2229              		.section	.bss.T0,"aw",%nobits
 2230              		.align	2
 2231              		.set	.LANCHOR42,. + 0
 2234              	T0:
 2235 0000 00000000 		.space	4
 2236              		.section	.rodata.str1.1,"aMS",%progbits,1
 2237              	.LC0:
 2238 0000 54727920 		.ascii	"Try to compute amptable[%ld]\012\000"
 2238      746F2063 
 2238      6F6D7075 
 2238      74652061 
 2238      6D707461 
 2239              	.LC1:
 2240 001e 0A2A202A 		.ascii	"\012* * * WARNING: \000"
 2240      202A2057 
 2240      41524E49 
 2240      4E473A20 
 2240      00
 2241              	.LC2:
 2242 002f 20536967 		.ascii	" Signal at output of synthesizer (+%3.1f dB) exceed"
 2242      6E616C20 
 2242      6174206F 
 2242      75747075 
 2242      74206F66 
 2243 0062 73203020 		.ascii	"s 0 dB\012\000"
 2243      64420A00 
 2244              	.LC3:
 2245 006a 25732000 		.ascii	"%s \000"
 2246              	.LC4:
 2247 006e 0A00     		.ascii	"\012\000"
 2248              	.LC5:
 2249 0070 252A6420 		.ascii	"%*d \000"
 2249      00
 2250              	.LC6:
 2251 0075 5761726E 		.ascii	"Warning: glottal open period cannot exceed T0, trun"
 2251      696E673A 
 2251      20676C6F 
 2251      7474616C 
 2251      206F7065 
 2252 00a8 63617465 		.ascii	"cated\012\000"
 2252      640A00
 2253              	.LC7:
 2254 00af 5761726E 		.ascii	"Warning: minimum glottal open period is 10 samples."
 2254      696E673A 
 2254      206D696E 
 2254      696D756D 
 2254      20676C6F 
 2255 00e2 0A00     		.ascii	"\012\000"
 2256              	.LC8:
 2257 00e4 7472756E 		.ascii	"truncated, nopen = %ld\012\000"
 2257      63617465 
 2257      642C206E 
 2257      6F70656E 
 2257      203D2025 
 2258              	.LC9:
 2259 00fc 4B736B65 		.ascii	"Kskew duration=%ld > glottal closed period=%ld, tru"
 2259      77206475 
 2259      72617469 
 2259      6F6E3D25 
 2259      6C64203E 
 2260 012f 6E636174 		.ascii	"ncate\012\000"
 2260      650A00
 2261              	.LC10:
 2262 0136 4630687A 		.ascii	"F0hz10\000"
 2262      313000
 2263              	.LC11:
 2264 013d 41566462 		.ascii	"AVdb\000"
 2264      00
 2265              	.LC12:
 2266 0142 4631687A 		.ascii	"F1hz\000"
 2266      00
 2267              	.LC13:
 2268 0147 4231687A 		.ascii	"B1hz\000"
 2268      00
 2269              	.LC14:
 2270 014c 4632687A 		.ascii	"F2hz\000"
 2270      00
 2271              	.LC15:
 2272 0151 4232687A 		.ascii	"B2hz\000"
 2272      00
 2273              	.LC16:
 2274 0156 4633687A 		.ascii	"F3hz\000"
 2274      00
 2275              	.LC17:
 2276 015b 4233687A 		.ascii	"B3hz\000"
 2276      00
 2277              	.LC18:
 2278 0160 4634687A 		.ascii	"F4hz\000"
 2278      00
 2279              	.LC19:
 2280 0165 4234687A 		.ascii	"B4hz\000"
 2280      00
 2281              	.LC20:
 2282 016a 4635687A 		.ascii	"F5hz\000"
 2282      00
 2283              	.LC21:
 2284 016f 4235687A 		.ascii	"B5hz\000"
 2284      00
 2285              	.LC22:
 2286 0174 4636687A 		.ascii	"F6hz\000"
 2286      00
 2287              	.LC23:
 2288 0179 4236687A 		.ascii	"B6hz\000"
 2288      00
 2289              	.LC24:
 2290 017e 464E5A68 		.ascii	"FNZhz\000"
 2290      7A00
 2291              	.LC25:
 2292 0184 424E5A68 		.ascii	"BNZhz\000"
 2292      7A00
 2293              	.LC26:
 2294 018a 464E5068 		.ascii	"FNPhz\000"
 2294      7A00
 2295              	.LC27:
 2296 0190 424E5068 		.ascii	"BNPhz\000"
 2296      7A00
 2297              	.LC28:
 2298 0196 415000   		.ascii	"AP\000"
 2299              	.LC29:
 2300 0199 4B6F7065 		.ascii	"Kopen\000"
 2300      6E00
 2301              	.LC30:
 2302 019f 41747572 		.ascii	"Aturb\000"
 2302      6200
 2303              	.LC31:
 2304 01a5 544C5464 		.ascii	"TLTdb\000"
 2304      6200
 2305              	.LC32:
 2306 01ab 414600   		.ascii	"AF\000"
 2307              	.LC33:
 2308 01ae 4B736B65 		.ascii	"Kskew\000"
 2308      7700
 2309              	.LC34:
 2310 01b4 413100   		.ascii	"A1\000"
 2311              	.LC35:
 2312 01b7 42317068 		.ascii	"B1phz\000"
 2312      7A00
 2313              	.LC36:
 2314 01bd 413200   		.ascii	"A2\000"
 2315              	.LC37:
 2316 01c0 42327068 		.ascii	"B2phz\000"
 2316      7A00
 2317              	.LC38:
 2318 01c6 413300   		.ascii	"A3\000"
 2319              	.LC39:
 2320 01c9 42337068 		.ascii	"B3phz\000"
 2320      7A00
 2321              	.LC40:
 2322 01cf 413400   		.ascii	"A4\000"
 2323              	.LC41:
 2324 01d2 42347068 		.ascii	"B4phz\000"
 2324      7A00
 2325              	.LC42:
 2326 01d8 413500   		.ascii	"A5\000"
 2327              	.LC43:
 2328 01db 42357068 		.ascii	"B5phz\000"
 2328      7A00
 2329              	.LC44:
 2330 01e1 413600   		.ascii	"A6\000"
 2331              	.LC45:
 2332 01e4 42367068 		.ascii	"B6phz\000"
 2332      7A00
 2333              	.LC46:
 2334 01ea 414E5000 		.ascii	"ANP\000"
 2335              	.LC47:
 2336 01ee 414200   		.ascii	"AB\000"
 2337              	.LC48:
 2338 01f1 41567064 		.ascii	"AVpdb\000"
 2338      6200
 2339              	.LC49:
 2340 01f7 4761696E 		.ascii	"Gain0\000"
 2340      3000
 2341              	.LC50:
 2342 01fd 646F776E 		.ascii	"downsamp low-pass filter\000"
 2342      73616D70 
 2342      206C6F77 
 2342      2D706173 
 2342      73206669 
 2343              	.LC51:
 2344 0216 63617363 		.ascii	"cascade nasal zero\000"
 2344      61646520 
 2344      6E617361 
 2344      6C207A65 
 2344      726F00
 2345              	.LC52:
 2346 0229 63617363 		.ascii	"cascade nasal pole\000"
 2346      61646520 
 2346      6E617361 
 2346      6C20706F 
 2346      6C6500
 2347              	.LC53:
 2348 023c 63617363 		.ascii	"cascade 8th formant\000"
 2348      61646520 
 2348      38746820 
 2348      666F726D 
 2348      616E7400 
 2349              	.LC54:
 2350 0250 63617363 		.ascii	"cascade 7th formant\000"
 2350      61646520 
 2350      37746820 
 2350      666F726D 
 2350      616E7400 
 2351              	.LC55:
 2352 0264 63617363 		.ascii	"cascade 6th formant\000"
 2352      61646520 
 2352      36746820 
 2352      666F726D 
 2352      616E7400 
 2353              	.LC56:
 2354 0278 63617363 		.ascii	"cascade 5th formant\000"
 2354      61646520 
 2354      35746820 
 2354      666F726D 
 2354      616E7400 
 2355              	.LC57:
 2356 028c 63617363 		.ascii	"cascade 4th formant\000"
 2356      61646520 
 2356      34746820 
 2356      666F726D 
 2356      616E7400 
 2357              	.LC58:
 2358 02a0 63617363 		.ascii	"cascade 3rd formant\000"
 2358      61646520 
 2358      33726420 
 2358      666F726D 
 2358      616E7400 
 2359              	.LC59:
 2360 02b4 63617363 		.ascii	"cascade 2nd formant\000"
 2360      61646520 
 2360      326E6420 
 2360      666F726D 
 2360      616E7400 
 2361              	.LC60:
 2362 02c8 63617363 		.ascii	"cascade 1st formant\000"
 2362      61646520 
 2362      31737420 
 2362      666F726D 
 2362      616E7400 
 2363              	.LC61:
 2364 02dc 70617261 		.ascii	"parallel 1st formant\000"
 2364      6C6C656C 
 2364      20317374 
 2364      20666F72 
 2364      6D616E74 
 2365              	.LC62:
 2366 02f1 70617261 		.ascii	"parallel 6th formant\000"
 2366      6C6C656C 
 2366      20367468 
 2366      20666F72 
 2366      6D616E74 
 2367              	.LC63:
 2368 0306 70617261 		.ascii	"parallel 5th formant\000"
 2368      6C6C656C 
 2368      20357468 
 2368      20666F72 
 2368      6D616E74 
 2369              	.LC64:
 2370 031b 70617261 		.ascii	"parallel 4th formant\000"
 2370      6C6C656C 
 2370      20347468 
 2370      20666F72 
 2370      6D616E74 
 2371              	.LC65:
 2372 0330 70617261 		.ascii	"parallel 3rd formant\000"
 2372      6C6C656C 
 2372      20337264 
 2372      20666F72 
 2372      6D616E74 
 2373              	.LC66:
 2374 0345 70617261 		.ascii	"parallel 2nd formant\000"
 2374      6C6C656C 
 2374      20326E64 
 2374      20666F72 
 2374      6D616E74 
 2375              	.LC67:
 2376 035a 6F757470 		.ascii	"output low-pass\000"
 2376      7574206C 
 2376      6F772D70 
 2376      61737300 
 2377              	.LC68:
 2378 036a 70617261 		.ascii	"parallel nasal pole\000"
 2378      6C6C656C 
 2378      206E6173 
 2378      616C2070 
 2378      6F6C6500 
 2379              	.LC69:
 2380 037e 63726974 		.ascii	"crit-damped glot low-pass filter\000"
 2380      2D64616D 
 2380      70656420 
 2380      676C6F74 
 2380      206C6F77 
 2381              		.section	.bss.decay,"aw",%nobits
 2382              		.align	2
 2383              		.set	.LANCHOR47,. + 0
 2386              	decay:
 2387 0000 00000000 		.space	4
 2388              		.section	.bss.F0hz10,"aw",%nobits
 2389              		.align	2
 2390              		.set	.LANCHOR6,. + 0
 2393              	F0hz10:
 2394 0000 00000000 		.space	4
 2395              		.section	.bss.nopen,"aw",%nobits
 2396              		.align	2
 2397              		.set	.LANCHOR39,. + 0
 2400              	nopen:
 2401 0000 00000000 		.space	4
 2402              		.section	.bss.glotlast,"aw",%nobits
 2403              		.align	2
 2404              		.set	.LANCHOR51,. + 0
 2407              	glotlast:
 2408 0000 00000000 		.space	4
 2409              		.section	.rodata.amptable,"a",%progbits
 2410              		.align	2
 2411              		.set	.LANCHOR2,. + 0
 2414              	amptable:
 2415 0000 00000000 		.word	0
 2416 0004 00000000 		.word	0
 2417 0008 00000000 		.word	0
 2418 000c 00000000 		.word	0
 2419 0010 00000000 		.word	0
 2420 0014 00000000 		.word	0
 2421 0018 00000000 		.word	0
 2422 001c 00000000 		.word	0
 2423 0020 00000000 		.word	0
 2424 0024 00000000 		.word	0
 2425 0028 00000000 		.word	0
 2426 002c 00000000 		.word	0
 2427 0030 00000000 		.word	0
 2428 0034 0000C040 		.word	1086324736
 2429 0038 0000E040 		.word	1088421888
 2430 003c 00000041 		.word	1090519040
 2431 0040 00001041 		.word	1091567616
 2432 0044 00002041 		.word	1092616192
 2433 0048 00003041 		.word	1093664768
 2434 004c 00005041 		.word	1095761920
 2435 0050 00006041 		.word	1096810496
 2436 0054 00008041 		.word	1098907648
 2437 0058 00009041 		.word	1099956224
 2438 005c 0000A041 		.word	1101004800
 2439 0060 0000B041 		.word	1102053376
 2440 0064 0000C841 		.word	1103626240
 2441 0068 0000E041 		.word	1105199104
 2442 006c 00000042 		.word	1107296256
 2443 0070 00000C42 		.word	1108082688
 2444 0074 00002042 		.word	1109393408
 2445 0078 00003442 		.word	1110704128
 2446 007c 00004C42 		.word	1112276992
 2447 0080 00006442 		.word	1113849856
 2448 0084 00008042 		.word	1115684864
 2449 0088 00008E42 		.word	1116602368
 2450 008c 0000A042 		.word	1117782016
 2451 0090 0000B442 		.word	1119092736
 2452 0094 0000CA42 		.word	1120534528
 2453 0098 0000E442 		.word	1122238464
 2454 009c 00000043 		.word	1124073472
 2455 00a0 00000E43 		.word	1124990976
 2456 00a4 00001F43 		.word	1126105088
 2457 00a8 00003343 		.word	1127415808
 2458 00ac 00004A43 		.word	1128923136
 2459 00b0 00006343 		.word	1130561536
 2460 00b4 00008043 		.word	1132462080
 2461 00b8 00008E43 		.word	1133379584
 2462 00bc 00009F43 		.word	1134493696
 2463 00c0 0080B343 		.word	1135837184
 2464 00c4 0080CA43 		.word	1137344512
 2465 00c8 0080E343 		.word	1138982912
 2466 00cc 00000044 		.word	1140850688
 2467 00d0 00000E44 		.word	1141768192
 2468 00d4 00801F44 		.word	1142915072
 2469 00d8 00C03344 		.word	1144242176
 2470 00dc 00C04A44 		.word	1145749504
 2471 00e0 00C06344 		.word	1147387904
 2472 00e4 00008044 		.word	1149239296
 2473 00e8 00208E44 		.word	1150164992
 2474 00ec 00809F44 		.word	1151303680
 2475 00f0 00C0B344 		.word	1152630784
 2476 00f4 00C0CA44 		.word	1154138112
 2477 00f8 00E0E344 		.word	1155784704
 2478 00fc 00000045 		.word	1157627904
 2479 0100 00100E45 		.word	1158549504
 2480 0104 00801F45 		.word	1159692288
 2481 0108 00B03345 		.word	1161015296
 2482 010c 00C04A45 		.word	1162526720
 2483 0110 00D06345 		.word	1164169216
 2484 0114 00008045 		.word	1166016512
 2485 0118 00188E45 		.word	1166940160
 2486 011c 00809F45 		.word	1168080896
 2487 0120 00B8B345 		.word	1169405952
 2488 0124 00C0CA45 		.word	1170915328
 2489 0128 00D8E345 		.word	1172559872
 2490 012c 00000046 		.word	1174405120
 2491 0130 00140E46 		.word	1175327744
 2492 0134 007C1F46 		.word	1176468480
 2493 0138 00B83346 		.word	1177794560
 2494 013c 00C04A46 		.word	1179303936
 2495 0140 00D86346 		.word	1180948480
 2496 0144 00008046 		.word	1182793728
 2497 0148 005C8F46 		.word	1183800320
 2498 014c 0048A146 		.word	1184974848
 2499 0150 000AB746 		.word	1186400768
 2500 0154 00CCCC46 		.word	1187826688
 2501 0158 0066E646 		.word	1189504512
 2502 015c 00FEFF46 		.word	1191181824
 2503              		.section	.data.r1c,"aw",%progbits
 2504              		.align	2
 2505              		.set	.LANCHOR20,. + 0
 2508              	r1c:
 2509 0000 C8020000 		.word	.LC60
 2510 0004 00000000 		.space	20
 2510      00000000 
 2510      00000000 
 2510      00000000 
 2510      00000000 
 2511              		.section	.bss.warnsw,"aw",%nobits
 2512              		.align	2
 2513              		.set	.LANCHOR3,. + 0
 2516              	warnsw:
 2517 0000 00000000 		.space	4
 2518              		.section	.bss.amp_frica,"aw",%nobits
 2519              		.align	2
 2520              		.set	.LANCHOR9,. + 0
 2523              	amp_frica:
 2524 0000 00000000 		.space	4
 2525              		.section	.data.r3c,"aw",%progbits
 2526              		.align	2
 2527              		.set	.LANCHOR18,. + 0
 2530              	r3c:
 2531 0000 A0020000 		.word	.LC58
 2532 0004 00000000 		.space	20
 2532      00000000 
 2532      00000000 
 2532      00000000 
 2532      00000000 
 2533              		.section	.bss.amp_bypas,"aw",%nobits
 2534              		.align	2
 2535              		.set	.LANCHOR12,. + 0
 2538              	amp_bypas:
 2539 0000 00000000 		.space	4
 2540              		.section	.bss.skew,"aw",%nobits
 2541              		.align	2
 2542              		.set	.LANCHOR46,. + 0
 2545              	skew:
 2546 0000 00000000 		.space	4
 2547              		.section	.data.r1p,"aw",%progbits
 2548              		.align	2
 2549              		.set	.LANCHOR23,. + 0
 2552              	r1p:
 2553 0000 DC020000 		.word	.LC61
 2554 0004 00000000 		.space	20
 2554      00000000 
 2554      00000000 
 2554      00000000 
 2554      00000000 
 2555              		.section	.data.r5c,"aw",%progbits
 2556              		.align	2
 2557              		.set	.LANCHOR16,. + 0
 2560              	r5c:
 2561 0000 78020000 		.word	.LC56
 2562 0004 00000000 		.space	20
 2562      00000000 
 2562      00000000 
 2562      00000000 
 2562      00000000 
 2563              		.section	.bss.two_pi_t,"aw",%nobits
 2564              		.align	2
 2565              		.set	.LANCHOR1,. + 0
 2568              	two_pi_t:
 2569 0000 00000000 		.space	4
 2570              		.section	.data.r3p,"aw",%progbits
 2571              		.align	2
 2572              		.set	.LANCHOR26,. + 0
 2575              	r3p:
 2576 0000 30030000 		.word	.LC65
 2577 0004 00000000 		.space	20
 2577      00000000 
 2577      00000000 
 2577      00000000 
 2577      00000000 
 2578              		.section	.data.r7c,"aw",%progbits
 2579              		.align	2
 2580              		.set	.LANCHOR14,. + 0
 2583              	r7c:
 2584 0000 50020000 		.word	.LC54
 2585 0004 00000000 		.space	20
 2585      00000000 
 2585      00000000 
 2585      00000000 
 2585      00000000 
 2586              		.section	.data.seed.9280,"aw",%progbits
 2587              		.align	2
 2588              		.set	.LANCHOR32,. + 0
 2591              	seed.9280:
 2592 0000 05000000 		.word	5
 2593              		.section	.data.r2p,"aw",%progbits
 2594              		.align	2
 2595              		.set	.LANCHOR25,. + 0
 2598              	r2p:
 2599 0000 45030000 		.word	.LC66
 2600 0004 00000000 		.space	20
 2600      00000000 
 2600      00000000 
 2600      00000000 
 2600      00000000 
 2601              		.section	.data.r5p,"aw",%progbits
 2602              		.align	2
 2603              		.set	.LANCHOR28,. + 0
 2606              	r5p:
 2607 0000 06030000 		.word	.LC63
 2608 0004 00000000 		.space	20
 2608      00000000 
 2608      00000000 
 2608      00000000 
 2608      00000000 
 2609              		.section	.bss.amp_voice,"aw",%nobits
 2610              		.align	2
 2611              		.set	.LANCHOR43,. + 0
 2614              	amp_voice:
 2615 0000 00000000 		.space	4
 2616              		.section	.data.rlp,"aw",%progbits
 2617              		.align	2
 2618              		.set	.LANCHOR49,. + 0
 2621              	rlp:
 2622 0000 FD010000 		.word	.LC50
 2623 0004 00000000 		.space	20
 2623      00000000 
 2623      00000000 
 2623      00000000 
 2623      00000000 
 2624              		.section	.rodata.natglot,"a",%progbits
 2625              		.align	1
 2626              		.set	.LANCHOR45,. + 0
 2629              	natglot:
 2630 0000 B004     		.short	1200
 2631 0002 7604     		.short	1142
 2632 0004 4004     		.short	1088
 2633 0006 0E04     		.short	1038
 2634 0008 DF03     		.short	991
 2635 000a B403     		.short	948
 2636 000c 8B03     		.short	907
 2637 000e 6503     		.short	869
 2638 0010 4103     		.short	833
 2639 0012 1F03     		.short	799
 2640 0014 0003     		.short	768
 2641 0016 E202     		.short	738
 2642 0018 C602     		.short	710
 2643 001a AB02     		.short	683
 2644 001c 9202     		.short	658
 2645 001e 7A02     		.short	634
 2646 0020 6402     		.short	612
 2647 0022 4E02     		.short	590
 2648 0024 3A02     		.short	570
 2649 0026 2702     		.short	551
 2650 0028 1502     		.short	533
 2651 002a 0302     		.short	515
 2652 002c F301     		.short	499
 2653 002e E301     		.short	483
 2654 0030 D401     		.short	468
 2655 0032 C601     		.short	454
 2656 0034 B801     		.short	440
 2657 0036 AB01     		.short	427
 2658 0038 9F01     		.short	415
 2659 003a 9301     		.short	403
 2660 003c 8701     		.short	391
 2661 003e 7C01     		.short	380
 2662 0040 7201     		.short	370
 2663 0042 6801     		.short	360
 2664 0044 5E01     		.short	350
 2665 0046 5501     		.short	341
 2666 0048 4C01     		.short	332
 2667 004a 4301     		.short	323
 2668 004c 3B01     		.short	315
 2669 004e 3301     		.short	307
 2670 0050 2C01     		.short	300
 2671 0052 2401     		.short	292
 2672 0054 1D01     		.short	285
 2673 0056 1601     		.short	278
 2674 0058 1001     		.short	272
 2675 005a 0901     		.short	265
 2676 005c 0301     		.short	259
 2677 005e FD00     		.short	253
 2678 0060 F700     		.short	247
 2679 0062 F200     		.short	242
 2680 0064 ED00     		.short	237
 2681 0066 E700     		.short	231
 2682 0068 E200     		.short	226
 2683 006a DD00     		.short	221
 2684 006c D900     		.short	217
 2685 006e D400     		.short	212
 2686 0070 D000     		.short	208
 2687 0072 CC00     		.short	204
 2688 0074 C700     		.short	199
 2689 0076 C300     		.short	195
 2690 0078 C000     		.short	192
 2691 007a BC00     		.short	188
 2692 007c B800     		.short	184
 2693 007e B400     		.short	180
 2694 0080 B100     		.short	177
 2695 0082 AE00     		.short	174
 2696 0084 AA00     		.short	170
 2697 0086 A700     		.short	167
 2698 0088 A400     		.short	164
 2699 008a A100     		.short	161
 2700 008c 9E00     		.short	158
 2701 008e 9B00     		.short	155
 2702 0090 9900     		.short	153
 2703 0092 9600     		.short	150
 2704 0094 9300     		.short	147
 2705 0096 9100     		.short	145
 2706 0098 8E00     		.short	142
 2707 009a 8C00     		.short	140
 2708 009c 8900     		.short	137
 2709 009e 8700     		.short	135
 2710 00a0 8500     		.short	133
 2711 00a2 8300     		.short	131
 2712 00a4 8000     		.short	128
 2713 00a6 7E00     		.short	126
 2714 00a8 7C00     		.short	124
 2715 00aa 7A00     		.short	122
 2716 00ac 7800     		.short	120
 2717 00ae 7700     		.short	119
 2718 00b0 7500     		.short	117
 2719 00b2 7300     		.short	115
 2720 00b4 7100     		.short	113
 2721 00b6 6F00     		.short	111
 2722 00b8 6E00     		.short	110
 2723 00ba 6C00     		.short	108
 2724 00bc 6A00     		.short	106
 2725 00be 6900     		.short	105
 2726 00c0 6700     		.short	103
 2727 00c2 6600     		.short	102
 2728 00c4 6400     		.short	100
 2729 00c6 6300     		.short	99
 2730 00c8 6100     		.short	97
 2731 00ca 6000     		.short	96
 2732 00cc 5F00     		.short	95
 2733 00ce 5D00     		.short	93
 2734 00d0 5C00     		.short	92
 2735 00d2 5B00     		.short	91
 2736 00d4 5A00     		.short	90
 2737 00d6 5800     		.short	88
 2738 00d8 5700     		.short	87
 2739 00da 5600     		.short	86
 2740 00dc 5500     		.short	85
 2741 00de 5400     		.short	84
 2742 00e0 5300     		.short	83
 2743 00e2 5200     		.short	82
 2744 00e4 5000     		.short	80
 2745 00e6 4F00     		.short	79
 2746 00e8 4E00     		.short	78
 2747 00ea 4D00     		.short	77
 2748 00ec 4C00     		.short	76
 2749 00ee 4B00     		.short	75
 2750 00f0 4B00     		.short	75
 2751 00f2 4A00     		.short	74
 2752 00f4 4900     		.short	73
 2753 00f6 4800     		.short	72
 2754 00f8 4700     		.short	71
 2755 00fa 4600     		.short	70
 2756 00fc 4500     		.short	69
 2757 00fe 4400     		.short	68
 2758 0100 4400     		.short	68
 2759 0102 4300     		.short	67
 2760 0104 4200     		.short	66
 2761 0106 4100     		.short	65
 2762 0108 4000     		.short	64
 2763 010a 4000     		.short	64
 2764 010c 3F00     		.short	63
 2765 010e 3E00     		.short	62
 2766 0110 3D00     		.short	61
 2767 0112 3D00     		.short	61
 2768 0114 3C00     		.short	60
 2769 0116 3B00     		.short	59
 2770 0118 3B00     		.short	59
 2771 011a 3A00     		.short	58
 2772 011c 3900     		.short	57
 2773 011e 3900     		.short	57
 2774 0120 3800     		.short	56
 2775 0122 3800     		.short	56
 2776 0124 3700     		.short	55
 2777 0126 3700     		.short	55
 2778 0128 3600     		.short	54
 2779 012a 3600     		.short	54
 2780 012c 3500     		.short	53
 2781 012e 3500     		.short	53
 2782 0130 3400     		.short	52
 2783 0132 3400     		.short	52
 2784 0134 3300     		.short	51
 2785 0136 3300     		.short	51
 2786 0138 3200     		.short	50
 2787 013a 3200     		.short	50
 2788 013c 3100     		.short	49
 2789 013e 3100     		.short	49
 2790 0140 3000     		.short	48
 2791 0142 3000     		.short	48
 2792 0144 2F00     		.short	47
 2793 0146 2F00     		.short	47
 2794 0148 2E00     		.short	46
 2795 014a 2E00     		.short	46
 2796 014c 2D00     		.short	45
 2797 014e 2D00     		.short	45
 2798 0150 2C00     		.short	44
 2799 0152 2C00     		.short	44
 2800 0154 2B00     		.short	43
 2801 0156 2B00     		.short	43
 2802 0158 2A00     		.short	42
 2803 015a 2A00     		.short	42
 2804 015c 2900     		.short	41
 2805 015e 2900     		.short	41
 2806 0160 2900     		.short	41
 2807 0162 2900     		.short	41
 2808 0164 2800     		.short	40
 2809 0166 2800     		.short	40
 2810 0168 2700     		.short	39
 2811 016a 2700     		.short	39
 2812 016c 2600     		.short	38
 2813 016e 2600     		.short	38
 2814 0170 2600     		.short	38
 2815 0172 2600     		.short	38
 2816 0174 2500     		.short	37
 2817 0176 2500     		.short	37
 2818 0178 2400     		.short	36
 2819 017a 2400     		.short	36
 2820 017c 2400     		.short	36
 2821 017e 2400     		.short	36
 2822 0180 2300     		.short	35
 2823 0182 2300     		.short	35
 2824 0184 2300     		.short	35
 2825 0186 2300     		.short	35
 2826 0188 2200     		.short	34
 2827 018a 2200     		.short	34
 2828 018c 2100     		.short	33
 2829 018e 2100     		.short	33
 2830 0190 2100     		.short	33
 2831 0192 2100     		.short	33
 2832 0194 2000     		.short	32
 2833 0196 2000     		.short	32
 2834 0198 2000     		.short	32
 2835 019a 2000     		.short	32
 2836 019c 1F00     		.short	31
 2837 019e 1F00     		.short	31
 2838 01a0 1F00     		.short	31
 2839 01a2 1F00     		.short	31
 2840 01a4 1E00     		.short	30
 2841 01a6 1E00     		.short	30
 2842 01a8 1E00     		.short	30
 2843 01aa 1E00     		.short	30
 2844 01ac 1D00     		.short	29
 2845 01ae 1D00     		.short	29
 2846 01b0 1D00     		.short	29
 2847 01b2 1D00     		.short	29
 2848 01b4 1C00     		.short	28
 2849 01b6 1C00     		.short	28
 2850 01b8 1C00     		.short	28
 2851 01ba 1C00     		.short	28
 2852 01bc 1B00     		.short	27
 2853 01be 1B00     		.short	27
 2854              		.section	.data.r6c,"aw",%progbits
 2855              		.align	2
 2856              		.set	.LANCHOR15,. + 0
 2859              	r6c:
 2860 0000 64020000 		.word	.LC55
 2861 0004 00000000 		.space	20
 2861      00000000 
 2861      00000000 
 2861      00000000 
 2861      00000000 
 2862              		.section	.bss.minus_pi_t,"aw",%nobits
 2863              		.align	2
 2864              		.set	.LANCHOR0,. + 0
 2867              	minus_pi_t:
 2868 0000 00000000 		.space	4
 2869              		.section	.data.rnpc,"aw",%progbits
 2870              		.align	2
 2871              		.set	.LANCHOR21,. + 0
 2874              	rnpc:
 2875 0000 29020000 		.word	.LC52
 2876 0004 00000000 		.space	20
 2876      00000000 
 2876      00000000 
 2876      00000000 
 2876      00000000 
 2877              		.section	.bss.onemd,"aw",%nobits
 2878              		.align	2
 2879              		.set	.LANCHOR48,. + 0
 2882              	onemd:
 2883 0000 00000000 		.space	4
 2884              		.section	.data.rnz,"aw",%progbits
 2885              		.align	2
 2886              		.set	.LANCHOR22,. + 0
 2889              	rnz:
 2890 0000 16020000 		.word	.LC51
 2891 0004 00000000 		.space	20
 2891      00000000 
 2891      00000000 
 2891      00000000 
 2891      00000000 
 2892              		.section	.bss.vlast,"aw",%nobits
 2893              		.align	2
 2894              		.set	.LANCHOR50,. + 0
 2897              	vlast:
 2898 0000 00000000 		.space	4
 2899              		.section	.data.rnpp,"aw",%progbits
 2900              		.align	2
 2901              		.set	.LANCHOR24,. + 0
 2904              	rnpp:
 2905 0000 6A030000 		.word	.LC68
 2906 0004 00000000 		.space	20
 2906      00000000 
 2906      00000000 
 2906      00000000 
 2906      00000000 
 2907              		.section	.data.rout,"aw",%progbits
 2908              		.align	2
 2909              		.set	.LANCHOR30,. + 0
 2912              	rout:
 2913 0000 5A030000 		.word	.LC67
 2914 0004 00000000 		.space	20
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2914      00000000 
 2915              		.section	.data.par_name,"aw",%progbits
 2916              		.align	2
 2917              		.set	.LANCHOR5,. + 0
 2920              	par_name:
 2921 0000 36010000 		.word	.LC10
 2922 0004 3D010000 		.word	.LC11
 2923 0008 42010000 		.word	.LC12
 2924 000c 47010000 		.word	.LC13
 2925 0010 4C010000 		.word	.LC14
 2926 0014 51010000 		.word	.LC15
 2927 0018 56010000 		.word	.LC16
 2928 001c 5B010000 		.word	.LC17
 2929 0020 60010000 		.word	.LC18
 2930 0024 65010000 		.word	.LC19
 2931 0028 6A010000 		.word	.LC20
 2932 002c 6F010000 		.word	.LC21
 2933 0030 74010000 		.word	.LC22
 2934 0034 79010000 		.word	.LC23
 2935 0038 7E010000 		.word	.LC24
 2936 003c 84010000 		.word	.LC25
 2937 0040 8A010000 		.word	.LC26
 2938 0044 90010000 		.word	.LC27
 2939 0048 96010000 		.word	.LC28
 2940 004c 99010000 		.word	.LC29
 2941 0050 9F010000 		.word	.LC30
 2942 0054 A5010000 		.word	.LC31
 2943 0058 AB010000 		.word	.LC32
 2944 005c AE010000 		.word	.LC33
 2945 0060 B4010000 		.word	.LC34
 2946 0064 B7010000 		.word	.LC35
 2947 0068 BD010000 		.word	.LC36
 2948 006c C0010000 		.word	.LC37
 2949 0070 C6010000 		.word	.LC38
 2950 0074 C9010000 		.word	.LC39
 2951 0078 CF010000 		.word	.LC40
 2952 007c D2010000 		.word	.LC41
 2953 0080 D8010000 		.word	.LC42
 2954 0084 DB010000 		.word	.LC43
 2955 0088 E1010000 		.word	.LC44
 2956 008c E4010000 		.word	.LC45
 2957 0090 EA010000 		.word	.LC46
 2958 0094 EE010000 		.word	.LC47
 2959 0098 F1010000 		.word	.LC48
 2960 009c F7010000 		.word	.LC49
 2961              		.text
 2962              	.Letext0:
 2963              		.file 2 "/opt/ARM/arm-linaro-eabi-4.6/lib/gcc/arm-none-eabi/4.7.3/include/stdint-gcc.h"
 2964              		.file 3 "/opt/ARM/arm-linaro-eabi-4.6/lib/gcc/arm-none-eabi/4.7.3/include/stddef.h"
 2965              		.file 4 "lib/rsynth-2.0-port/nsynth.h"
 2966              		.file 5 "./lib/CMSIS/Include/core_cm4.h"
 2967              		.file 6 "./inc/systick.h"
 2968              		.file 7 "/opt/ARM/arm-linaro-eabi-4.6/lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/includ
 2969              		.file 8 "/opt/ARM/arm-linaro-eabi-4.6/lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/includ
 2970              		.file 9 "/opt/ARM/arm-linaro-eabi-4.6/lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/includ
DEFINED SYMBOLS
                            *ABS*:00000000 nsynth.c
     /tmp/ccMapbel.s:21     .text.resonator:00000000 $t
     /tmp/ccMapbel.s:25     .text.resonator:00000000 resonator
     /tmp/ccMapbel.s:61     .text.setabc:00000000 $t
     /tmp/ccMapbel.s:65     .text.setabc:00000000 setabc
     /tmp/ccMapbel.s:174    .text.setabc:000000c0 $d
     /tmp/ccMapbel.s:181    .text.DBtoLIN:00000000 $t
     /tmp/ccMapbel.s:185    .text.DBtoLIN:00000000 DBtoLIN
     /tmp/ccMapbel.s:242    .text.DBtoLIN:00000040 $d
     /tmp/ccMapbel.s:252    .text.overload_warning:00000000 $t
     /tmp/ccMapbel.s:256    .text.overload_warning:00000000 overload_warning
     /tmp/ccMapbel.s:330    .text.overload_warning:00000058 $d
     /tmp/ccMapbel.s:342    .text.show_parms:00000000 $t
     /tmp/ccMapbel.s:347    .text.show_parms:00000000 show_parms
     /tmp/ccMapbel.s:416    .text.show_parms:0000004c $d
     /tmp/ccMapbel.s:426    .text.parwave:00000000 $t
     /tmp/ccMapbel.s:431    .text.parwave:00000000 parwave
     /tmp/ccMapbel.s:689    .text.parwave:000001c8 $d
     /tmp/ccMapbel.s:716    .text.parwave:0000022c $t
     /tmp/ccMapbel.s:1180   .text.parwave:00000520 $d
     /tmp/ccMapbel.s:1224   .text.parwave:000005b4 $t
     /tmp/ccMapbel.s:1476   .text.parwave:00000788 $d
     /tmp/ccMapbel.s:1505   .text.parwave:000007f4 $t
     /tmp/ccMapbel.s:1647   .text.parwave:000008f8 $d
     /tmp/ccMapbel.s:1655   .text.parwave:00000900 $t
     /tmp/ccMapbel.s:1829   .text.parwave:000009f8 $d
     /tmp/ccMapbel.s:1869   .text.parwave_init:00000000 $t
     /tmp/ccMapbel.s:1874   .text.parwave_init:00000000 parwave_init
     /tmp/ccMapbel.s:2047   .text.parwave_init:000000e0 $d
     /tmp/ccMapbel.s:2920   .data.par_name:00000000 par_name
     /tmp/ccMapbel.s:2206   .bss.time_count:00000000 time_count
     /tmp/ccMapbel.s:2082   .bss.vwave:00000000 $d
     /tmp/ccMapbel.s:2086   .bss.vwave:00000000 vwave
     /tmp/ccMapbel.s:2089   .bss.AVdb:00000000 $d
     /tmp/ccMapbel.s:2093   .bss.AVdb:00000000 AVdb
     /tmp/ccMapbel.s:2096   .data.r2c:00000000 $d
     /tmp/ccMapbel.s:2100   .data.r2c:00000000 r2c
     /tmp/ccMapbel.s:2104   .data.rgl:00000000 $d
     /tmp/ccMapbel.s:2108   .data.rgl:00000000 rgl
     /tmp/ccMapbel.s:2112   .bss.nlast:00000000 $d
     /tmp/ccMapbel.s:2116   .bss.nlast:00000000 nlast
     /tmp/ccMapbel.s:2119   .data.r4c:00000000 $d
     /tmp/ccMapbel.s:2123   .data.r4c:00000000 r4c
     /tmp/ccMapbel.s:2127   .bss.Kskew:00000000 $d
     /tmp/ccMapbel.s:2131   .bss.Kskew:00000000 Kskew
     /tmp/ccMapbel.s:2134   .bss.natglot_a:00000000 $d
     /tmp/ccMapbel.s:2138   .bss.natglot_a:00000000 natglot_a
     /tmp/ccMapbel.s:2141   .bss.natglot_b:00000000 $d
     /tmp/ccMapbel.s:2145   .bss.natglot_b:00000000 natglot_b
     /tmp/ccMapbel.s:2148   .rodata.doublet.9205:00000000 $d
     /tmp/ccMapbel.s:2152   .rodata.doublet.9205:00000000 doublet.9205
     /tmp/ccMapbel.s:2157   .bss.names.9184:00000000 $d
     /tmp/ccMapbel.s:2161   .bss.names.9184:00000000 names.9184
     /tmp/ccMapbel.s:2164   .data.r4p:00000000 $d
     /tmp/ccMapbel.s:2168   .data.r4p:00000000 r4p
     /tmp/ccMapbel.s:2172   .data.r8c:00000000 $d
     /tmp/ccMapbel.s:2176   .data.r8c:00000000 r8c
     /tmp/ccMapbel.s:2180   .bss.amp_breth:00000000 $d
     /tmp/ccMapbel.s:2184   .bss.amp_breth:00000000 amp_breth
     /tmp/ccMapbel.s:2187   .data.r6p:00000000 $d
     /tmp/ccMapbel.s:2191   .data.r6p:00000000 r6p
     /tmp/ccMapbel.s:2195   .bss.amp_aspir:00000000 $d
     /tmp/ccMapbel.s:2199   .bss.amp_aspir:00000000 amp_aspir
     /tmp/ccMapbel.s:2202   .bss.time_count:00000000 $d
     /tmp/ccMapbel.s:2209   .bss.par_amp_voice:00000000 $d
     /tmp/ccMapbel.s:2213   .bss.par_amp_voice:00000000 par_amp_voice
     /tmp/ccMapbel.s:2216   .bss.nper:00000000 $d
     /tmp/ccMapbel.s:2220   .bss.nper:00000000 nper
     /tmp/ccMapbel.s:2223   .bss.nmod:00000000 $d
     /tmp/ccMapbel.s:2227   .bss.nmod:00000000 nmod
     /tmp/ccMapbel.s:2230   .bss.T0:00000000 $d
     /tmp/ccMapbel.s:2234   .bss.T0:00000000 T0
     /tmp/ccMapbel.s:2382   .bss.decay:00000000 $d
     /tmp/ccMapbel.s:2386   .bss.decay:00000000 decay
     /tmp/ccMapbel.s:2389   .bss.F0hz10:00000000 $d
     /tmp/ccMapbel.s:2393   .bss.F0hz10:00000000 F0hz10
     /tmp/ccMapbel.s:2396   .bss.nopen:00000000 $d
     /tmp/ccMapbel.s:2400   .bss.nopen:00000000 nopen
     /tmp/ccMapbel.s:2403   .bss.glotlast:00000000 $d
     /tmp/ccMapbel.s:2407   .bss.glotlast:00000000 glotlast
     /tmp/ccMapbel.s:2410   .rodata.amptable:00000000 $d
     /tmp/ccMapbel.s:2414   .rodata.amptable:00000000 amptable
     /tmp/ccMapbel.s:2504   .data.r1c:00000000 $d
     /tmp/ccMapbel.s:2508   .data.r1c:00000000 r1c
     /tmp/ccMapbel.s:2512   .bss.warnsw:00000000 $d
     /tmp/ccMapbel.s:2516   .bss.warnsw:00000000 warnsw
     /tmp/ccMapbel.s:2519   .bss.amp_frica:00000000 $d
     /tmp/ccMapbel.s:2523   .bss.amp_frica:00000000 amp_frica
     /tmp/ccMapbel.s:2526   .data.r3c:00000000 $d
     /tmp/ccMapbel.s:2530   .data.r3c:00000000 r3c
     /tmp/ccMapbel.s:2534   .bss.amp_bypas:00000000 $d
     /tmp/ccMapbel.s:2538   .bss.amp_bypas:00000000 amp_bypas
     /tmp/ccMapbel.s:2541   .bss.skew:00000000 $d
     /tmp/ccMapbel.s:2545   .bss.skew:00000000 skew
     /tmp/ccMapbel.s:2548   .data.r1p:00000000 $d
     /tmp/ccMapbel.s:2552   .data.r1p:00000000 r1p
     /tmp/ccMapbel.s:2556   .data.r5c:00000000 $d
     /tmp/ccMapbel.s:2560   .data.r5c:00000000 r5c
     /tmp/ccMapbel.s:2564   .bss.two_pi_t:00000000 $d
     /tmp/ccMapbel.s:2568   .bss.two_pi_t:00000000 two_pi_t
     /tmp/ccMapbel.s:2571   .data.r3p:00000000 $d
     /tmp/ccMapbel.s:2575   .data.r3p:00000000 r3p
     /tmp/ccMapbel.s:2579   .data.r7c:00000000 $d
     /tmp/ccMapbel.s:2583   .data.r7c:00000000 r7c
     /tmp/ccMapbel.s:2587   .data.seed.9280:00000000 $d
     /tmp/ccMapbel.s:2591   .data.seed.9280:00000000 seed.9280
     /tmp/ccMapbel.s:2594   .data.r2p:00000000 $d
     /tmp/ccMapbel.s:2598   .data.r2p:00000000 r2p
     /tmp/ccMapbel.s:2602   .data.r5p:00000000 $d
     /tmp/ccMapbel.s:2606   .data.r5p:00000000 r5p
     /tmp/ccMapbel.s:2610   .bss.amp_voice:00000000 $d
     /tmp/ccMapbel.s:2614   .bss.amp_voice:00000000 amp_voice
     /tmp/ccMapbel.s:2617   .data.rlp:00000000 $d
     /tmp/ccMapbel.s:2621   .data.rlp:00000000 rlp
     /tmp/ccMapbel.s:2625   .rodata.natglot:00000000 $d
     /tmp/ccMapbel.s:2629   .rodata.natglot:00000000 natglot
     /tmp/ccMapbel.s:2855   .data.r6c:00000000 $d
     /tmp/ccMapbel.s:2859   .data.r6c:00000000 r6c
     /tmp/ccMapbel.s:2863   .bss.minus_pi_t:00000000 $d
     /tmp/ccMapbel.s:2867   .bss.minus_pi_t:00000000 minus_pi_t
     /tmp/ccMapbel.s:2870   .data.rnpc:00000000 $d
     /tmp/ccMapbel.s:2874   .data.rnpc:00000000 rnpc
     /tmp/ccMapbel.s:2878   .bss.onemd:00000000 $d
     /tmp/ccMapbel.s:2882   .bss.onemd:00000000 onemd
     /tmp/ccMapbel.s:2885   .data.rnz:00000000 $d
     /tmp/ccMapbel.s:2889   .data.rnz:00000000 rnz
     /tmp/ccMapbel.s:2893   .bss.vlast:00000000 $d
     /tmp/ccMapbel.s:2897   .bss.vlast:00000000 vlast
     /tmp/ccMapbel.s:2900   .data.rnpp:00000000 $d
     /tmp/ccMapbel.s:2904   .data.rnpp:00000000 rnpp
     /tmp/ccMapbel.s:2908   .data.rout:00000000 $d
     /tmp/ccMapbel.s:2912   .data.rout:00000000 rout
     /tmp/ccMapbel.s:2916   .data.par_name:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/ccMapbel.s:2081   .text.parwave_init:00000154 $t

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_d2f
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
exp
cos
printf
__aeabi_i2d
__aeabi_ddiv
log10
strlen
__aeabi_d2iz
sin
